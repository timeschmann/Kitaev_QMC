#include <armadillo>
#include <complex>

using namespace arma;

cx_mat def_matrix()
{
   cx_mat A(400,400, fill::zeros);
   A(0, 1) = std::complex<double>(0.0, 2.0*-1.0);
   A(1, 0) = -std::complex<double>(0.0, 2.0*-1.0);
   A(0, 2) = std::complex<double>(0.0, 2.0*-1.0);
   A(2, 0) = -std::complex<double>(0.0, 2.0*-1.0);
   A(0, 3) = std::complex<double>(0.0, 2.0*-2.5);
   A(3, 0) = -std::complex<double>(0.0, 2.0*-2.5);
   A(0, 37) = std::complex<double>(0.0, 2.0*-1.0);
   A(37, 0) = -std::complex<double>(0.0, 2.0*-1.0);
   A(0, 362) = std::complex<double>(0.0, 2.0*-1.0);
   A(362, 0) = -std::complex<double>(0.0, 2.0*-1.0);
   A(1, 3) = std::complex<double>(0.0, 2.0*-1.0);
   A(3, 1) = -std::complex<double>(0.0, 2.0*-1.0);
   A(1, 4) = std::complex<double>(0.0, 2.0*-1.0);
   A(4, 1) = -std::complex<double>(0.0, 2.0*-1.0);
   A(1, 363) = std::complex<double>(0.0, 2.0*-1.0);
   A(363, 1) = -std::complex<double>(0.0, 2.0*-1.0);
   A(1, 366) = std::complex<double>(0.0, 2.0*-2.5);
   A(366, 1) = -std::complex<double>(0.0, 2.0*-2.5);
   A(2, 3) = std::complex<double>(0.0, 2.0*-1.0);
   A(3, 2) = -std::complex<double>(0.0, 2.0*-1.0);
   A(2, 39) = std::complex<double>(0.0, 2.0*-1.0);
   A(39, 2) = -std::complex<double>(0.0, 2.0*-1.0);
   A(2, 40) = std::complex<double>(0.0, 2.0*-1.0);
   A(40, 2) = -std::complex<double>(0.0, 2.0*-1.0);
   A(2, 77) = std::complex<double>(0.0, 2.0*-2.5);
   A(77, 2) = -std::complex<double>(0.0, 2.0*-2.5);
   A(3, 6) = std::complex<double>(0.0, 2.0*-1.0);
   A(6, 3) = -std::complex<double>(0.0, 2.0*-1.0);
   A(3, 41) = std::complex<double>(0.0, 2.0*-1.0);
   A(41, 3) = -std::complex<double>(0.0, 2.0*-1.0);
   A(4, 5) = std::complex<double>(0.0, 2.0*-1.0);
   A(5, 4) = -std::complex<double>(0.0, 2.0*-1.0);
   A(4, 6) = std::complex<double>(0.0, 2.0*-1.0);
   A(6, 4) = -std::complex<double>(0.0, 2.0*-1.0);
   A(4, 7) = std::complex<double>(0.0, 2.0*-2.5);
   A(7, 4) = -std::complex<double>(0.0, 2.0*-2.5);
   A(4, 366) = std::complex<double>(0.0, 2.0*-1.0);
   A(366, 4) = -std::complex<double>(0.0, 2.0*-1.0);
   A(5, 7) = std::complex<double>(0.0, 2.0*-1.0);
   A(7, 5) = -std::complex<double>(0.0, 2.0*-1.0);
   A(5, 8) = std::complex<double>(0.0, 2.0*-1.0);
   A(8, 5) = -std::complex<double>(0.0, 2.0*-1.0);
   A(5, 367) = std::complex<double>(0.0, 2.0*-1.0);
   A(367, 5) = -std::complex<double>(0.0, 2.0*-1.0);
   A(5, 370) = std::complex<double>(0.0, 2.0*-2.5);
   A(370, 5) = -std::complex<double>(0.0, 2.0*-2.5);
   A(6, 7) = std::complex<double>(0.0, 2.0*-1.0);
   A(7, 6) = -std::complex<double>(0.0, 2.0*-1.0);
   A(6, 41) = std::complex<double>(0.0, 2.0*-2.5);
   A(41, 6) = -std::complex<double>(0.0, 2.0*-2.5);
   A(6, 44) = std::complex<double>(0.0, 2.0*-1.0);
   A(44, 6) = -std::complex<double>(0.0, 2.0*-1.0);
   A(7, 10) = std::complex<double>(0.0, 2.0*-1.0);
   A(10, 7) = -std::complex<double>(0.0, 2.0*-1.0);
   A(7, 45) = std::complex<double>(0.0, 2.0*-1.0);
   A(45, 7) = -std::complex<double>(0.0, 2.0*-1.0);
   A(8, 9) = std::complex<double>(0.0, 2.0*-1.0);
   A(9, 8) = -std::complex<double>(0.0, 2.0*-1.0);
   A(8, 10) = std::complex<double>(0.0, 2.0*-1.0);
   A(10, 8) = -std::complex<double>(0.0, 2.0*-1.0);
   A(8, 11) = std::complex<double>(0.0, 2.0*-2.5);
   A(11, 8) = -std::complex<double>(0.0, 2.0*-2.5);
   A(8, 370) = std::complex<double>(0.0, 2.0*-1.0);
   A(370, 8) = -std::complex<double>(0.0, 2.0*-1.0);
   A(9, 11) = std::complex<double>(0.0, 2.0*-1.0);
   A(11, 9) = -std::complex<double>(0.0, 2.0*-1.0);
   A(9, 12) = std::complex<double>(0.0, 2.0*-1.0);
   A(12, 9) = -std::complex<double>(0.0, 2.0*-1.0);
   A(9, 371) = std::complex<double>(0.0, 2.0*-1.0);
   A(371, 9) = -std::complex<double>(0.0, 2.0*-1.0);
   A(9, 374) = std::complex<double>(0.0, 2.0*-2.5);
   A(374, 9) = -std::complex<double>(0.0, 2.0*-2.5);
   A(10, 11) = std::complex<double>(0.0, 2.0*-1.0);
   A(11, 10) = -std::complex<double>(0.0, 2.0*-1.0);
   A(10, 45) = std::complex<double>(0.0, 2.0*-2.5);
   A(45, 10) = -std::complex<double>(0.0, 2.0*-2.5);
   A(10, 48) = std::complex<double>(0.0, 2.0*-1.0);
   A(48, 10) = -std::complex<double>(0.0, 2.0*-1.0);
   A(11, 14) = std::complex<double>(0.0, 2.0*-1.0);
   A(14, 11) = -std::complex<double>(0.0, 2.0*-1.0);
   A(11, 49) = std::complex<double>(0.0, 2.0*-1.0);
   A(49, 11) = -std::complex<double>(0.0, 2.0*-1.0);
   A(12, 13) = std::complex<double>(0.0, 2.0*-1.0);
   A(13, 12) = -std::complex<double>(0.0, 2.0*-1.0);
   A(12, 14) = std::complex<double>(0.0, 2.0*-1.0);
   A(14, 12) = -std::complex<double>(0.0, 2.0*-1.0);
   A(12, 15) = std::complex<double>(0.0, 2.0*-2.5);
   A(15, 12) = -std::complex<double>(0.0, 2.0*-2.5);
   A(12, 374) = std::complex<double>(0.0, 2.0*-1.0);
   A(374, 12) = -std::complex<double>(0.0, 2.0*-1.0);
   A(13, 15) = std::complex<double>(0.0, 2.0*-1.0);
   A(15, 13) = -std::complex<double>(0.0, 2.0*-1.0);
   A(13, 16) = std::complex<double>(0.0, 2.0*-1.0);
   A(16, 13) = -std::complex<double>(0.0, 2.0*-1.0);
   A(13, 375) = std::complex<double>(0.0, 2.0*-1.0);
   A(375, 13) = -std::complex<double>(0.0, 2.0*-1.0);
   A(13, 378) = std::complex<double>(0.0, 2.0*-2.5);
   A(378, 13) = -std::complex<double>(0.0, 2.0*-2.5);
   A(14, 15) = std::complex<double>(0.0, 2.0*-1.0);
   A(15, 14) = -std::complex<double>(0.0, 2.0*-1.0);
   A(14, 49) = std::complex<double>(0.0, 2.0*-2.5);
   A(49, 14) = -std::complex<double>(0.0, 2.0*-2.5);
   A(14, 52) = std::complex<double>(0.0, 2.0*-1.0);
   A(52, 14) = -std::complex<double>(0.0, 2.0*-1.0);
   A(15, 18) = std::complex<double>(0.0, 2.0*-1.0);
   A(18, 15) = -std::complex<double>(0.0, 2.0*-1.0);
   A(15, 53) = std::complex<double>(0.0, 2.0*-1.0);
   A(53, 15) = -std::complex<double>(0.0, 2.0*-1.0);
   A(16, 17) = std::complex<double>(0.0, 2.0*-1.0);
   A(17, 16) = -std::complex<double>(0.0, 2.0*-1.0);
   A(16, 18) = std::complex<double>(0.0, 2.0*-1.0);
   A(18, 16) = -std::complex<double>(0.0, 2.0*-1.0);
   A(16, 19) = std::complex<double>(0.0, 2.0*-2.5);
   A(19, 16) = -std::complex<double>(0.0, 2.0*-2.5);
   A(16, 378) = std::complex<double>(0.0, 2.0*-1.0);
   A(378, 16) = -std::complex<double>(0.0, 2.0*-1.0);
   A(17, 19) = std::complex<double>(0.0, 2.0*-1.0);
   A(19, 17) = -std::complex<double>(0.0, 2.0*-1.0);
   A(17, 20) = std::complex<double>(0.0, 2.0*-1.0);
   A(20, 17) = -std::complex<double>(0.0, 2.0*-1.0);
   A(17, 379) = std::complex<double>(0.0, 2.0*-1.0);
   A(379, 17) = -std::complex<double>(0.0, 2.0*-1.0);
   A(17, 382) = std::complex<double>(0.0, 2.0*-2.5);
   A(382, 17) = -std::complex<double>(0.0, 2.0*-2.5);
   A(18, 19) = std::complex<double>(0.0, 2.0*-1.0);
   A(19, 18) = -std::complex<double>(0.0, 2.0*-1.0);
   A(18, 53) = std::complex<double>(0.0, 2.0*-2.5);
   A(53, 18) = -std::complex<double>(0.0, 2.0*-2.5);
   A(18, 56) = std::complex<double>(0.0, 2.0*-1.0);
   A(56, 18) = -std::complex<double>(0.0, 2.0*-1.0);
   A(19, 22) = std::complex<double>(0.0, 2.0*-1.0);
   A(22, 19) = -std::complex<double>(0.0, 2.0*-1.0);
   A(19, 57) = std::complex<double>(0.0, 2.0*-1.0);
   A(57, 19) = -std::complex<double>(0.0, 2.0*-1.0);
   A(20, 21) = std::complex<double>(0.0, 2.0*-1.0);
   A(21, 20) = -std::complex<double>(0.0, 2.0*-1.0);
   A(20, 22) = std::complex<double>(0.0, 2.0*-1.0);
   A(22, 20) = -std::complex<double>(0.0, 2.0*-1.0);
   A(20, 23) = std::complex<double>(0.0, 2.0*-2.5);
   A(23, 20) = -std::complex<double>(0.0, 2.0*-2.5);
   A(20, 382) = std::complex<double>(0.0, 2.0*-1.0);
   A(382, 20) = -std::complex<double>(0.0, 2.0*-1.0);
   A(21, 23) = std::complex<double>(0.0, 2.0*-1.0);
   A(23, 21) = -std::complex<double>(0.0, 2.0*-1.0);
   A(21, 24) = std::complex<double>(0.0, 2.0*-1.0);
   A(24, 21) = -std::complex<double>(0.0, 2.0*-1.0);
   A(21, 383) = std::complex<double>(0.0, 2.0*-1.0);
   A(383, 21) = -std::complex<double>(0.0, 2.0*-1.0);
   A(21, 386) = std::complex<double>(0.0, 2.0*-2.5);
   A(386, 21) = -std::complex<double>(0.0, 2.0*-2.5);
   A(22, 23) = std::complex<double>(0.0, 2.0*-1.0);
   A(23, 22) = -std::complex<double>(0.0, 2.0*-1.0);
   A(22, 57) = std::complex<double>(0.0, 2.0*-2.5);
   A(57, 22) = -std::complex<double>(0.0, 2.0*-2.5);
   A(22, 60) = std::complex<double>(0.0, 2.0*-1.0);
   A(60, 22) = -std::complex<double>(0.0, 2.0*-1.0);
   A(23, 26) = std::complex<double>(0.0, 2.0*-1.0);
   A(26, 23) = -std::complex<double>(0.0, 2.0*-1.0);
   A(23, 61) = std::complex<double>(0.0, 2.0*-1.0);
   A(61, 23) = -std::complex<double>(0.0, 2.0*-1.0);
   A(24, 25) = std::complex<double>(0.0, 2.0*-1.0);
   A(25, 24) = -std::complex<double>(0.0, 2.0*-1.0);
   A(24, 26) = std::complex<double>(0.0, 2.0*-1.0);
   A(26, 24) = -std::complex<double>(0.0, 2.0*-1.0);
   A(24, 27) = std::complex<double>(0.0, 2.0*-2.5);
   A(27, 24) = -std::complex<double>(0.0, 2.0*-2.5);
   A(24, 386) = std::complex<double>(0.0, 2.0*-1.0);
   A(386, 24) = -std::complex<double>(0.0, 2.0*-1.0);
   A(25, 27) = std::complex<double>(0.0, 2.0*-1.0);
   A(27, 25) = -std::complex<double>(0.0, 2.0*-1.0);
   A(25, 28) = std::complex<double>(0.0, 2.0*-1.0);
   A(28, 25) = -std::complex<double>(0.0, 2.0*-1.0);
   A(25, 387) = std::complex<double>(0.0, 2.0*-1.0);
   A(387, 25) = -std::complex<double>(0.0, 2.0*-1.0);
   A(25, 390) = std::complex<double>(0.0, 2.0*-2.5);
   A(390, 25) = -std::complex<double>(0.0, 2.0*-2.5);
   A(26, 27) = std::complex<double>(0.0, 2.0*-1.0);
   A(27, 26) = -std::complex<double>(0.0, 2.0*-1.0);
   A(26, 61) = std::complex<double>(0.0, 2.0*-2.5);
   A(61, 26) = -std::complex<double>(0.0, 2.0*-2.5);
   A(26, 64) = std::complex<double>(0.0, 2.0*-1.0);
   A(64, 26) = -std::complex<double>(0.0, 2.0*-1.0);
   A(27, 30) = std::complex<double>(0.0, 2.0*-1.0);
   A(30, 27) = -std::complex<double>(0.0, 2.0*-1.0);
   A(27, 65) = std::complex<double>(0.0, 2.0*-1.0);
   A(65, 27) = -std::complex<double>(0.0, 2.0*-1.0);
   A(28, 29) = std::complex<double>(0.0, 2.0*-1.0);
   A(29, 28) = -std::complex<double>(0.0, 2.0*-1.0);
   A(28, 30) = std::complex<double>(0.0, 2.0*-1.0);
   A(30, 28) = -std::complex<double>(0.0, 2.0*-1.0);
   A(28, 31) = std::complex<double>(0.0, 2.0*-2.5);
   A(31, 28) = -std::complex<double>(0.0, 2.0*-2.5);
   A(28, 390) = std::complex<double>(0.0, 2.0*-1.0);
   A(390, 28) = -std::complex<double>(0.0, 2.0*-1.0);
   A(29, 31) = std::complex<double>(0.0, 2.0*-1.0);
   A(31, 29) = -std::complex<double>(0.0, 2.0*-1.0);
   A(29, 32) = std::complex<double>(0.0, 2.0*-1.0);
   A(32, 29) = -std::complex<double>(0.0, 2.0*-1.0);
   A(29, 391) = std::complex<double>(0.0, 2.0*-1.0);
   A(391, 29) = -std::complex<double>(0.0, 2.0*-1.0);
   A(29, 394) = std::complex<double>(0.0, 2.0*-2.5);
   A(394, 29) = -std::complex<double>(0.0, 2.0*-2.5);
   A(30, 31) = std::complex<double>(0.0, 2.0*-1.0);
   A(31, 30) = -std::complex<double>(0.0, 2.0*-1.0);
   A(30, 65) = std::complex<double>(0.0, 2.0*-2.5);
   A(65, 30) = -std::complex<double>(0.0, 2.0*-2.5);
   A(30, 68) = std::complex<double>(0.0, 2.0*-1.0);
   A(68, 30) = -std::complex<double>(0.0, 2.0*-1.0);
   A(31, 34) = std::complex<double>(0.0, 2.0*-1.0);
   A(34, 31) = -std::complex<double>(0.0, 2.0*-1.0);
   A(31, 69) = std::complex<double>(0.0, 2.0*-1.0);
   A(69, 31) = -std::complex<double>(0.0, 2.0*-1.0);
   A(32, 33) = std::complex<double>(0.0, 2.0*-1.0);
   A(33, 32) = -std::complex<double>(0.0, 2.0*-1.0);
   A(32, 34) = std::complex<double>(0.0, 2.0*-1.0);
   A(34, 32) = -std::complex<double>(0.0, 2.0*-1.0);
   A(32, 35) = std::complex<double>(0.0, 2.0*-2.5);
   A(35, 32) = -std::complex<double>(0.0, 2.0*-2.5);
   A(32, 394) = std::complex<double>(0.0, 2.0*-1.0);
   A(394, 32) = -std::complex<double>(0.0, 2.0*-1.0);
   A(33, 35) = std::complex<double>(0.0, 2.0*-1.0);
   A(35, 33) = -std::complex<double>(0.0, 2.0*-1.0);
   A(33, 36) = std::complex<double>(0.0, 2.0*-1.0);
   A(36, 33) = -std::complex<double>(0.0, 2.0*-1.0);
   A(33, 395) = std::complex<double>(0.0, 2.0*-1.0);
   A(395, 33) = -std::complex<double>(0.0, 2.0*-1.0);
   A(33, 398) = std::complex<double>(0.0, 2.0*-2.5);
   A(398, 33) = -std::complex<double>(0.0, 2.0*-2.5);
   A(34, 35) = std::complex<double>(0.0, 2.0*-1.0);
   A(35, 34) = -std::complex<double>(0.0, 2.0*-1.0);
   A(34, 69) = std::complex<double>(0.0, 2.0*-2.5);
   A(69, 34) = -std::complex<double>(0.0, 2.0*-2.5);
   A(34, 72) = std::complex<double>(0.0, 2.0*-1.0);
   A(72, 34) = -std::complex<double>(0.0, 2.0*-1.0);
   A(35, 38) = std::complex<double>(0.0, 2.0*-1.0);
   A(38, 35) = -std::complex<double>(0.0, 2.0*-1.0);
   A(35, 73) = std::complex<double>(0.0, 2.0*-1.0);
   A(73, 35) = -std::complex<double>(0.0, 2.0*-1.0);
   A(36, 37) = std::complex<double>(0.0, 2.0*-1.0);
   A(37, 36) = -std::complex<double>(0.0, 2.0*-1.0);
   A(36, 38) = std::complex<double>(0.0, 2.0*-1.0);
   A(38, 36) = -std::complex<double>(0.0, 2.0*-1.0);
   A(36, 39) = std::complex<double>(0.0, 2.0*-2.5);
   A(39, 36) = -std::complex<double>(0.0, 2.0*-2.5);
   A(36, 398) = std::complex<double>(0.0, 2.0*-1.0);
   A(398, 36) = -std::complex<double>(0.0, 2.0*-1.0);
   A(37, 39) = std::complex<double>(0.0, 2.0*-1.0);
   A(39, 37) = -std::complex<double>(0.0, 2.0*-1.0);
   A(37, 362) = std::complex<double>(0.0, 2.0*-2.5);
   A(362, 37) = -std::complex<double>(0.0, 2.0*-2.5);
   A(37, 399) = std::complex<double>(0.0, 2.0*-1.0);
   A(399, 37) = -std::complex<double>(0.0, 2.0*-1.0);
   A(38, 39) = std::complex<double>(0.0, 2.0*-1.0);
   A(39, 38) = -std::complex<double>(0.0, 2.0*-1.0);
   A(38, 73) = std::complex<double>(0.0, 2.0*-2.5);
   A(73, 38) = -std::complex<double>(0.0, 2.0*-2.5);
   A(38, 76) = std::complex<double>(0.0, 2.0*-1.0);
   A(76, 38) = -std::complex<double>(0.0, 2.0*-1.0);
   A(39, 77) = std::complex<double>(0.0, 2.0*-1.0);
   A(77, 39) = -std::complex<double>(0.0, 2.0*-1.0);
   A(40, 41) = std::complex<double>(0.0, 2.0*-1.0);
   A(41, 40) = -std::complex<double>(0.0, 2.0*-1.0);
   A(40, 42) = std::complex<double>(0.0, 2.0*-1.0);
   A(42, 40) = -std::complex<double>(0.0, 2.0*-1.0);
   A(40, 43) = std::complex<double>(0.0, 2.0*-2.5);
   A(43, 40) = -std::complex<double>(0.0, 2.0*-2.5);
   A(40, 77) = std::complex<double>(0.0, 2.0*-1.0);
   A(77, 40) = -std::complex<double>(0.0, 2.0*-1.0);
   A(41, 43) = std::complex<double>(0.0, 2.0*-1.0);
   A(43, 41) = -std::complex<double>(0.0, 2.0*-1.0);
   A(41, 44) = std::complex<double>(0.0, 2.0*-1.0);
   A(44, 41) = -std::complex<double>(0.0, 2.0*-1.0);
   A(42, 43) = std::complex<double>(0.0, 2.0*-1.0);
   A(43, 42) = -std::complex<double>(0.0, 2.0*-1.0);
   A(42, 79) = std::complex<double>(0.0, 2.0*-1.0);
   A(79, 42) = -std::complex<double>(0.0, 2.0*-1.0);
   A(42, 80) = std::complex<double>(0.0, 2.0*-1.0);
   A(80, 42) = -std::complex<double>(0.0, 2.0*-1.0);
   A(42, 117) = std::complex<double>(0.0, 2.0*-2.5);
   A(117, 42) = -std::complex<double>(0.0, 2.0*-2.5);
   A(43, 46) = std::complex<double>(0.0, 2.0*-1.0);
   A(46, 43) = -std::complex<double>(0.0, 2.0*-1.0);
   A(43, 81) = std::complex<double>(0.0, 2.0*-1.0);
   A(81, 43) = -std::complex<double>(0.0, 2.0*-1.0);
   A(44, 45) = std::complex<double>(0.0, 2.0*-1.0);
   A(45, 44) = -std::complex<double>(0.0, 2.0*-1.0);
   A(44, 46) = std::complex<double>(0.0, 2.0*-1.0);
   A(46, 44) = -std::complex<double>(0.0, 2.0*-1.0);
   A(44, 47) = std::complex<double>(0.0, 2.0*-2.5);
   A(47, 44) = -std::complex<double>(0.0, 2.0*-2.5);
   A(45, 47) = std::complex<double>(0.0, 2.0*-1.0);
   A(47, 45) = -std::complex<double>(0.0, 2.0*-1.0);
   A(45, 48) = std::complex<double>(0.0, 2.0*-1.0);
   A(48, 45) = -std::complex<double>(0.0, 2.0*-1.0);
   A(46, 47) = std::complex<double>(0.0, 2.0*-1.0);
   A(47, 46) = -std::complex<double>(0.0, 2.0*-1.0);
   A(46, 81) = std::complex<double>(0.0, 2.0*-2.5);
   A(81, 46) = -std::complex<double>(0.0, 2.0*-2.5);
   A(46, 84) = std::complex<double>(0.0, 2.0*-1.0);
   A(84, 46) = -std::complex<double>(0.0, 2.0*-1.0);
   A(47, 50) = std::complex<double>(0.0, 2.0*-1.0);
   A(50, 47) = -std::complex<double>(0.0, 2.0*-1.0);
   A(47, 85) = std::complex<double>(0.0, 2.0*-1.0);
   A(85, 47) = -std::complex<double>(0.0, 2.0*-1.0);
   A(48, 49) = std::complex<double>(0.0, 2.0*-1.0);
   A(49, 48) = -std::complex<double>(0.0, 2.0*-1.0);
   A(48, 50) = std::complex<double>(0.0, 2.0*-1.0);
   A(50, 48) = -std::complex<double>(0.0, 2.0*-1.0);
   A(48, 51) = std::complex<double>(0.0, 2.0*-2.5);
   A(51, 48) = -std::complex<double>(0.0, 2.0*-2.5);
   A(49, 51) = std::complex<double>(0.0, 2.0*-1.0);
   A(51, 49) = -std::complex<double>(0.0, 2.0*-1.0);
   A(49, 52) = std::complex<double>(0.0, 2.0*-1.0);
   A(52, 49) = -std::complex<double>(0.0, 2.0*-1.0);
   A(50, 51) = std::complex<double>(0.0, 2.0*-1.0);
   A(51, 50) = -std::complex<double>(0.0, 2.0*-1.0);
   A(50, 85) = std::complex<double>(0.0, 2.0*-2.5);
   A(85, 50) = -std::complex<double>(0.0, 2.0*-2.5);
   A(50, 88) = std::complex<double>(0.0, 2.0*-1.0);
   A(88, 50) = -std::complex<double>(0.0, 2.0*-1.0);
   A(51, 54) = std::complex<double>(0.0, 2.0*-1.0);
   A(54, 51) = -std::complex<double>(0.0, 2.0*-1.0);
   A(51, 89) = std::complex<double>(0.0, 2.0*-1.0);
   A(89, 51) = -std::complex<double>(0.0, 2.0*-1.0);
   A(52, 53) = std::complex<double>(0.0, 2.0*-1.0);
   A(53, 52) = -std::complex<double>(0.0, 2.0*-1.0);
   A(52, 54) = std::complex<double>(0.0, 2.0*-1.0);
   A(54, 52) = -std::complex<double>(0.0, 2.0*-1.0);
   A(52, 55) = std::complex<double>(0.0, 2.0*-2.5);
   A(55, 52) = -std::complex<double>(0.0, 2.0*-2.5);
   A(53, 55) = std::complex<double>(0.0, 2.0*-1.0);
   A(55, 53) = -std::complex<double>(0.0, 2.0*-1.0);
   A(53, 56) = std::complex<double>(0.0, 2.0*-1.0);
   A(56, 53) = -std::complex<double>(0.0, 2.0*-1.0);
   A(54, 55) = std::complex<double>(0.0, 2.0*-1.0);
   A(55, 54) = -std::complex<double>(0.0, 2.0*-1.0);
   A(54, 89) = std::complex<double>(0.0, 2.0*-2.5);
   A(89, 54) = -std::complex<double>(0.0, 2.0*-2.5);
   A(54, 92) = std::complex<double>(0.0, 2.0*-1.0);
   A(92, 54) = -std::complex<double>(0.0, 2.0*-1.0);
   A(55, 58) = std::complex<double>(0.0, 2.0*-1.0);
   A(58, 55) = -std::complex<double>(0.0, 2.0*-1.0);
   A(55, 93) = std::complex<double>(0.0, 2.0*-1.0);
   A(93, 55) = -std::complex<double>(0.0, 2.0*-1.0);
   A(56, 57) = std::complex<double>(0.0, 2.0*-1.0);
   A(57, 56) = -std::complex<double>(0.0, 2.0*-1.0);
   A(56, 58) = std::complex<double>(0.0, 2.0*-1.0);
   A(58, 56) = -std::complex<double>(0.0, 2.0*-1.0);
   A(56, 59) = std::complex<double>(0.0, 2.0*-2.5);
   A(59, 56) = -std::complex<double>(0.0, 2.0*-2.5);
   A(57, 59) = std::complex<double>(0.0, 2.0*-1.0);
   A(59, 57) = -std::complex<double>(0.0, 2.0*-1.0);
   A(57, 60) = std::complex<double>(0.0, 2.0*-1.0);
   A(60, 57) = -std::complex<double>(0.0, 2.0*-1.0);
   A(58, 59) = std::complex<double>(0.0, 2.0*-1.0);
   A(59, 58) = -std::complex<double>(0.0, 2.0*-1.0);
   A(58, 93) = std::complex<double>(0.0, 2.0*-2.5);
   A(93, 58) = -std::complex<double>(0.0, 2.0*-2.5);
   A(58, 96) = std::complex<double>(0.0, 2.0*-1.0);
   A(96, 58) = -std::complex<double>(0.0, 2.0*-1.0);
   A(59, 62) = std::complex<double>(0.0, 2.0*-1.0);
   A(62, 59) = -std::complex<double>(0.0, 2.0*-1.0);
   A(59, 97) = std::complex<double>(0.0, 2.0*-1.0);
   A(97, 59) = -std::complex<double>(0.0, 2.0*-1.0);
   A(60, 61) = std::complex<double>(0.0, 2.0*-1.0);
   A(61, 60) = -std::complex<double>(0.0, 2.0*-1.0);
   A(60, 62) = std::complex<double>(0.0, 2.0*-1.0);
   A(62, 60) = -std::complex<double>(0.0, 2.0*-1.0);
   A(60, 63) = std::complex<double>(0.0, 2.0*-2.5);
   A(63, 60) = -std::complex<double>(0.0, 2.0*-2.5);
   A(61, 63) = std::complex<double>(0.0, 2.0*-1.0);
   A(63, 61) = -std::complex<double>(0.0, 2.0*-1.0);
   A(61, 64) = std::complex<double>(0.0, 2.0*-1.0);
   A(64, 61) = -std::complex<double>(0.0, 2.0*-1.0);
   A(62, 63) = std::complex<double>(0.0, 2.0*-1.0);
   A(63, 62) = -std::complex<double>(0.0, 2.0*-1.0);
   A(62, 97) = std::complex<double>(0.0, 2.0*-2.5);
   A(97, 62) = -std::complex<double>(0.0, 2.0*-2.5);
   A(62, 100) = std::complex<double>(0.0, 2.0*-1.0);
   A(100, 62) = -std::complex<double>(0.0, 2.0*-1.0);
   A(63, 66) = std::complex<double>(0.0, 2.0*-1.0);
   A(66, 63) = -std::complex<double>(0.0, 2.0*-1.0);
   A(63, 101) = std::complex<double>(0.0, 2.0*-1.0);
   A(101, 63) = -std::complex<double>(0.0, 2.0*-1.0);
   A(64, 65) = std::complex<double>(0.0, 2.0*-1.0);
   A(65, 64) = -std::complex<double>(0.0, 2.0*-1.0);
   A(64, 66) = std::complex<double>(0.0, 2.0*-1.0);
   A(66, 64) = -std::complex<double>(0.0, 2.0*-1.0);
   A(64, 67) = std::complex<double>(0.0, 2.0*-2.5);
   A(67, 64) = -std::complex<double>(0.0, 2.0*-2.5);
   A(65, 67) = std::complex<double>(0.0, 2.0*-1.0);
   A(67, 65) = -std::complex<double>(0.0, 2.0*-1.0);
   A(65, 68) = std::complex<double>(0.0, 2.0*-1.0);
   A(68, 65) = -std::complex<double>(0.0, 2.0*-1.0);
   A(66, 67) = std::complex<double>(0.0, 2.0*-1.0);
   A(67, 66) = -std::complex<double>(0.0, 2.0*-1.0);
   A(66, 101) = std::complex<double>(0.0, 2.0*-2.5);
   A(101, 66) = -std::complex<double>(0.0, 2.0*-2.5);
   A(66, 104) = std::complex<double>(0.0, 2.0*-1.0);
   A(104, 66) = -std::complex<double>(0.0, 2.0*-1.0);
   A(67, 70) = std::complex<double>(0.0, 2.0*-1.0);
   A(70, 67) = -std::complex<double>(0.0, 2.0*-1.0);
   A(67, 105) = std::complex<double>(0.0, 2.0*-1.0);
   A(105, 67) = -std::complex<double>(0.0, 2.0*-1.0);
   A(68, 69) = std::complex<double>(0.0, 2.0*-1.0);
   A(69, 68) = -std::complex<double>(0.0, 2.0*-1.0);
   A(68, 70) = std::complex<double>(0.0, 2.0*-1.0);
   A(70, 68) = -std::complex<double>(0.0, 2.0*-1.0);
   A(68, 71) = std::complex<double>(0.0, 2.0*-2.5);
   A(71, 68) = -std::complex<double>(0.0, 2.0*-2.5);
   A(69, 71) = std::complex<double>(0.0, 2.0*-1.0);
   A(71, 69) = -std::complex<double>(0.0, 2.0*-1.0);
   A(69, 72) = std::complex<double>(0.0, 2.0*-1.0);
   A(72, 69) = -std::complex<double>(0.0, 2.0*-1.0);
   A(70, 71) = std::complex<double>(0.0, 2.0*-1.0);
   A(71, 70) = -std::complex<double>(0.0, 2.0*-1.0);
   A(70, 105) = std::complex<double>(0.0, 2.0*-2.5);
   A(105, 70) = -std::complex<double>(0.0, 2.0*-2.5);
   A(70, 108) = std::complex<double>(0.0, 2.0*-1.0);
   A(108, 70) = -std::complex<double>(0.0, 2.0*-1.0);
   A(71, 74) = std::complex<double>(0.0, 2.0*-1.0);
   A(74, 71) = -std::complex<double>(0.0, 2.0*-1.0);
   A(71, 109) = std::complex<double>(0.0, 2.0*-1.0);
   A(109, 71) = -std::complex<double>(0.0, 2.0*-1.0);
   A(72, 73) = std::complex<double>(0.0, 2.0*-1.0);
   A(73, 72) = -std::complex<double>(0.0, 2.0*-1.0);
   A(72, 74) = std::complex<double>(0.0, 2.0*-1.0);
   A(74, 72) = -std::complex<double>(0.0, 2.0*-1.0);
   A(72, 75) = std::complex<double>(0.0, 2.0*-2.5);
   A(75, 72) = -std::complex<double>(0.0, 2.0*-2.5);
   A(73, 75) = std::complex<double>(0.0, 2.0*-1.0);
   A(75, 73) = -std::complex<double>(0.0, 2.0*-1.0);
   A(73, 76) = std::complex<double>(0.0, 2.0*-1.0);
   A(76, 73) = -std::complex<double>(0.0, 2.0*-1.0);
   A(74, 75) = std::complex<double>(0.0, 2.0*-1.0);
   A(75, 74) = -std::complex<double>(0.0, 2.0*-1.0);
   A(74, 109) = std::complex<double>(0.0, 2.0*-2.5);
   A(109, 74) = -std::complex<double>(0.0, 2.0*-2.5);
   A(74, 112) = std::complex<double>(0.0, 2.0*-1.0);
   A(112, 74) = -std::complex<double>(0.0, 2.0*-1.0);
   A(75, 78) = std::complex<double>(0.0, 2.0*-1.0);
   A(78, 75) = -std::complex<double>(0.0, 2.0*-1.0);
   A(75, 113) = std::complex<double>(0.0, 2.0*-1.0);
   A(113, 75) = -std::complex<double>(0.0, 2.0*-1.0);
   A(76, 77) = std::complex<double>(0.0, 2.0*-1.0);
   A(77, 76) = -std::complex<double>(0.0, 2.0*-1.0);
   A(76, 78) = std::complex<double>(0.0, 2.0*-1.0);
   A(78, 76) = -std::complex<double>(0.0, 2.0*-1.0);
   A(76, 79) = std::complex<double>(0.0, 2.0*-2.5);
   A(79, 76) = -std::complex<double>(0.0, 2.0*-2.5);
   A(77, 79) = std::complex<double>(0.0, 2.0*-1.0);
   A(79, 77) = -std::complex<double>(0.0, 2.0*-1.0);
   A(78, 79) = std::complex<double>(0.0, 2.0*-1.0);
   A(79, 78) = -std::complex<double>(0.0, 2.0*-1.0);
   A(78, 113) = std::complex<double>(0.0, 2.0*-2.5);
   A(113, 78) = -std::complex<double>(0.0, 2.0*-2.5);
   A(78, 116) = std::complex<double>(0.0, 2.0*-1.0);
   A(116, 78) = -std::complex<double>(0.0, 2.0*-1.0);
   A(79, 117) = std::complex<double>(0.0, 2.0*-1.0);
   A(117, 79) = -std::complex<double>(0.0, 2.0*-1.0);
   A(80, 81) = std::complex<double>(0.0, 2.0*-1.0);
   A(81, 80) = -std::complex<double>(0.0, 2.0*-1.0);
   A(80, 82) = std::complex<double>(0.0, 2.0*-1.0);
   A(82, 80) = -std::complex<double>(0.0, 2.0*-1.0);
   A(80, 83) = std::complex<double>(0.0, 2.0*-2.5);
   A(83, 80) = -std::complex<double>(0.0, 2.0*-2.5);
   A(80, 117) = std::complex<double>(0.0, 2.0*-1.0);
   A(117, 80) = -std::complex<double>(0.0, 2.0*-1.0);
   A(81, 83) = std::complex<double>(0.0, 2.0*-1.0);
   A(83, 81) = -std::complex<double>(0.0, 2.0*-1.0);
   A(81, 84) = std::complex<double>(0.0, 2.0*-1.0);
   A(84, 81) = -std::complex<double>(0.0, 2.0*-1.0);
   A(82, 83) = std::complex<double>(0.0, 2.0*-1.0);
   A(83, 82) = -std::complex<double>(0.0, 2.0*-1.0);
   A(82, 119) = std::complex<double>(0.0, 2.0*-1.0);
   A(119, 82) = -std::complex<double>(0.0, 2.0*-1.0);
   A(82, 120) = std::complex<double>(0.0, 2.0*-1.0);
   A(120, 82) = -std::complex<double>(0.0, 2.0*-1.0);
   A(82, 157) = std::complex<double>(0.0, 2.0*-2.5);
   A(157, 82) = -std::complex<double>(0.0, 2.0*-2.5);
   A(83, 86) = std::complex<double>(0.0, 2.0*-1.0);
   A(86, 83) = -std::complex<double>(0.0, 2.0*-1.0);
   A(83, 121) = std::complex<double>(0.0, 2.0*-1.0);
   A(121, 83) = -std::complex<double>(0.0, 2.0*-1.0);
   A(84, 85) = std::complex<double>(0.0, 2.0*-1.0);
   A(85, 84) = -std::complex<double>(0.0, 2.0*-1.0);
   A(84, 86) = std::complex<double>(0.0, 2.0*-1.0);
   A(86, 84) = -std::complex<double>(0.0, 2.0*-1.0);
   A(84, 87) = std::complex<double>(0.0, 2.0*-2.5);
   A(87, 84) = -std::complex<double>(0.0, 2.0*-2.5);
   A(85, 87) = std::complex<double>(0.0, 2.0*-1.0);
   A(87, 85) = -std::complex<double>(0.0, 2.0*-1.0);
   A(85, 88) = std::complex<double>(0.0, 2.0*-1.0);
   A(88, 85) = -std::complex<double>(0.0, 2.0*-1.0);
   A(86, 87) = std::complex<double>(0.0, 2.0*-1.0);
   A(87, 86) = -std::complex<double>(0.0, 2.0*-1.0);
   A(86, 121) = std::complex<double>(0.0, 2.0*-2.5);
   A(121, 86) = -std::complex<double>(0.0, 2.0*-2.5);
   A(86, 124) = std::complex<double>(0.0, 2.0*-1.0);
   A(124, 86) = -std::complex<double>(0.0, 2.0*-1.0);
   A(87, 90) = std::complex<double>(0.0, 2.0*-1.0);
   A(90, 87) = -std::complex<double>(0.0, 2.0*-1.0);
   A(87, 125) = std::complex<double>(0.0, 2.0*-1.0);
   A(125, 87) = -std::complex<double>(0.0, 2.0*-1.0);
   A(88, 89) = std::complex<double>(0.0, 2.0*-1.0);
   A(89, 88) = -std::complex<double>(0.0, 2.0*-1.0);
   A(88, 90) = std::complex<double>(0.0, 2.0*-1.0);
   A(90, 88) = -std::complex<double>(0.0, 2.0*-1.0);
   A(88, 91) = std::complex<double>(0.0, 2.0*-2.5);
   A(91, 88) = -std::complex<double>(0.0, 2.0*-2.5);
   A(89, 91) = std::complex<double>(0.0, 2.0*-1.0);
   A(91, 89) = -std::complex<double>(0.0, 2.0*-1.0);
   A(89, 92) = std::complex<double>(0.0, 2.0*-1.0);
   A(92, 89) = -std::complex<double>(0.0, 2.0*-1.0);
   A(90, 91) = std::complex<double>(0.0, 2.0*-1.0);
   A(91, 90) = -std::complex<double>(0.0, 2.0*-1.0);
   A(90, 125) = std::complex<double>(0.0, 2.0*-2.5);
   A(125, 90) = -std::complex<double>(0.0, 2.0*-2.5);
   A(90, 128) = std::complex<double>(0.0, 2.0*-1.0);
   A(128, 90) = -std::complex<double>(0.0, 2.0*-1.0);
   A(91, 94) = std::complex<double>(0.0, 2.0*-1.0);
   A(94, 91) = -std::complex<double>(0.0, 2.0*-1.0);
   A(91, 129) = std::complex<double>(0.0, 2.0*-1.0);
   A(129, 91) = -std::complex<double>(0.0, 2.0*-1.0);
   A(92, 93) = std::complex<double>(0.0, 2.0*-1.0);
   A(93, 92) = -std::complex<double>(0.0, 2.0*-1.0);
   A(92, 94) = std::complex<double>(0.0, 2.0*-1.0);
   A(94, 92) = -std::complex<double>(0.0, 2.0*-1.0);
   A(92, 95) = std::complex<double>(0.0, 2.0*-2.5);
   A(95, 92) = -std::complex<double>(0.0, 2.0*-2.5);
   A(93, 95) = std::complex<double>(0.0, 2.0*-1.0);
   A(95, 93) = -std::complex<double>(0.0, 2.0*-1.0);
   A(93, 96) = std::complex<double>(0.0, 2.0*-1.0);
   A(96, 93) = -std::complex<double>(0.0, 2.0*-1.0);
   A(94, 95) = std::complex<double>(0.0, 2.0*-1.0);
   A(95, 94) = -std::complex<double>(0.0, 2.0*-1.0);
   A(94, 129) = std::complex<double>(0.0, 2.0*-2.5);
   A(129, 94) = -std::complex<double>(0.0, 2.0*-2.5);
   A(94, 132) = std::complex<double>(0.0, 2.0*-1.0);
   A(132, 94) = -std::complex<double>(0.0, 2.0*-1.0);
   A(95, 98) = std::complex<double>(0.0, 2.0*-1.0);
   A(98, 95) = -std::complex<double>(0.0, 2.0*-1.0);
   A(95, 133) = std::complex<double>(0.0, 2.0*-1.0);
   A(133, 95) = -std::complex<double>(0.0, 2.0*-1.0);
   A(96, 97) = std::complex<double>(0.0, 2.0*-1.0);
   A(97, 96) = -std::complex<double>(0.0, 2.0*-1.0);
   A(96, 98) = std::complex<double>(0.0, 2.0*-1.0);
   A(98, 96) = -std::complex<double>(0.0, 2.0*-1.0);
   A(96, 99) = std::complex<double>(0.0, 2.0*-2.5);
   A(99, 96) = -std::complex<double>(0.0, 2.0*-2.5);
   A(97, 99) = std::complex<double>(0.0, 2.0*-1.0);
   A(99, 97) = -std::complex<double>(0.0, 2.0*-1.0);
   A(97, 100) = std::complex<double>(0.0, 2.0*-1.0);
   A(100, 97) = -std::complex<double>(0.0, 2.0*-1.0);
   A(98, 99) = std::complex<double>(0.0, 2.0*-1.0);
   A(99, 98) = -std::complex<double>(0.0, 2.0*-1.0);
   A(98, 133) = std::complex<double>(0.0, 2.0*-2.5);
   A(133, 98) = -std::complex<double>(0.0, 2.0*-2.5);
   A(98, 136) = std::complex<double>(0.0, 2.0*-1.0);
   A(136, 98) = -std::complex<double>(0.0, 2.0*-1.0);
   A(99, 102) = std::complex<double>(0.0, 2.0*-1.0);
   A(102, 99) = -std::complex<double>(0.0, 2.0*-1.0);
   A(99, 137) = std::complex<double>(0.0, 2.0*-1.0);
   A(137, 99) = -std::complex<double>(0.0, 2.0*-1.0);
   A(100, 101) = std::complex<double>(0.0, 2.0*-1.0);
   A(101, 100) = -std::complex<double>(0.0, 2.0*-1.0);
   A(100, 102) = std::complex<double>(0.0, 2.0*-1.0);
   A(102, 100) = -std::complex<double>(0.0, 2.0*-1.0);
   A(100, 103) = std::complex<double>(0.0, 2.0*-2.5);
   A(103, 100) = -std::complex<double>(0.0, 2.0*-2.5);
   A(101, 103) = std::complex<double>(0.0, 2.0*-1.0);
   A(103, 101) = -std::complex<double>(0.0, 2.0*-1.0);
   A(101, 104) = std::complex<double>(0.0, 2.0*-1.0);
   A(104, 101) = -std::complex<double>(0.0, 2.0*-1.0);
   A(102, 103) = std::complex<double>(0.0, 2.0*-1.0);
   A(103, 102) = -std::complex<double>(0.0, 2.0*-1.0);
   A(102, 137) = std::complex<double>(0.0, 2.0*-2.5);
   A(137, 102) = -std::complex<double>(0.0, 2.0*-2.5);
   A(102, 140) = std::complex<double>(0.0, 2.0*-1.0);
   A(140, 102) = -std::complex<double>(0.0, 2.0*-1.0);
   A(103, 106) = std::complex<double>(0.0, 2.0*-1.0);
   A(106, 103) = -std::complex<double>(0.0, 2.0*-1.0);
   A(103, 141) = std::complex<double>(0.0, 2.0*-1.0);
   A(141, 103) = -std::complex<double>(0.0, 2.0*-1.0);
   A(104, 105) = std::complex<double>(0.0, 2.0*-1.0);
   A(105, 104) = -std::complex<double>(0.0, 2.0*-1.0);
   A(104, 106) = std::complex<double>(0.0, 2.0*-1.0);
   A(106, 104) = -std::complex<double>(0.0, 2.0*-1.0);
   A(104, 107) = std::complex<double>(0.0, 2.0*-2.5);
   A(107, 104) = -std::complex<double>(0.0, 2.0*-2.5);
   A(105, 107) = std::complex<double>(0.0, 2.0*-1.0);
   A(107, 105) = -std::complex<double>(0.0, 2.0*-1.0);
   A(105, 108) = std::complex<double>(0.0, 2.0*-1.0);
   A(108, 105) = -std::complex<double>(0.0, 2.0*-1.0);
   A(106, 107) = std::complex<double>(0.0, 2.0*-1.0);
   A(107, 106) = -std::complex<double>(0.0, 2.0*-1.0);
   A(106, 141) = std::complex<double>(0.0, 2.0*-2.5);
   A(141, 106) = -std::complex<double>(0.0, 2.0*-2.5);
   A(106, 144) = std::complex<double>(0.0, 2.0*-1.0);
   A(144, 106) = -std::complex<double>(0.0, 2.0*-1.0);
   A(107, 110) = std::complex<double>(0.0, 2.0*-1.0);
   A(110, 107) = -std::complex<double>(0.0, 2.0*-1.0);
   A(107, 145) = std::complex<double>(0.0, 2.0*-1.0);
   A(145, 107) = -std::complex<double>(0.0, 2.0*-1.0);
   A(108, 109) = std::complex<double>(0.0, 2.0*-1.0);
   A(109, 108) = -std::complex<double>(0.0, 2.0*-1.0);
   A(108, 110) = std::complex<double>(0.0, 2.0*-1.0);
   A(110, 108) = -std::complex<double>(0.0, 2.0*-1.0);
   A(108, 111) = std::complex<double>(0.0, 2.0*-2.5);
   A(111, 108) = -std::complex<double>(0.0, 2.0*-2.5);
   A(109, 111) = std::complex<double>(0.0, 2.0*-1.0);
   A(111, 109) = -std::complex<double>(0.0, 2.0*-1.0);
   A(109, 112) = std::complex<double>(0.0, 2.0*-1.0);
   A(112, 109) = -std::complex<double>(0.0, 2.0*-1.0);
   A(110, 111) = std::complex<double>(0.0, 2.0*-1.0);
   A(111, 110) = -std::complex<double>(0.0, 2.0*-1.0);
   A(110, 145) = std::complex<double>(0.0, 2.0*-2.5);
   A(145, 110) = -std::complex<double>(0.0, 2.0*-2.5);
   A(110, 148) = std::complex<double>(0.0, 2.0*-1.0);
   A(148, 110) = -std::complex<double>(0.0, 2.0*-1.0);
   A(111, 114) = std::complex<double>(0.0, 2.0*-1.0);
   A(114, 111) = -std::complex<double>(0.0, 2.0*-1.0);
   A(111, 149) = std::complex<double>(0.0, 2.0*-1.0);
   A(149, 111) = -std::complex<double>(0.0, 2.0*-1.0);
   A(112, 113) = std::complex<double>(0.0, 2.0*-1.0);
   A(113, 112) = -std::complex<double>(0.0, 2.0*-1.0);
   A(112, 114) = std::complex<double>(0.0, 2.0*-1.0);
   A(114, 112) = -std::complex<double>(0.0, 2.0*-1.0);
   A(112, 115) = std::complex<double>(0.0, 2.0*-2.5);
   A(115, 112) = -std::complex<double>(0.0, 2.0*-2.5);
   A(113, 115) = std::complex<double>(0.0, 2.0*-1.0);
   A(115, 113) = -std::complex<double>(0.0, 2.0*-1.0);
   A(113, 116) = std::complex<double>(0.0, 2.0*-1.0);
   A(116, 113) = -std::complex<double>(0.0, 2.0*-1.0);
   A(114, 115) = std::complex<double>(0.0, 2.0*-1.0);
   A(115, 114) = -std::complex<double>(0.0, 2.0*-1.0);
   A(114, 149) = std::complex<double>(0.0, 2.0*-2.5);
   A(149, 114) = -std::complex<double>(0.0, 2.0*-2.5);
   A(114, 152) = std::complex<double>(0.0, 2.0*-1.0);
   A(152, 114) = -std::complex<double>(0.0, 2.0*-1.0);
   A(115, 118) = std::complex<double>(0.0, 2.0*-1.0);
   A(118, 115) = -std::complex<double>(0.0, 2.0*-1.0);
   A(115, 153) = std::complex<double>(0.0, 2.0*-1.0);
   A(153, 115) = -std::complex<double>(0.0, 2.0*-1.0);
   A(116, 117) = std::complex<double>(0.0, 2.0*-1.0);
   A(117, 116) = -std::complex<double>(0.0, 2.0*-1.0);
   A(116, 118) = std::complex<double>(0.0, 2.0*-1.0);
   A(118, 116) = -std::complex<double>(0.0, 2.0*-1.0);
   A(116, 119) = std::complex<double>(0.0, 2.0*-2.5);
   A(119, 116) = -std::complex<double>(0.0, 2.0*-2.5);
   A(117, 119) = std::complex<double>(0.0, 2.0*-1.0);
   A(119, 117) = -std::complex<double>(0.0, 2.0*-1.0);
   A(118, 119) = std::complex<double>(0.0, 2.0*-1.0);
   A(119, 118) = -std::complex<double>(0.0, 2.0*-1.0);
   A(118, 153) = std::complex<double>(0.0, 2.0*-2.5);
   A(153, 118) = -std::complex<double>(0.0, 2.0*-2.5);
   A(118, 156) = std::complex<double>(0.0, 2.0*-1.0);
   A(156, 118) = -std::complex<double>(0.0, 2.0*-1.0);
   A(119, 157) = std::complex<double>(0.0, 2.0*-1.0);
   A(157, 119) = -std::complex<double>(0.0, 2.0*-1.0);
   A(120, 121) = std::complex<double>(0.0, 2.0*-1.0);
   A(121, 120) = -std::complex<double>(0.0, 2.0*-1.0);
   A(120, 122) = std::complex<double>(0.0, 2.0*-1.0);
   A(122, 120) = -std::complex<double>(0.0, 2.0*-1.0);
   A(120, 123) = std::complex<double>(0.0, 2.0*-2.5);
   A(123, 120) = -std::complex<double>(0.0, 2.0*-2.5);
   A(120, 157) = std::complex<double>(0.0, 2.0*-1.0);
   A(157, 120) = -std::complex<double>(0.0, 2.0*-1.0);
   A(121, 123) = std::complex<double>(0.0, 2.0*-1.0);
   A(123, 121) = -std::complex<double>(0.0, 2.0*-1.0);
   A(121, 124) = std::complex<double>(0.0, 2.0*-1.0);
   A(124, 121) = -std::complex<double>(0.0, 2.0*-1.0);
   A(122, 123) = std::complex<double>(0.0, 2.0*-1.0);
   A(123, 122) = -std::complex<double>(0.0, 2.0*-1.0);
   A(122, 159) = std::complex<double>(0.0, 2.0*-1.0);
   A(159, 122) = -std::complex<double>(0.0, 2.0*-1.0);
   A(122, 160) = std::complex<double>(0.0, 2.0*-1.0);
   A(160, 122) = -std::complex<double>(0.0, 2.0*-1.0);
   A(122, 197) = std::complex<double>(0.0, 2.0*-2.5);
   A(197, 122) = -std::complex<double>(0.0, 2.0*-2.5);
   A(123, 126) = std::complex<double>(0.0, 2.0*-1.0);
   A(126, 123) = -std::complex<double>(0.0, 2.0*-1.0);
   A(123, 161) = std::complex<double>(0.0, 2.0*-1.0);
   A(161, 123) = -std::complex<double>(0.0, 2.0*-1.0);
   A(124, 125) = std::complex<double>(0.0, 2.0*-1.0);
   A(125, 124) = -std::complex<double>(0.0, 2.0*-1.0);
   A(124, 126) = std::complex<double>(0.0, 2.0*-1.0);
   A(126, 124) = -std::complex<double>(0.0, 2.0*-1.0);
   A(124, 127) = std::complex<double>(0.0, 2.0*-2.5);
   A(127, 124) = -std::complex<double>(0.0, 2.0*-2.5);
   A(125, 127) = std::complex<double>(0.0, 2.0*-1.0);
   A(127, 125) = -std::complex<double>(0.0, 2.0*-1.0);
   A(125, 128) = std::complex<double>(0.0, 2.0*-1.0);
   A(128, 125) = -std::complex<double>(0.0, 2.0*-1.0);
   A(126, 127) = std::complex<double>(0.0, 2.0*-1.0);
   A(127, 126) = -std::complex<double>(0.0, 2.0*-1.0);
   A(126, 161) = std::complex<double>(0.0, 2.0*-2.5);
   A(161, 126) = -std::complex<double>(0.0, 2.0*-2.5);
   A(126, 164) = std::complex<double>(0.0, 2.0*-1.0);
   A(164, 126) = -std::complex<double>(0.0, 2.0*-1.0);
   A(127, 130) = std::complex<double>(0.0, 2.0*-1.0);
   A(130, 127) = -std::complex<double>(0.0, 2.0*-1.0);
   A(127, 165) = std::complex<double>(0.0, 2.0*-1.0);
   A(165, 127) = -std::complex<double>(0.0, 2.0*-1.0);
   A(128, 129) = std::complex<double>(0.0, 2.0*-1.0);
   A(129, 128) = -std::complex<double>(0.0, 2.0*-1.0);
   A(128, 130) = std::complex<double>(0.0, 2.0*-1.0);
   A(130, 128) = -std::complex<double>(0.0, 2.0*-1.0);
   A(128, 131) = std::complex<double>(0.0, 2.0*-2.5);
   A(131, 128) = -std::complex<double>(0.0, 2.0*-2.5);
   A(129, 131) = std::complex<double>(0.0, 2.0*-1.0);
   A(131, 129) = -std::complex<double>(0.0, 2.0*-1.0);
   A(129, 132) = std::complex<double>(0.0, 2.0*-1.0);
   A(132, 129) = -std::complex<double>(0.0, 2.0*-1.0);
   A(130, 131) = std::complex<double>(0.0, 2.0*-1.0);
   A(131, 130) = -std::complex<double>(0.0, 2.0*-1.0);
   A(130, 165) = std::complex<double>(0.0, 2.0*-2.5);
   A(165, 130) = -std::complex<double>(0.0, 2.0*-2.5);
   A(130, 168) = std::complex<double>(0.0, 2.0*-1.0);
   A(168, 130) = -std::complex<double>(0.0, 2.0*-1.0);
   A(131, 134) = std::complex<double>(0.0, 2.0*-1.0);
   A(134, 131) = -std::complex<double>(0.0, 2.0*-1.0);
   A(131, 169) = std::complex<double>(0.0, 2.0*-1.0);
   A(169, 131) = -std::complex<double>(0.0, 2.0*-1.0);
   A(132, 133) = std::complex<double>(0.0, 2.0*-1.0);
   A(133, 132) = -std::complex<double>(0.0, 2.0*-1.0);
   A(132, 134) = std::complex<double>(0.0, 2.0*-1.0);
   A(134, 132) = -std::complex<double>(0.0, 2.0*-1.0);
   A(132, 135) = std::complex<double>(0.0, 2.0*-2.5);
   A(135, 132) = -std::complex<double>(0.0, 2.0*-2.5);
   A(133, 135) = std::complex<double>(0.0, 2.0*-1.0);
   A(135, 133) = -std::complex<double>(0.0, 2.0*-1.0);
   A(133, 136) = std::complex<double>(0.0, 2.0*-1.0);
   A(136, 133) = -std::complex<double>(0.0, 2.0*-1.0);
   A(134, 135) = std::complex<double>(0.0, 2.0*-1.0);
   A(135, 134) = -std::complex<double>(0.0, 2.0*-1.0);
   A(134, 169) = std::complex<double>(0.0, 2.0*-2.5);
   A(169, 134) = -std::complex<double>(0.0, 2.0*-2.5);
   A(134, 172) = std::complex<double>(0.0, 2.0*-1.0);
   A(172, 134) = -std::complex<double>(0.0, 2.0*-1.0);
   A(135, 138) = std::complex<double>(0.0, 2.0*-1.0);
   A(138, 135) = -std::complex<double>(0.0, 2.0*-1.0);
   A(135, 173) = std::complex<double>(0.0, 2.0*-1.0);
   A(173, 135) = -std::complex<double>(0.0, 2.0*-1.0);
   A(136, 137) = std::complex<double>(0.0, 2.0*-1.0);
   A(137, 136) = -std::complex<double>(0.0, 2.0*-1.0);
   A(136, 138) = std::complex<double>(0.0, 2.0*-1.0);
   A(138, 136) = -std::complex<double>(0.0, 2.0*-1.0);
   A(136, 139) = std::complex<double>(0.0, 2.0*-2.5);
   A(139, 136) = -std::complex<double>(0.0, 2.0*-2.5);
   A(137, 139) = std::complex<double>(0.0, 2.0*-1.0);
   A(139, 137) = -std::complex<double>(0.0, 2.0*-1.0);
   A(137, 140) = std::complex<double>(0.0, 2.0*-1.0);
   A(140, 137) = -std::complex<double>(0.0, 2.0*-1.0);
   A(138, 139) = std::complex<double>(0.0, 2.0*-1.0);
   A(139, 138) = -std::complex<double>(0.0, 2.0*-1.0);
   A(138, 173) = std::complex<double>(0.0, 2.0*-2.5);
   A(173, 138) = -std::complex<double>(0.0, 2.0*-2.5);
   A(138, 176) = std::complex<double>(0.0, 2.0*-1.0);
   A(176, 138) = -std::complex<double>(0.0, 2.0*-1.0);
   A(139, 142) = std::complex<double>(0.0, 2.0*-1.0);
   A(142, 139) = -std::complex<double>(0.0, 2.0*-1.0);
   A(139, 177) = std::complex<double>(0.0, 2.0*-1.0);
   A(177, 139) = -std::complex<double>(0.0, 2.0*-1.0);
   A(140, 141) = std::complex<double>(0.0, 2.0*-1.0);
   A(141, 140) = -std::complex<double>(0.0, 2.0*-1.0);
   A(140, 142) = std::complex<double>(0.0, 2.0*-1.0);
   A(142, 140) = -std::complex<double>(0.0, 2.0*-1.0);
   A(140, 143) = std::complex<double>(0.0, 2.0*-2.5);
   A(143, 140) = -std::complex<double>(0.0, 2.0*-2.5);
   A(141, 143) = std::complex<double>(0.0, 2.0*-1.0);
   A(143, 141) = -std::complex<double>(0.0, 2.0*-1.0);
   A(141, 144) = std::complex<double>(0.0, 2.0*-1.0);
   A(144, 141) = -std::complex<double>(0.0, 2.0*-1.0);
   A(142, 143) = std::complex<double>(0.0, 2.0*-1.0);
   A(143, 142) = -std::complex<double>(0.0, 2.0*-1.0);
   A(142, 177) = std::complex<double>(0.0, 2.0*-2.5);
   A(177, 142) = -std::complex<double>(0.0, 2.0*-2.5);
   A(142, 180) = std::complex<double>(0.0, 2.0*-1.0);
   A(180, 142) = -std::complex<double>(0.0, 2.0*-1.0);
   A(143, 146) = std::complex<double>(0.0, 2.0*-1.0);
   A(146, 143) = -std::complex<double>(0.0, 2.0*-1.0);
   A(143, 181) = std::complex<double>(0.0, 2.0*-1.0);
   A(181, 143) = -std::complex<double>(0.0, 2.0*-1.0);
   A(144, 145) = std::complex<double>(0.0, 2.0*-1.0);
   A(145, 144) = -std::complex<double>(0.0, 2.0*-1.0);
   A(144, 146) = std::complex<double>(0.0, 2.0*-1.0);
   A(146, 144) = -std::complex<double>(0.0, 2.0*-1.0);
   A(144, 147) = std::complex<double>(0.0, 2.0*-2.5);
   A(147, 144) = -std::complex<double>(0.0, 2.0*-2.5);
   A(145, 147) = std::complex<double>(0.0, 2.0*-1.0);
   A(147, 145) = -std::complex<double>(0.0, 2.0*-1.0);
   A(145, 148) = std::complex<double>(0.0, 2.0*-1.0);
   A(148, 145) = -std::complex<double>(0.0, 2.0*-1.0);
   A(146, 147) = std::complex<double>(0.0, 2.0*-1.0);
   A(147, 146) = -std::complex<double>(0.0, 2.0*-1.0);
   A(146, 181) = std::complex<double>(0.0, 2.0*-2.5);
   A(181, 146) = -std::complex<double>(0.0, 2.0*-2.5);
   A(146, 184) = std::complex<double>(0.0, 2.0*-1.0);
   A(184, 146) = -std::complex<double>(0.0, 2.0*-1.0);
   A(147, 150) = std::complex<double>(0.0, 2.0*-1.0);
   A(150, 147) = -std::complex<double>(0.0, 2.0*-1.0);
   A(147, 185) = std::complex<double>(0.0, 2.0*-1.0);
   A(185, 147) = -std::complex<double>(0.0, 2.0*-1.0);
   A(148, 149) = std::complex<double>(0.0, 2.0*-1.0);
   A(149, 148) = -std::complex<double>(0.0, 2.0*-1.0);
   A(148, 150) = std::complex<double>(0.0, 2.0*-1.0);
   A(150, 148) = -std::complex<double>(0.0, 2.0*-1.0);
   A(148, 151) = std::complex<double>(0.0, 2.0*-2.5);
   A(151, 148) = -std::complex<double>(0.0, 2.0*-2.5);
   A(149, 151) = std::complex<double>(0.0, 2.0*-1.0);
   A(151, 149) = -std::complex<double>(0.0, 2.0*-1.0);
   A(149, 152) = std::complex<double>(0.0, 2.0*-1.0);
   A(152, 149) = -std::complex<double>(0.0, 2.0*-1.0);
   A(150, 151) = std::complex<double>(0.0, 2.0*-1.0);
   A(151, 150) = -std::complex<double>(0.0, 2.0*-1.0);
   A(150, 185) = std::complex<double>(0.0, 2.0*-2.5);
   A(185, 150) = -std::complex<double>(0.0, 2.0*-2.5);
   A(150, 188) = std::complex<double>(0.0, 2.0*-1.0);
   A(188, 150) = -std::complex<double>(0.0, 2.0*-1.0);
   A(151, 154) = std::complex<double>(0.0, 2.0*-1.0);
   A(154, 151) = -std::complex<double>(0.0, 2.0*-1.0);
   A(151, 189) = std::complex<double>(0.0, 2.0*-1.0);
   A(189, 151) = -std::complex<double>(0.0, 2.0*-1.0);
   A(152, 153) = std::complex<double>(0.0, 2.0*-1.0);
   A(153, 152) = -std::complex<double>(0.0, 2.0*-1.0);
   A(152, 154) = std::complex<double>(0.0, 2.0*-1.0);
   A(154, 152) = -std::complex<double>(0.0, 2.0*-1.0);
   A(152, 155) = std::complex<double>(0.0, 2.0*-2.5);
   A(155, 152) = -std::complex<double>(0.0, 2.0*-2.5);
   A(153, 155) = std::complex<double>(0.0, 2.0*-1.0);
   A(155, 153) = -std::complex<double>(0.0, 2.0*-1.0);
   A(153, 156) = std::complex<double>(0.0, 2.0*-1.0);
   A(156, 153) = -std::complex<double>(0.0, 2.0*-1.0);
   A(154, 155) = std::complex<double>(0.0, 2.0*-1.0);
   A(155, 154) = -std::complex<double>(0.0, 2.0*-1.0);
   A(154, 189) = std::complex<double>(0.0, 2.0*-2.5);
   A(189, 154) = -std::complex<double>(0.0, 2.0*-2.5);
   A(154, 192) = std::complex<double>(0.0, 2.0*-1.0);
   A(192, 154) = -std::complex<double>(0.0, 2.0*-1.0);
   A(155, 158) = std::complex<double>(0.0, 2.0*-1.0);
   A(158, 155) = -std::complex<double>(0.0, 2.0*-1.0);
   A(155, 193) = std::complex<double>(0.0, 2.0*-1.0);
   A(193, 155) = -std::complex<double>(0.0, 2.0*-1.0);
   A(156, 157) = std::complex<double>(0.0, 2.0*-1.0);
   A(157, 156) = -std::complex<double>(0.0, 2.0*-1.0);
   A(156, 158) = std::complex<double>(0.0, 2.0*-1.0);
   A(158, 156) = -std::complex<double>(0.0, 2.0*-1.0);
   A(156, 159) = std::complex<double>(0.0, 2.0*-2.5);
   A(159, 156) = -std::complex<double>(0.0, 2.0*-2.5);
   A(157, 159) = std::complex<double>(0.0, 2.0*-1.0);
   A(159, 157) = -std::complex<double>(0.0, 2.0*-1.0);
   A(158, 159) = std::complex<double>(0.0, 2.0*-1.0);
   A(159, 158) = -std::complex<double>(0.0, 2.0*-1.0);
   A(158, 193) = std::complex<double>(0.0, 2.0*-2.5);
   A(193, 158) = -std::complex<double>(0.0, 2.0*-2.5);
   A(158, 196) = std::complex<double>(0.0, 2.0*-1.0);
   A(196, 158) = -std::complex<double>(0.0, 2.0*-1.0);
   A(159, 197) = std::complex<double>(0.0, 2.0*-1.0);
   A(197, 159) = -std::complex<double>(0.0, 2.0*-1.0);
   A(160, 161) = std::complex<double>(0.0, 2.0*-1.0);
   A(161, 160) = -std::complex<double>(0.0, 2.0*-1.0);
   A(160, 162) = std::complex<double>(0.0, 2.0*-1.0);
   A(162, 160) = -std::complex<double>(0.0, 2.0*-1.0);
   A(160, 163) = std::complex<double>(0.0, 2.0*-2.5);
   A(163, 160) = -std::complex<double>(0.0, 2.0*-2.5);
   A(160, 197) = std::complex<double>(0.0, 2.0*-1.0);
   A(197, 160) = -std::complex<double>(0.0, 2.0*-1.0);
   A(161, 163) = std::complex<double>(0.0, 2.0*-1.0);
   A(163, 161) = -std::complex<double>(0.0, 2.0*-1.0);
   A(161, 164) = std::complex<double>(0.0, 2.0*-1.0);
   A(164, 161) = -std::complex<double>(0.0, 2.0*-1.0);
   A(162, 163) = std::complex<double>(0.0, 2.0*-1.0);
   A(163, 162) = -std::complex<double>(0.0, 2.0*-1.0);
   A(162, 199) = std::complex<double>(0.0, 2.0*-1.0);
   A(199, 162) = -std::complex<double>(0.0, 2.0*-1.0);
   A(162, 200) = std::complex<double>(0.0, 2.0*-1.0);
   A(200, 162) = -std::complex<double>(0.0, 2.0*-1.0);
   A(162, 237) = std::complex<double>(0.0, 2.0*-2.5);
   A(237, 162) = -std::complex<double>(0.0, 2.0*-2.5);
   A(163, 166) = std::complex<double>(0.0, 2.0*-1.0);
   A(166, 163) = -std::complex<double>(0.0, 2.0*-1.0);
   A(163, 201) = std::complex<double>(0.0, 2.0*-1.0);
   A(201, 163) = -std::complex<double>(0.0, 2.0*-1.0);
   A(164, 165) = std::complex<double>(0.0, 2.0*-1.0);
   A(165, 164) = -std::complex<double>(0.0, 2.0*-1.0);
   A(164, 166) = std::complex<double>(0.0, 2.0*-1.0);
   A(166, 164) = -std::complex<double>(0.0, 2.0*-1.0);
   A(164, 167) = std::complex<double>(0.0, 2.0*-2.5);
   A(167, 164) = -std::complex<double>(0.0, 2.0*-2.5);
   A(165, 167) = std::complex<double>(0.0, 2.0*-1.0);
   A(167, 165) = -std::complex<double>(0.0, 2.0*-1.0);
   A(165, 168) = std::complex<double>(0.0, 2.0*-1.0);
   A(168, 165) = -std::complex<double>(0.0, 2.0*-1.0);
   A(166, 167) = std::complex<double>(0.0, 2.0*-1.0);
   A(167, 166) = -std::complex<double>(0.0, 2.0*-1.0);
   A(166, 201) = std::complex<double>(0.0, 2.0*-2.5);
   A(201, 166) = -std::complex<double>(0.0, 2.0*-2.5);
   A(166, 204) = std::complex<double>(0.0, 2.0*-1.0);
   A(204, 166) = -std::complex<double>(0.0, 2.0*-1.0);
   A(167, 170) = std::complex<double>(0.0, 2.0*-1.0);
   A(170, 167) = -std::complex<double>(0.0, 2.0*-1.0);
   A(167, 205) = std::complex<double>(0.0, 2.0*-1.0);
   A(205, 167) = -std::complex<double>(0.0, 2.0*-1.0);
   A(168, 169) = std::complex<double>(0.0, 2.0*-1.0);
   A(169, 168) = -std::complex<double>(0.0, 2.0*-1.0);
   A(168, 170) = std::complex<double>(0.0, 2.0*-1.0);
   A(170, 168) = -std::complex<double>(0.0, 2.0*-1.0);
   A(168, 171) = std::complex<double>(0.0, 2.0*-2.5);
   A(171, 168) = -std::complex<double>(0.0, 2.0*-2.5);
   A(169, 171) = std::complex<double>(0.0, 2.0*-1.0);
   A(171, 169) = -std::complex<double>(0.0, 2.0*-1.0);
   A(169, 172) = std::complex<double>(0.0, 2.0*-1.0);
   A(172, 169) = -std::complex<double>(0.0, 2.0*-1.0);
   A(170, 171) = std::complex<double>(0.0, 2.0*-1.0);
   A(171, 170) = -std::complex<double>(0.0, 2.0*-1.0);
   A(170, 205) = std::complex<double>(0.0, 2.0*-2.5);
   A(205, 170) = -std::complex<double>(0.0, 2.0*-2.5);
   A(170, 208) = std::complex<double>(0.0, 2.0*-1.0);
   A(208, 170) = -std::complex<double>(0.0, 2.0*-1.0);
   A(171, 174) = std::complex<double>(0.0, 2.0*-1.0);
   A(174, 171) = -std::complex<double>(0.0, 2.0*-1.0);
   A(171, 209) = std::complex<double>(0.0, 2.0*-1.0);
   A(209, 171) = -std::complex<double>(0.0, 2.0*-1.0);
   A(172, 173) = std::complex<double>(0.0, 2.0*-1.0);
   A(173, 172) = -std::complex<double>(0.0, 2.0*-1.0);
   A(172, 174) = std::complex<double>(0.0, 2.0*-1.0);
   A(174, 172) = -std::complex<double>(0.0, 2.0*-1.0);
   A(172, 175) = std::complex<double>(0.0, 2.0*-2.5);
   A(175, 172) = -std::complex<double>(0.0, 2.0*-2.5);
   A(173, 175) = std::complex<double>(0.0, 2.0*-1.0);
   A(175, 173) = -std::complex<double>(0.0, 2.0*-1.0);
   A(173, 176) = std::complex<double>(0.0, 2.0*-1.0);
   A(176, 173) = -std::complex<double>(0.0, 2.0*-1.0);
   A(174, 175) = std::complex<double>(0.0, 2.0*-1.0);
   A(175, 174) = -std::complex<double>(0.0, 2.0*-1.0);
   A(174, 209) = std::complex<double>(0.0, 2.0*-2.5);
   A(209, 174) = -std::complex<double>(0.0, 2.0*-2.5);
   A(174, 212) = std::complex<double>(0.0, 2.0*-1.0);
   A(212, 174) = -std::complex<double>(0.0, 2.0*-1.0);
   A(175, 178) = std::complex<double>(0.0, 2.0*-1.0);
   A(178, 175) = -std::complex<double>(0.0, 2.0*-1.0);
   A(175, 213) = std::complex<double>(0.0, 2.0*-1.0);
   A(213, 175) = -std::complex<double>(0.0, 2.0*-1.0);
   A(176, 177) = std::complex<double>(0.0, 2.0*-1.0);
   A(177, 176) = -std::complex<double>(0.0, 2.0*-1.0);
   A(176, 178) = std::complex<double>(0.0, 2.0*-1.0);
   A(178, 176) = -std::complex<double>(0.0, 2.0*-1.0);
   A(176, 179) = std::complex<double>(0.0, 2.0*-2.5);
   A(179, 176) = -std::complex<double>(0.0, 2.0*-2.5);
   A(177, 179) = std::complex<double>(0.0, 2.0*-1.0);
   A(179, 177) = -std::complex<double>(0.0, 2.0*-1.0);
   A(177, 180) = std::complex<double>(0.0, 2.0*-1.0);
   A(180, 177) = -std::complex<double>(0.0, 2.0*-1.0);
   A(178, 179) = std::complex<double>(0.0, 2.0*-1.0);
   A(179, 178) = -std::complex<double>(0.0, 2.0*-1.0);
   A(178, 213) = std::complex<double>(0.0, 2.0*-2.5);
   A(213, 178) = -std::complex<double>(0.0, 2.0*-2.5);
   A(178, 216) = std::complex<double>(0.0, 2.0*-1.0);
   A(216, 178) = -std::complex<double>(0.0, 2.0*-1.0);
   A(179, 182) = std::complex<double>(0.0, 2.0*-1.0);
   A(182, 179) = -std::complex<double>(0.0, 2.0*-1.0);
   A(179, 217) = std::complex<double>(0.0, 2.0*-1.0);
   A(217, 179) = -std::complex<double>(0.0, 2.0*-1.0);
   A(180, 181) = std::complex<double>(0.0, 2.0*-1.0);
   A(181, 180) = -std::complex<double>(0.0, 2.0*-1.0);
   A(180, 182) = std::complex<double>(0.0, 2.0*-1.0);
   A(182, 180) = -std::complex<double>(0.0, 2.0*-1.0);
   A(180, 183) = std::complex<double>(0.0, 2.0*-2.5);
   A(183, 180) = -std::complex<double>(0.0, 2.0*-2.5);
   A(181, 183) = std::complex<double>(0.0, 2.0*-1.0);
   A(183, 181) = -std::complex<double>(0.0, 2.0*-1.0);
   A(181, 184) = std::complex<double>(0.0, 2.0*-1.0);
   A(184, 181) = -std::complex<double>(0.0, 2.0*-1.0);
   A(182, 183) = std::complex<double>(0.0, 2.0*-1.0);
   A(183, 182) = -std::complex<double>(0.0, 2.0*-1.0);
   A(182, 217) = std::complex<double>(0.0, 2.0*-2.5);
   A(217, 182) = -std::complex<double>(0.0, 2.0*-2.5);
   A(182, 220) = std::complex<double>(0.0, 2.0*-1.0);
   A(220, 182) = -std::complex<double>(0.0, 2.0*-1.0);
   A(183, 186) = std::complex<double>(0.0, 2.0*-1.0);
   A(186, 183) = -std::complex<double>(0.0, 2.0*-1.0);
   A(183, 221) = std::complex<double>(0.0, 2.0*-1.0);
   A(221, 183) = -std::complex<double>(0.0, 2.0*-1.0);
   A(184, 185) = std::complex<double>(0.0, 2.0*-1.0);
   A(185, 184) = -std::complex<double>(0.0, 2.0*-1.0);
   A(184, 186) = std::complex<double>(0.0, 2.0*-1.0);
   A(186, 184) = -std::complex<double>(0.0, 2.0*-1.0);
   A(184, 187) = std::complex<double>(0.0, 2.0*-2.5);
   A(187, 184) = -std::complex<double>(0.0, 2.0*-2.5);
   A(185, 187) = std::complex<double>(0.0, 2.0*-1.0);
   A(187, 185) = -std::complex<double>(0.0, 2.0*-1.0);
   A(185, 188) = std::complex<double>(0.0, 2.0*-1.0);
   A(188, 185) = -std::complex<double>(0.0, 2.0*-1.0);
   A(186, 187) = std::complex<double>(0.0, 2.0*-1.0);
   A(187, 186) = -std::complex<double>(0.0, 2.0*-1.0);
   A(186, 221) = std::complex<double>(0.0, 2.0*-2.5);
   A(221, 186) = -std::complex<double>(0.0, 2.0*-2.5);
   A(186, 224) = std::complex<double>(0.0, 2.0*-1.0);
   A(224, 186) = -std::complex<double>(0.0, 2.0*-1.0);
   A(187, 190) = std::complex<double>(0.0, 2.0*-1.0);
   A(190, 187) = -std::complex<double>(0.0, 2.0*-1.0);
   A(187, 225) = std::complex<double>(0.0, 2.0*-1.0);
   A(225, 187) = -std::complex<double>(0.0, 2.0*-1.0);
   A(188, 189) = std::complex<double>(0.0, 2.0*-1.0);
   A(189, 188) = -std::complex<double>(0.0, 2.0*-1.0);
   A(188, 190) = std::complex<double>(0.0, 2.0*-1.0);
   A(190, 188) = -std::complex<double>(0.0, 2.0*-1.0);
   A(188, 191) = std::complex<double>(0.0, 2.0*-2.5);
   A(191, 188) = -std::complex<double>(0.0, 2.0*-2.5);
   A(189, 191) = std::complex<double>(0.0, 2.0*-1.0);
   A(191, 189) = -std::complex<double>(0.0, 2.0*-1.0);
   A(189, 192) = std::complex<double>(0.0, 2.0*-1.0);
   A(192, 189) = -std::complex<double>(0.0, 2.0*-1.0);
   A(190, 191) = std::complex<double>(0.0, 2.0*-1.0);
   A(191, 190) = -std::complex<double>(0.0, 2.0*-1.0);
   A(190, 225) = std::complex<double>(0.0, 2.0*-2.5);
   A(225, 190) = -std::complex<double>(0.0, 2.0*-2.5);
   A(190, 228) = std::complex<double>(0.0, 2.0*-1.0);
   A(228, 190) = -std::complex<double>(0.0, 2.0*-1.0);
   A(191, 194) = std::complex<double>(0.0, 2.0*-1.0);
   A(194, 191) = -std::complex<double>(0.0, 2.0*-1.0);
   A(191, 229) = std::complex<double>(0.0, 2.0*-1.0);
   A(229, 191) = -std::complex<double>(0.0, 2.0*-1.0);
   A(192, 193) = std::complex<double>(0.0, 2.0*-1.0);
   A(193, 192) = -std::complex<double>(0.0, 2.0*-1.0);
   A(192, 194) = std::complex<double>(0.0, 2.0*-1.0);
   A(194, 192) = -std::complex<double>(0.0, 2.0*-1.0);
   A(192, 195) = std::complex<double>(0.0, 2.0*-2.5);
   A(195, 192) = -std::complex<double>(0.0, 2.0*-2.5);
   A(193, 195) = std::complex<double>(0.0, 2.0*-1.0);
   A(195, 193) = -std::complex<double>(0.0, 2.0*-1.0);
   A(193, 196) = std::complex<double>(0.0, 2.0*-1.0);
   A(196, 193) = -std::complex<double>(0.0, 2.0*-1.0);
   A(194, 195) = std::complex<double>(0.0, 2.0*-1.0);
   A(195, 194) = -std::complex<double>(0.0, 2.0*-1.0);
   A(194, 229) = std::complex<double>(0.0, 2.0*-2.5);
   A(229, 194) = -std::complex<double>(0.0, 2.0*-2.5);
   A(194, 232) = std::complex<double>(0.0, 2.0*-1.0);
   A(232, 194) = -std::complex<double>(0.0, 2.0*-1.0);
   A(195, 198) = std::complex<double>(0.0, 2.0*-1.0);
   A(198, 195) = -std::complex<double>(0.0, 2.0*-1.0);
   A(195, 233) = std::complex<double>(0.0, 2.0*-1.0);
   A(233, 195) = -std::complex<double>(0.0, 2.0*-1.0);
   A(196, 197) = std::complex<double>(0.0, 2.0*-1.0);
   A(197, 196) = -std::complex<double>(0.0, 2.0*-1.0);
   A(196, 198) = std::complex<double>(0.0, 2.0*-1.0);
   A(198, 196) = -std::complex<double>(0.0, 2.0*-1.0);
   A(196, 199) = std::complex<double>(0.0, 2.0*-2.5);
   A(199, 196) = -std::complex<double>(0.0, 2.0*-2.5);
   A(197, 199) = std::complex<double>(0.0, 2.0*-1.0);
   A(199, 197) = -std::complex<double>(0.0, 2.0*-1.0);
   A(198, 199) = std::complex<double>(0.0, 2.0*-1.0);
   A(199, 198) = -std::complex<double>(0.0, 2.0*-1.0);
   A(198, 233) = std::complex<double>(0.0, 2.0*-2.5);
   A(233, 198) = -std::complex<double>(0.0, 2.0*-2.5);
   A(198, 236) = std::complex<double>(0.0, 2.0*-1.0);
   A(236, 198) = -std::complex<double>(0.0, 2.0*-1.0);
   A(199, 237) = std::complex<double>(0.0, 2.0*-1.0);
   A(237, 199) = -std::complex<double>(0.0, 2.0*-1.0);
   A(200, 201) = std::complex<double>(0.0, 2.0*-1.0);
   A(201, 200) = -std::complex<double>(0.0, 2.0*-1.0);
   A(200, 202) = std::complex<double>(0.0, 2.0*-1.0);
   A(202, 200) = -std::complex<double>(0.0, 2.0*-1.0);
   A(200, 203) = std::complex<double>(0.0, 2.0*-2.5);
   A(203, 200) = -std::complex<double>(0.0, 2.0*-2.5);
   A(200, 237) = std::complex<double>(0.0, 2.0*-1.0);
   A(237, 200) = -std::complex<double>(0.0, 2.0*-1.0);
   A(201, 203) = std::complex<double>(0.0, 2.0*-1.0);
   A(203, 201) = -std::complex<double>(0.0, 2.0*-1.0);
   A(201, 204) = std::complex<double>(0.0, 2.0*-1.0);
   A(204, 201) = -std::complex<double>(0.0, 2.0*-1.0);
   A(202, 203) = std::complex<double>(0.0, 2.0*-1.0);
   A(203, 202) = -std::complex<double>(0.0, 2.0*-1.0);
   A(202, 239) = std::complex<double>(0.0, 2.0*-1.0);
   A(239, 202) = -std::complex<double>(0.0, 2.0*-1.0);
   A(202, 240) = std::complex<double>(0.0, 2.0*-1.0);
   A(240, 202) = -std::complex<double>(0.0, 2.0*-1.0);
   A(202, 277) = std::complex<double>(0.0, 2.0*-2.5);
   A(277, 202) = -std::complex<double>(0.0, 2.0*-2.5);
   A(203, 206) = std::complex<double>(0.0, 2.0*-1.0);
   A(206, 203) = -std::complex<double>(0.0, 2.0*-1.0);
   A(203, 241) = std::complex<double>(0.0, 2.0*-1.0);
   A(241, 203) = -std::complex<double>(0.0, 2.0*-1.0);
   A(204, 205) = std::complex<double>(0.0, 2.0*-1.0);
   A(205, 204) = -std::complex<double>(0.0, 2.0*-1.0);
   A(204, 206) = std::complex<double>(0.0, 2.0*-1.0);
   A(206, 204) = -std::complex<double>(0.0, 2.0*-1.0);
   A(204, 207) = std::complex<double>(0.0, 2.0*-2.5);
   A(207, 204) = -std::complex<double>(0.0, 2.0*-2.5);
   A(205, 207) = std::complex<double>(0.0, 2.0*-1.0);
   A(207, 205) = -std::complex<double>(0.0, 2.0*-1.0);
   A(205, 208) = std::complex<double>(0.0, 2.0*-1.0);
   A(208, 205) = -std::complex<double>(0.0, 2.0*-1.0);
   A(206, 207) = std::complex<double>(0.0, 2.0*-1.0);
   A(207, 206) = -std::complex<double>(0.0, 2.0*-1.0);
   A(206, 241) = std::complex<double>(0.0, 2.0*-2.5);
   A(241, 206) = -std::complex<double>(0.0, 2.0*-2.5);
   A(206, 244) = std::complex<double>(0.0, 2.0*-1.0);
   A(244, 206) = -std::complex<double>(0.0, 2.0*-1.0);
   A(207, 210) = std::complex<double>(0.0, 2.0*-1.0);
   A(210, 207) = -std::complex<double>(0.0, 2.0*-1.0);
   A(207, 245) = std::complex<double>(0.0, 2.0*-1.0);
   A(245, 207) = -std::complex<double>(0.0, 2.0*-1.0);
   A(208, 209) = std::complex<double>(0.0, 2.0*-1.0);
   A(209, 208) = -std::complex<double>(0.0, 2.0*-1.0);
   A(208, 210) = std::complex<double>(0.0, 2.0*-1.0);
   A(210, 208) = -std::complex<double>(0.0, 2.0*-1.0);
   A(208, 211) = std::complex<double>(0.0, 2.0*-2.5);
   A(211, 208) = -std::complex<double>(0.0, 2.0*-2.5);
   A(209, 211) = std::complex<double>(0.0, 2.0*-1.0);
   A(211, 209) = -std::complex<double>(0.0, 2.0*-1.0);
   A(209, 212) = std::complex<double>(0.0, 2.0*-1.0);
   A(212, 209) = -std::complex<double>(0.0, 2.0*-1.0);
   A(210, 211) = std::complex<double>(0.0, 2.0*-1.0);
   A(211, 210) = -std::complex<double>(0.0, 2.0*-1.0);
   A(210, 245) = std::complex<double>(0.0, 2.0*-2.5);
   A(245, 210) = -std::complex<double>(0.0, 2.0*-2.5);
   A(210, 248) = std::complex<double>(0.0, 2.0*-1.0);
   A(248, 210) = -std::complex<double>(0.0, 2.0*-1.0);
   A(211, 214) = std::complex<double>(0.0, 2.0*-1.0);
   A(214, 211) = -std::complex<double>(0.0, 2.0*-1.0);
   A(211, 249) = std::complex<double>(0.0, 2.0*-1.0);
   A(249, 211) = -std::complex<double>(0.0, 2.0*-1.0);
   A(212, 213) = std::complex<double>(0.0, 2.0*-1.0);
   A(213, 212) = -std::complex<double>(0.0, 2.0*-1.0);
   A(212, 214) = std::complex<double>(0.0, 2.0*-1.0);
   A(214, 212) = -std::complex<double>(0.0, 2.0*-1.0);
   A(212, 215) = std::complex<double>(0.0, 2.0*-2.5);
   A(215, 212) = -std::complex<double>(0.0, 2.0*-2.5);
   A(213, 215) = std::complex<double>(0.0, 2.0*-1.0);
   A(215, 213) = -std::complex<double>(0.0, 2.0*-1.0);
   A(213, 216) = std::complex<double>(0.0, 2.0*-1.0);
   A(216, 213) = -std::complex<double>(0.0, 2.0*-1.0);
   A(214, 215) = std::complex<double>(0.0, 2.0*-1.0);
   A(215, 214) = -std::complex<double>(0.0, 2.0*-1.0);
   A(214, 249) = std::complex<double>(0.0, 2.0*-2.5);
   A(249, 214) = -std::complex<double>(0.0, 2.0*-2.5);
   A(214, 252) = std::complex<double>(0.0, 2.0*-1.0);
   A(252, 214) = -std::complex<double>(0.0, 2.0*-1.0);
   A(215, 218) = std::complex<double>(0.0, 2.0*-1.0);
   A(218, 215) = -std::complex<double>(0.0, 2.0*-1.0);
   A(215, 253) = std::complex<double>(0.0, 2.0*-1.0);
   A(253, 215) = -std::complex<double>(0.0, 2.0*-1.0);
   A(216, 217) = std::complex<double>(0.0, 2.0*-1.0);
   A(217, 216) = -std::complex<double>(0.0, 2.0*-1.0);
   A(216, 218) = std::complex<double>(0.0, 2.0*-1.0);
   A(218, 216) = -std::complex<double>(0.0, 2.0*-1.0);
   A(216, 219) = std::complex<double>(0.0, 2.0*-2.5);
   A(219, 216) = -std::complex<double>(0.0, 2.0*-2.5);
   A(217, 219) = std::complex<double>(0.0, 2.0*-1.0);
   A(219, 217) = -std::complex<double>(0.0, 2.0*-1.0);
   A(217, 220) = std::complex<double>(0.0, 2.0*-1.0);
   A(220, 217) = -std::complex<double>(0.0, 2.0*-1.0);
   A(218, 219) = std::complex<double>(0.0, 2.0*-1.0);
   A(219, 218) = -std::complex<double>(0.0, 2.0*-1.0);
   A(218, 253) = std::complex<double>(0.0, 2.0*-2.5);
   A(253, 218) = -std::complex<double>(0.0, 2.0*-2.5);
   A(218, 256) = std::complex<double>(0.0, 2.0*-1.0);
   A(256, 218) = -std::complex<double>(0.0, 2.0*-1.0);
   A(219, 222) = std::complex<double>(0.0, 2.0*-1.0);
   A(222, 219) = -std::complex<double>(0.0, 2.0*-1.0);
   A(219, 257) = std::complex<double>(0.0, 2.0*-1.0);
   A(257, 219) = -std::complex<double>(0.0, 2.0*-1.0);
   A(220, 221) = std::complex<double>(0.0, 2.0*-1.0);
   A(221, 220) = -std::complex<double>(0.0, 2.0*-1.0);
   A(220, 222) = std::complex<double>(0.0, 2.0*-1.0);
   A(222, 220) = -std::complex<double>(0.0, 2.0*-1.0);
   A(220, 223) = std::complex<double>(0.0, 2.0*-2.5);
   A(223, 220) = -std::complex<double>(0.0, 2.0*-2.5);
   A(221, 223) = std::complex<double>(0.0, 2.0*-1.0);
   A(223, 221) = -std::complex<double>(0.0, 2.0*-1.0);
   A(221, 224) = std::complex<double>(0.0, 2.0*-1.0);
   A(224, 221) = -std::complex<double>(0.0, 2.0*-1.0);
   A(222, 223) = std::complex<double>(0.0, 2.0*-1.0);
   A(223, 222) = -std::complex<double>(0.0, 2.0*-1.0);
   A(222, 257) = std::complex<double>(0.0, 2.0*-2.5);
   A(257, 222) = -std::complex<double>(0.0, 2.0*-2.5);
   A(222, 260) = std::complex<double>(0.0, 2.0*-1.0);
   A(260, 222) = -std::complex<double>(0.0, 2.0*-1.0);
   A(223, 226) = std::complex<double>(0.0, 2.0*-1.0);
   A(226, 223) = -std::complex<double>(0.0, 2.0*-1.0);
   A(223, 261) = std::complex<double>(0.0, 2.0*-1.0);
   A(261, 223) = -std::complex<double>(0.0, 2.0*-1.0);
   A(224, 225) = std::complex<double>(0.0, 2.0*-1.0);
   A(225, 224) = -std::complex<double>(0.0, 2.0*-1.0);
   A(224, 226) = std::complex<double>(0.0, 2.0*-1.0);
   A(226, 224) = -std::complex<double>(0.0, 2.0*-1.0);
   A(224, 227) = std::complex<double>(0.0, 2.0*-2.5);
   A(227, 224) = -std::complex<double>(0.0, 2.0*-2.5);
   A(225, 227) = std::complex<double>(0.0, 2.0*-1.0);
   A(227, 225) = -std::complex<double>(0.0, 2.0*-1.0);
   A(225, 228) = std::complex<double>(0.0, 2.0*-1.0);
   A(228, 225) = -std::complex<double>(0.0, 2.0*-1.0);
   A(226, 227) = std::complex<double>(0.0, 2.0*-1.0);
   A(227, 226) = -std::complex<double>(0.0, 2.0*-1.0);
   A(226, 261) = std::complex<double>(0.0, 2.0*-2.5);
   A(261, 226) = -std::complex<double>(0.0, 2.0*-2.5);
   A(226, 264) = std::complex<double>(0.0, 2.0*-1.0);
   A(264, 226) = -std::complex<double>(0.0, 2.0*-1.0);
   A(227, 230) = std::complex<double>(0.0, 2.0*-1.0);
   A(230, 227) = -std::complex<double>(0.0, 2.0*-1.0);
   A(227, 265) = std::complex<double>(0.0, 2.0*-1.0);
   A(265, 227) = -std::complex<double>(0.0, 2.0*-1.0);
   A(228, 229) = std::complex<double>(0.0, 2.0*-1.0);
   A(229, 228) = -std::complex<double>(0.0, 2.0*-1.0);
   A(228, 230) = std::complex<double>(0.0, 2.0*-1.0);
   A(230, 228) = -std::complex<double>(0.0, 2.0*-1.0);
   A(228, 231) = std::complex<double>(0.0, 2.0*-2.5);
   A(231, 228) = -std::complex<double>(0.0, 2.0*-2.5);
   A(229, 231) = std::complex<double>(0.0, 2.0*-1.0);
   A(231, 229) = -std::complex<double>(0.0, 2.0*-1.0);
   A(229, 232) = std::complex<double>(0.0, 2.0*-1.0);
   A(232, 229) = -std::complex<double>(0.0, 2.0*-1.0);
   A(230, 231) = std::complex<double>(0.0, 2.0*-1.0);
   A(231, 230) = -std::complex<double>(0.0, 2.0*-1.0);
   A(230, 265) = std::complex<double>(0.0, 2.0*-2.5);
   A(265, 230) = -std::complex<double>(0.0, 2.0*-2.5);
   A(230, 268) = std::complex<double>(0.0, 2.0*-1.0);
   A(268, 230) = -std::complex<double>(0.0, 2.0*-1.0);
   A(231, 234) = std::complex<double>(0.0, 2.0*-1.0);
   A(234, 231) = -std::complex<double>(0.0, 2.0*-1.0);
   A(231, 269) = std::complex<double>(0.0, 2.0*-1.0);
   A(269, 231) = -std::complex<double>(0.0, 2.0*-1.0);
   A(232, 233) = std::complex<double>(0.0, 2.0*-1.0);
   A(233, 232) = -std::complex<double>(0.0, 2.0*-1.0);
   A(232, 234) = std::complex<double>(0.0, 2.0*-1.0);
   A(234, 232) = -std::complex<double>(0.0, 2.0*-1.0);
   A(232, 235) = std::complex<double>(0.0, 2.0*-2.5);
   A(235, 232) = -std::complex<double>(0.0, 2.0*-2.5);
   A(233, 235) = std::complex<double>(0.0, 2.0*-1.0);
   A(235, 233) = -std::complex<double>(0.0, 2.0*-1.0);
   A(233, 236) = std::complex<double>(0.0, 2.0*-1.0);
   A(236, 233) = -std::complex<double>(0.0, 2.0*-1.0);
   A(234, 235) = std::complex<double>(0.0, 2.0*-1.0);
   A(235, 234) = -std::complex<double>(0.0, 2.0*-1.0);
   A(234, 269) = std::complex<double>(0.0, 2.0*-2.5);
   A(269, 234) = -std::complex<double>(0.0, 2.0*-2.5);
   A(234, 272) = std::complex<double>(0.0, 2.0*-1.0);
   A(272, 234) = -std::complex<double>(0.0, 2.0*-1.0);
   A(235, 238) = std::complex<double>(0.0, 2.0*-1.0);
   A(238, 235) = -std::complex<double>(0.0, 2.0*-1.0);
   A(235, 273) = std::complex<double>(0.0, 2.0*-1.0);
   A(273, 235) = -std::complex<double>(0.0, 2.0*-1.0);
   A(236, 237) = std::complex<double>(0.0, 2.0*-1.0);
   A(237, 236) = -std::complex<double>(0.0, 2.0*-1.0);
   A(236, 238) = std::complex<double>(0.0, 2.0*-1.0);
   A(238, 236) = -std::complex<double>(0.0, 2.0*-1.0);
   A(236, 239) = std::complex<double>(0.0, 2.0*-2.5);
   A(239, 236) = -std::complex<double>(0.0, 2.0*-2.5);
   A(237, 239) = std::complex<double>(0.0, 2.0*-1.0);
   A(239, 237) = -std::complex<double>(0.0, 2.0*-1.0);
   A(238, 239) = std::complex<double>(0.0, 2.0*-1.0);
   A(239, 238) = -std::complex<double>(0.0, 2.0*-1.0);
   A(238, 273) = std::complex<double>(0.0, 2.0*-2.5);
   A(273, 238) = -std::complex<double>(0.0, 2.0*-2.5);
   A(238, 276) = std::complex<double>(0.0, 2.0*-1.0);
   A(276, 238) = -std::complex<double>(0.0, 2.0*-1.0);
   A(239, 277) = std::complex<double>(0.0, 2.0*-1.0);
   A(277, 239) = -std::complex<double>(0.0, 2.0*-1.0);
   A(240, 241) = std::complex<double>(0.0, 2.0*-1.0);
   A(241, 240) = -std::complex<double>(0.0, 2.0*-1.0);
   A(240, 242) = std::complex<double>(0.0, 2.0*-1.0);
   A(242, 240) = -std::complex<double>(0.0, 2.0*-1.0);
   A(240, 243) = std::complex<double>(0.0, 2.0*-2.5);
   A(243, 240) = -std::complex<double>(0.0, 2.0*-2.5);
   A(240, 277) = std::complex<double>(0.0, 2.0*-1.0);
   A(277, 240) = -std::complex<double>(0.0, 2.0*-1.0);
   A(241, 243) = std::complex<double>(0.0, 2.0*-1.0);
   A(243, 241) = -std::complex<double>(0.0, 2.0*-1.0);
   A(241, 244) = std::complex<double>(0.0, 2.0*-1.0);
   A(244, 241) = -std::complex<double>(0.0, 2.0*-1.0);
   A(242, 243) = std::complex<double>(0.0, 2.0*-1.0);
   A(243, 242) = -std::complex<double>(0.0, 2.0*-1.0);
   A(242, 279) = std::complex<double>(0.0, 2.0*-1.0);
   A(279, 242) = -std::complex<double>(0.0, 2.0*-1.0);
   A(242, 280) = std::complex<double>(0.0, 2.0*-1.0);
   A(280, 242) = -std::complex<double>(0.0, 2.0*-1.0);
   A(242, 317) = std::complex<double>(0.0, 2.0*-2.5);
   A(317, 242) = -std::complex<double>(0.0, 2.0*-2.5);
   A(243, 246) = std::complex<double>(0.0, 2.0*-1.0);
   A(246, 243) = -std::complex<double>(0.0, 2.0*-1.0);
   A(243, 281) = std::complex<double>(0.0, 2.0*-1.0);
   A(281, 243) = -std::complex<double>(0.0, 2.0*-1.0);
   A(244, 245) = std::complex<double>(0.0, 2.0*-1.0);
   A(245, 244) = -std::complex<double>(0.0, 2.0*-1.0);
   A(244, 246) = std::complex<double>(0.0, 2.0*-1.0);
   A(246, 244) = -std::complex<double>(0.0, 2.0*-1.0);
   A(244, 247) = std::complex<double>(0.0, 2.0*-2.5);
   A(247, 244) = -std::complex<double>(0.0, 2.0*-2.5);
   A(245, 247) = std::complex<double>(0.0, 2.0*-1.0);
   A(247, 245) = -std::complex<double>(0.0, 2.0*-1.0);
   A(245, 248) = std::complex<double>(0.0, 2.0*-1.0);
   A(248, 245) = -std::complex<double>(0.0, 2.0*-1.0);
   A(246, 247) = std::complex<double>(0.0, 2.0*-1.0);
   A(247, 246) = -std::complex<double>(0.0, 2.0*-1.0);
   A(246, 281) = std::complex<double>(0.0, 2.0*-2.5);
   A(281, 246) = -std::complex<double>(0.0, 2.0*-2.5);
   A(246, 284) = std::complex<double>(0.0, 2.0*-1.0);
   A(284, 246) = -std::complex<double>(0.0, 2.0*-1.0);
   A(247, 250) = std::complex<double>(0.0, 2.0*-1.0);
   A(250, 247) = -std::complex<double>(0.0, 2.0*-1.0);
   A(247, 285) = std::complex<double>(0.0, 2.0*-1.0);
   A(285, 247) = -std::complex<double>(0.0, 2.0*-1.0);
   A(248, 249) = std::complex<double>(0.0, 2.0*-1.0);
   A(249, 248) = -std::complex<double>(0.0, 2.0*-1.0);
   A(248, 250) = std::complex<double>(0.0, 2.0*-1.0);
   A(250, 248) = -std::complex<double>(0.0, 2.0*-1.0);
   A(248, 251) = std::complex<double>(0.0, 2.0*-2.5);
   A(251, 248) = -std::complex<double>(0.0, 2.0*-2.5);
   A(249, 251) = std::complex<double>(0.0, 2.0*-1.0);
   A(251, 249) = -std::complex<double>(0.0, 2.0*-1.0);
   A(249, 252) = std::complex<double>(0.0, 2.0*-1.0);
   A(252, 249) = -std::complex<double>(0.0, 2.0*-1.0);
   A(250, 251) = std::complex<double>(0.0, 2.0*-1.0);
   A(251, 250) = -std::complex<double>(0.0, 2.0*-1.0);
   A(250, 285) = std::complex<double>(0.0, 2.0*-2.5);
   A(285, 250) = -std::complex<double>(0.0, 2.0*-2.5);
   A(250, 288) = std::complex<double>(0.0, 2.0*-1.0);
   A(288, 250) = -std::complex<double>(0.0, 2.0*-1.0);
   A(251, 254) = std::complex<double>(0.0, 2.0*-1.0);
   A(254, 251) = -std::complex<double>(0.0, 2.0*-1.0);
   A(251, 289) = std::complex<double>(0.0, 2.0*-1.0);
   A(289, 251) = -std::complex<double>(0.0, 2.0*-1.0);
   A(252, 253) = std::complex<double>(0.0, 2.0*-1.0);
   A(253, 252) = -std::complex<double>(0.0, 2.0*-1.0);
   A(252, 254) = std::complex<double>(0.0, 2.0*-1.0);
   A(254, 252) = -std::complex<double>(0.0, 2.0*-1.0);
   A(252, 255) = std::complex<double>(0.0, 2.0*-2.5);
   A(255, 252) = -std::complex<double>(0.0, 2.0*-2.5);
   A(253, 255) = std::complex<double>(0.0, 2.0*-1.0);
   A(255, 253) = -std::complex<double>(0.0, 2.0*-1.0);
   A(253, 256) = std::complex<double>(0.0, 2.0*-1.0);
   A(256, 253) = -std::complex<double>(0.0, 2.0*-1.0);
   A(254, 255) = std::complex<double>(0.0, 2.0*-1.0);
   A(255, 254) = -std::complex<double>(0.0, 2.0*-1.0);
   A(254, 289) = std::complex<double>(0.0, 2.0*-2.5);
   A(289, 254) = -std::complex<double>(0.0, 2.0*-2.5);
   A(254, 292) = std::complex<double>(0.0, 2.0*-1.0);
   A(292, 254) = -std::complex<double>(0.0, 2.0*-1.0);
   A(255, 258) = std::complex<double>(0.0, 2.0*-1.0);
   A(258, 255) = -std::complex<double>(0.0, 2.0*-1.0);
   A(255, 293) = std::complex<double>(0.0, 2.0*-1.0);
   A(293, 255) = -std::complex<double>(0.0, 2.0*-1.0);
   A(256, 257) = std::complex<double>(0.0, 2.0*-1.0);
   A(257, 256) = -std::complex<double>(0.0, 2.0*-1.0);
   A(256, 258) = std::complex<double>(0.0, 2.0*-1.0);
   A(258, 256) = -std::complex<double>(0.0, 2.0*-1.0);
   A(256, 259) = std::complex<double>(0.0, 2.0*-2.5);
   A(259, 256) = -std::complex<double>(0.0, 2.0*-2.5);
   A(257, 259) = std::complex<double>(0.0, 2.0*-1.0);
   A(259, 257) = -std::complex<double>(0.0, 2.0*-1.0);
   A(257, 260) = std::complex<double>(0.0, 2.0*-1.0);
   A(260, 257) = -std::complex<double>(0.0, 2.0*-1.0);
   A(258, 259) = std::complex<double>(0.0, 2.0*-1.0);
   A(259, 258) = -std::complex<double>(0.0, 2.0*-1.0);
   A(258, 293) = std::complex<double>(0.0, 2.0*-2.5);
   A(293, 258) = -std::complex<double>(0.0, 2.0*-2.5);
   A(258, 296) = std::complex<double>(0.0, 2.0*-1.0);
   A(296, 258) = -std::complex<double>(0.0, 2.0*-1.0);
   A(259, 262) = std::complex<double>(0.0, 2.0*-1.0);
   A(262, 259) = -std::complex<double>(0.0, 2.0*-1.0);
   A(259, 297) = std::complex<double>(0.0, 2.0*-1.0);
   A(297, 259) = -std::complex<double>(0.0, 2.0*-1.0);
   A(260, 261) = std::complex<double>(0.0, 2.0*-1.0);
   A(261, 260) = -std::complex<double>(0.0, 2.0*-1.0);
   A(260, 262) = std::complex<double>(0.0, 2.0*-1.0);
   A(262, 260) = -std::complex<double>(0.0, 2.0*-1.0);
   A(260, 263) = std::complex<double>(0.0, 2.0*-2.5);
   A(263, 260) = -std::complex<double>(0.0, 2.0*-2.5);
   A(261, 263) = std::complex<double>(0.0, 2.0*-1.0);
   A(263, 261) = -std::complex<double>(0.0, 2.0*-1.0);
   A(261, 264) = std::complex<double>(0.0, 2.0*-1.0);
   A(264, 261) = -std::complex<double>(0.0, 2.0*-1.0);
   A(262, 263) = std::complex<double>(0.0, 2.0*-1.0);
   A(263, 262) = -std::complex<double>(0.0, 2.0*-1.0);
   A(262, 297) = std::complex<double>(0.0, 2.0*-2.5);
   A(297, 262) = -std::complex<double>(0.0, 2.0*-2.5);
   A(262, 300) = std::complex<double>(0.0, 2.0*-1.0);
   A(300, 262) = -std::complex<double>(0.0, 2.0*-1.0);
   A(263, 266) = std::complex<double>(0.0, 2.0*-1.0);
   A(266, 263) = -std::complex<double>(0.0, 2.0*-1.0);
   A(263, 301) = std::complex<double>(0.0, 2.0*-1.0);
   A(301, 263) = -std::complex<double>(0.0, 2.0*-1.0);
   A(264, 265) = std::complex<double>(0.0, 2.0*-1.0);
   A(265, 264) = -std::complex<double>(0.0, 2.0*-1.0);
   A(264, 266) = std::complex<double>(0.0, 2.0*-1.0);
   A(266, 264) = -std::complex<double>(0.0, 2.0*-1.0);
   A(264, 267) = std::complex<double>(0.0, 2.0*-2.5);
   A(267, 264) = -std::complex<double>(0.0, 2.0*-2.5);
   A(265, 267) = std::complex<double>(0.0, 2.0*-1.0);
   A(267, 265) = -std::complex<double>(0.0, 2.0*-1.0);
   A(265, 268) = std::complex<double>(0.0, 2.0*-1.0);
   A(268, 265) = -std::complex<double>(0.0, 2.0*-1.0);
   A(266, 267) = std::complex<double>(0.0, 2.0*-1.0);
   A(267, 266) = -std::complex<double>(0.0, 2.0*-1.0);
   A(266, 301) = std::complex<double>(0.0, 2.0*-2.5);
   A(301, 266) = -std::complex<double>(0.0, 2.0*-2.5);
   A(266, 304) = std::complex<double>(0.0, 2.0*-1.0);
   A(304, 266) = -std::complex<double>(0.0, 2.0*-1.0);
   A(267, 270) = std::complex<double>(0.0, 2.0*-1.0);
   A(270, 267) = -std::complex<double>(0.0, 2.0*-1.0);
   A(267, 305) = std::complex<double>(0.0, 2.0*-1.0);
   A(305, 267) = -std::complex<double>(0.0, 2.0*-1.0);
   A(268, 269) = std::complex<double>(0.0, 2.0*-1.0);
   A(269, 268) = -std::complex<double>(0.0, 2.0*-1.0);
   A(268, 270) = std::complex<double>(0.0, 2.0*-1.0);
   A(270, 268) = -std::complex<double>(0.0, 2.0*-1.0);
   A(268, 271) = std::complex<double>(0.0, 2.0*-2.5);
   A(271, 268) = -std::complex<double>(0.0, 2.0*-2.5);
   A(269, 271) = std::complex<double>(0.0, 2.0*-1.0);
   A(271, 269) = -std::complex<double>(0.0, 2.0*-1.0);
   A(269, 272) = std::complex<double>(0.0, 2.0*-1.0);
   A(272, 269) = -std::complex<double>(0.0, 2.0*-1.0);
   A(270, 271) = std::complex<double>(0.0, 2.0*-1.0);
   A(271, 270) = -std::complex<double>(0.0, 2.0*-1.0);
   A(270, 305) = std::complex<double>(0.0, 2.0*-2.5);
   A(305, 270) = -std::complex<double>(0.0, 2.0*-2.5);
   A(270, 308) = std::complex<double>(0.0, 2.0*-1.0);
   A(308, 270) = -std::complex<double>(0.0, 2.0*-1.0);
   A(271, 274) = std::complex<double>(0.0, 2.0*-1.0);
   A(274, 271) = -std::complex<double>(0.0, 2.0*-1.0);
   A(271, 309) = std::complex<double>(0.0, 2.0*-1.0);
   A(309, 271) = -std::complex<double>(0.0, 2.0*-1.0);
   A(272, 273) = std::complex<double>(0.0, 2.0*-1.0);
   A(273, 272) = -std::complex<double>(0.0, 2.0*-1.0);
   A(272, 274) = std::complex<double>(0.0, 2.0*-1.0);
   A(274, 272) = -std::complex<double>(0.0, 2.0*-1.0);
   A(272, 275) = std::complex<double>(0.0, 2.0*-2.5);
   A(275, 272) = -std::complex<double>(0.0, 2.0*-2.5);
   A(273, 275) = std::complex<double>(0.0, 2.0*-1.0);
   A(275, 273) = -std::complex<double>(0.0, 2.0*-1.0);
   A(273, 276) = std::complex<double>(0.0, 2.0*-1.0);
   A(276, 273) = -std::complex<double>(0.0, 2.0*-1.0);
   A(274, 275) = std::complex<double>(0.0, 2.0*-1.0);
   A(275, 274) = -std::complex<double>(0.0, 2.0*-1.0);
   A(274, 309) = std::complex<double>(0.0, 2.0*-2.5);
   A(309, 274) = -std::complex<double>(0.0, 2.0*-2.5);
   A(274, 312) = std::complex<double>(0.0, 2.0*-1.0);
   A(312, 274) = -std::complex<double>(0.0, 2.0*-1.0);
   A(275, 278) = std::complex<double>(0.0, 2.0*-1.0);
   A(278, 275) = -std::complex<double>(0.0, 2.0*-1.0);
   A(275, 313) = std::complex<double>(0.0, 2.0*-1.0);
   A(313, 275) = -std::complex<double>(0.0, 2.0*-1.0);
   A(276, 277) = std::complex<double>(0.0, 2.0*-1.0);
   A(277, 276) = -std::complex<double>(0.0, 2.0*-1.0);
   A(276, 278) = std::complex<double>(0.0, 2.0*-1.0);
   A(278, 276) = -std::complex<double>(0.0, 2.0*-1.0);
   A(276, 279) = std::complex<double>(0.0, 2.0*-2.5);
   A(279, 276) = -std::complex<double>(0.0, 2.0*-2.5);
   A(277, 279) = std::complex<double>(0.0, 2.0*-1.0);
   A(279, 277) = -std::complex<double>(0.0, 2.0*-1.0);
   A(278, 279) = std::complex<double>(0.0, 2.0*-1.0);
   A(279, 278) = -std::complex<double>(0.0, 2.0*-1.0);
   A(278, 313) = std::complex<double>(0.0, 2.0*-2.5);
   A(313, 278) = -std::complex<double>(0.0, 2.0*-2.5);
   A(278, 316) = std::complex<double>(0.0, 2.0*-1.0);
   A(316, 278) = -std::complex<double>(0.0, 2.0*-1.0);
   A(279, 317) = std::complex<double>(0.0, 2.0*-1.0);
   A(317, 279) = -std::complex<double>(0.0, 2.0*-1.0);
   A(280, 281) = std::complex<double>(0.0, 2.0*-1.0);
   A(281, 280) = -std::complex<double>(0.0, 2.0*-1.0);
   A(280, 282) = std::complex<double>(0.0, 2.0*-1.0);
   A(282, 280) = -std::complex<double>(0.0, 2.0*-1.0);
   A(280, 283) = std::complex<double>(0.0, 2.0*-2.5);
   A(283, 280) = -std::complex<double>(0.0, 2.0*-2.5);
   A(280, 317) = std::complex<double>(0.0, 2.0*-1.0);
   A(317, 280) = -std::complex<double>(0.0, 2.0*-1.0);
   A(281, 283) = std::complex<double>(0.0, 2.0*-1.0);
   A(283, 281) = -std::complex<double>(0.0, 2.0*-1.0);
   A(281, 284) = std::complex<double>(0.0, 2.0*-1.0);
   A(284, 281) = -std::complex<double>(0.0, 2.0*-1.0);
   A(282, 283) = std::complex<double>(0.0, 2.0*-1.0);
   A(283, 282) = -std::complex<double>(0.0, 2.0*-1.0);
   A(282, 319) = std::complex<double>(0.0, 2.0*-1.0);
   A(319, 282) = -std::complex<double>(0.0, 2.0*-1.0);
   A(282, 320) = std::complex<double>(0.0, 2.0*-1.0);
   A(320, 282) = -std::complex<double>(0.0, 2.0*-1.0);
   A(282, 357) = std::complex<double>(0.0, 2.0*-2.5);
   A(357, 282) = -std::complex<double>(0.0, 2.0*-2.5);
   A(283, 286) = std::complex<double>(0.0, 2.0*-1.0);
   A(286, 283) = -std::complex<double>(0.0, 2.0*-1.0);
   A(283, 321) = std::complex<double>(0.0, 2.0*-1.0);
   A(321, 283) = -std::complex<double>(0.0, 2.0*-1.0);
   A(284, 285) = std::complex<double>(0.0, 2.0*-1.0);
   A(285, 284) = -std::complex<double>(0.0, 2.0*-1.0);
   A(284, 286) = std::complex<double>(0.0, 2.0*-1.0);
   A(286, 284) = -std::complex<double>(0.0, 2.0*-1.0);
   A(284, 287) = std::complex<double>(0.0, 2.0*-2.5);
   A(287, 284) = -std::complex<double>(0.0, 2.0*-2.5);
   A(285, 287) = std::complex<double>(0.0, 2.0*-1.0);
   A(287, 285) = -std::complex<double>(0.0, 2.0*-1.0);
   A(285, 288) = std::complex<double>(0.0, 2.0*-1.0);
   A(288, 285) = -std::complex<double>(0.0, 2.0*-1.0);
   A(286, 287) = std::complex<double>(0.0, 2.0*-1.0);
   A(287, 286) = -std::complex<double>(0.0, 2.0*-1.0);
   A(286, 321) = std::complex<double>(0.0, 2.0*-2.5);
   A(321, 286) = -std::complex<double>(0.0, 2.0*-2.5);
   A(286, 324) = std::complex<double>(0.0, 2.0*-1.0);
   A(324, 286) = -std::complex<double>(0.0, 2.0*-1.0);
   A(287, 290) = std::complex<double>(0.0, 2.0*-1.0);
   A(290, 287) = -std::complex<double>(0.0, 2.0*-1.0);
   A(287, 325) = std::complex<double>(0.0, 2.0*-1.0);
   A(325, 287) = -std::complex<double>(0.0, 2.0*-1.0);
   A(288, 289) = std::complex<double>(0.0, 2.0*-1.0);
   A(289, 288) = -std::complex<double>(0.0, 2.0*-1.0);
   A(288, 290) = std::complex<double>(0.0, 2.0*-1.0);
   A(290, 288) = -std::complex<double>(0.0, 2.0*-1.0);
   A(288, 291) = std::complex<double>(0.0, 2.0*-2.5);
   A(291, 288) = -std::complex<double>(0.0, 2.0*-2.5);
   A(289, 291) = std::complex<double>(0.0, 2.0*-1.0);
   A(291, 289) = -std::complex<double>(0.0, 2.0*-1.0);
   A(289, 292) = std::complex<double>(0.0, 2.0*-1.0);
   A(292, 289) = -std::complex<double>(0.0, 2.0*-1.0);
   A(290, 291) = std::complex<double>(0.0, 2.0*-1.0);
   A(291, 290) = -std::complex<double>(0.0, 2.0*-1.0);
   A(290, 325) = std::complex<double>(0.0, 2.0*-2.5);
   A(325, 290) = -std::complex<double>(0.0, 2.0*-2.5);
   A(290, 328) = std::complex<double>(0.0, 2.0*-1.0);
   A(328, 290) = -std::complex<double>(0.0, 2.0*-1.0);
   A(291, 294) = std::complex<double>(0.0, 2.0*-1.0);
   A(294, 291) = -std::complex<double>(0.0, 2.0*-1.0);
   A(291, 329) = std::complex<double>(0.0, 2.0*-1.0);
   A(329, 291) = -std::complex<double>(0.0, 2.0*-1.0);
   A(292, 293) = std::complex<double>(0.0, 2.0*-1.0);
   A(293, 292) = -std::complex<double>(0.0, 2.0*-1.0);
   A(292, 294) = std::complex<double>(0.0, 2.0*-1.0);
   A(294, 292) = -std::complex<double>(0.0, 2.0*-1.0);
   A(292, 295) = std::complex<double>(0.0, 2.0*-2.5);
   A(295, 292) = -std::complex<double>(0.0, 2.0*-2.5);
   A(293, 295) = std::complex<double>(0.0, 2.0*-1.0);
   A(295, 293) = -std::complex<double>(0.0, 2.0*-1.0);
   A(293, 296) = std::complex<double>(0.0, 2.0*-1.0);
   A(296, 293) = -std::complex<double>(0.0, 2.0*-1.0);
   A(294, 295) = std::complex<double>(0.0, 2.0*-1.0);
   A(295, 294) = -std::complex<double>(0.0, 2.0*-1.0);
   A(294, 329) = std::complex<double>(0.0, 2.0*-2.5);
   A(329, 294) = -std::complex<double>(0.0, 2.0*-2.5);
   A(294, 332) = std::complex<double>(0.0, 2.0*-1.0);
   A(332, 294) = -std::complex<double>(0.0, 2.0*-1.0);
   A(295, 298) = std::complex<double>(0.0, 2.0*-1.0);
   A(298, 295) = -std::complex<double>(0.0, 2.0*-1.0);
   A(295, 333) = std::complex<double>(0.0, 2.0*-1.0);
   A(333, 295) = -std::complex<double>(0.0, 2.0*-1.0);
   A(296, 297) = std::complex<double>(0.0, 2.0*-1.0);
   A(297, 296) = -std::complex<double>(0.0, 2.0*-1.0);
   A(296, 298) = std::complex<double>(0.0, 2.0*-1.0);
   A(298, 296) = -std::complex<double>(0.0, 2.0*-1.0);
   A(296, 299) = std::complex<double>(0.0, 2.0*-2.5);
   A(299, 296) = -std::complex<double>(0.0, 2.0*-2.5);
   A(297, 299) = std::complex<double>(0.0, 2.0*-1.0);
   A(299, 297) = -std::complex<double>(0.0, 2.0*-1.0);
   A(297, 300) = std::complex<double>(0.0, 2.0*-1.0);
   A(300, 297) = -std::complex<double>(0.0, 2.0*-1.0);
   A(298, 299) = std::complex<double>(0.0, 2.0*-1.0);
   A(299, 298) = -std::complex<double>(0.0, 2.0*-1.0);
   A(298, 333) = std::complex<double>(0.0, 2.0*-2.5);
   A(333, 298) = -std::complex<double>(0.0, 2.0*-2.5);
   A(298, 336) = std::complex<double>(0.0, 2.0*-1.0);
   A(336, 298) = -std::complex<double>(0.0, 2.0*-1.0);
   A(299, 302) = std::complex<double>(0.0, 2.0*-1.0);
   A(302, 299) = -std::complex<double>(0.0, 2.0*-1.0);
   A(299, 337) = std::complex<double>(0.0, 2.0*-1.0);
   A(337, 299) = -std::complex<double>(0.0, 2.0*-1.0);
   A(300, 301) = std::complex<double>(0.0, 2.0*-1.0);
   A(301, 300) = -std::complex<double>(0.0, 2.0*-1.0);
   A(300, 302) = std::complex<double>(0.0, 2.0*-1.0);
   A(302, 300) = -std::complex<double>(0.0, 2.0*-1.0);
   A(300, 303) = std::complex<double>(0.0, 2.0*-2.5);
   A(303, 300) = -std::complex<double>(0.0, 2.0*-2.5);
   A(301, 303) = std::complex<double>(0.0, 2.0*-1.0);
   A(303, 301) = -std::complex<double>(0.0, 2.0*-1.0);
   A(301, 304) = std::complex<double>(0.0, 2.0*-1.0);
   A(304, 301) = -std::complex<double>(0.0, 2.0*-1.0);
   A(302, 303) = std::complex<double>(0.0, 2.0*-1.0);
   A(303, 302) = -std::complex<double>(0.0, 2.0*-1.0);
   A(302, 337) = std::complex<double>(0.0, 2.0*-2.5);
   A(337, 302) = -std::complex<double>(0.0, 2.0*-2.5);
   A(302, 340) = std::complex<double>(0.0, 2.0*-1.0);
   A(340, 302) = -std::complex<double>(0.0, 2.0*-1.0);
   A(303, 306) = std::complex<double>(0.0, 2.0*-1.0);
   A(306, 303) = -std::complex<double>(0.0, 2.0*-1.0);
   A(303, 341) = std::complex<double>(0.0, 2.0*-1.0);
   A(341, 303) = -std::complex<double>(0.0, 2.0*-1.0);
   A(304, 305) = std::complex<double>(0.0, 2.0*-1.0);
   A(305, 304) = -std::complex<double>(0.0, 2.0*-1.0);
   A(304, 306) = std::complex<double>(0.0, 2.0*-1.0);
   A(306, 304) = -std::complex<double>(0.0, 2.0*-1.0);
   A(304, 307) = std::complex<double>(0.0, 2.0*-2.5);
   A(307, 304) = -std::complex<double>(0.0, 2.0*-2.5);
   A(305, 307) = std::complex<double>(0.0, 2.0*-1.0);
   A(307, 305) = -std::complex<double>(0.0, 2.0*-1.0);
   A(305, 308) = std::complex<double>(0.0, 2.0*-1.0);
   A(308, 305) = -std::complex<double>(0.0, 2.0*-1.0);
   A(306, 307) = std::complex<double>(0.0, 2.0*-1.0);
   A(307, 306) = -std::complex<double>(0.0, 2.0*-1.0);
   A(306, 341) = std::complex<double>(0.0, 2.0*-2.5);
   A(341, 306) = -std::complex<double>(0.0, 2.0*-2.5);
   A(306, 344) = std::complex<double>(0.0, 2.0*-1.0);
   A(344, 306) = -std::complex<double>(0.0, 2.0*-1.0);
   A(307, 310) = std::complex<double>(0.0, 2.0*-1.0);
   A(310, 307) = -std::complex<double>(0.0, 2.0*-1.0);
   A(307, 345) = std::complex<double>(0.0, 2.0*-1.0);
   A(345, 307) = -std::complex<double>(0.0, 2.0*-1.0);
   A(308, 309) = std::complex<double>(0.0, 2.0*-1.0);
   A(309, 308) = -std::complex<double>(0.0, 2.0*-1.0);
   A(308, 310) = std::complex<double>(0.0, 2.0*-1.0);
   A(310, 308) = -std::complex<double>(0.0, 2.0*-1.0);
   A(308, 311) = std::complex<double>(0.0, 2.0*-2.5);
   A(311, 308) = -std::complex<double>(0.0, 2.0*-2.5);
   A(309, 311) = std::complex<double>(0.0, 2.0*-1.0);
   A(311, 309) = -std::complex<double>(0.0, 2.0*-1.0);
   A(309, 312) = std::complex<double>(0.0, 2.0*-1.0);
   A(312, 309) = -std::complex<double>(0.0, 2.0*-1.0);
   A(310, 311) = std::complex<double>(0.0, 2.0*-1.0);
   A(311, 310) = -std::complex<double>(0.0, 2.0*-1.0);
   A(310, 345) = std::complex<double>(0.0, 2.0*-2.5);
   A(345, 310) = -std::complex<double>(0.0, 2.0*-2.5);
   A(310, 348) = std::complex<double>(0.0, 2.0*-1.0);
   A(348, 310) = -std::complex<double>(0.0, 2.0*-1.0);
   A(311, 314) = std::complex<double>(0.0, 2.0*-1.0);
   A(314, 311) = -std::complex<double>(0.0, 2.0*-1.0);
   A(311, 349) = std::complex<double>(0.0, 2.0*-1.0);
   A(349, 311) = -std::complex<double>(0.0, 2.0*-1.0);
   A(312, 313) = std::complex<double>(0.0, 2.0*-1.0);
   A(313, 312) = -std::complex<double>(0.0, 2.0*-1.0);
   A(312, 314) = std::complex<double>(0.0, 2.0*-1.0);
   A(314, 312) = -std::complex<double>(0.0, 2.0*-1.0);
   A(312, 315) = std::complex<double>(0.0, 2.0*-2.5);
   A(315, 312) = -std::complex<double>(0.0, 2.0*-2.5);
   A(313, 315) = std::complex<double>(0.0, 2.0*-1.0);
   A(315, 313) = -std::complex<double>(0.0, 2.0*-1.0);
   A(313, 316) = std::complex<double>(0.0, 2.0*-1.0);
   A(316, 313) = -std::complex<double>(0.0, 2.0*-1.0);
   A(314, 315) = std::complex<double>(0.0, 2.0*-1.0);
   A(315, 314) = -std::complex<double>(0.0, 2.0*-1.0);
   A(314, 349) = std::complex<double>(0.0, 2.0*-2.5);
   A(349, 314) = -std::complex<double>(0.0, 2.0*-2.5);
   A(314, 352) = std::complex<double>(0.0, 2.0*-1.0);
   A(352, 314) = -std::complex<double>(0.0, 2.0*-1.0);
   A(315, 318) = std::complex<double>(0.0, 2.0*-1.0);
   A(318, 315) = -std::complex<double>(0.0, 2.0*-1.0);
   A(315, 353) = std::complex<double>(0.0, 2.0*-1.0);
   A(353, 315) = -std::complex<double>(0.0, 2.0*-1.0);
   A(316, 317) = std::complex<double>(0.0, 2.0*-1.0);
   A(317, 316) = -std::complex<double>(0.0, 2.0*-1.0);
   A(316, 318) = std::complex<double>(0.0, 2.0*-1.0);
   A(318, 316) = -std::complex<double>(0.0, 2.0*-1.0);
   A(316, 319) = std::complex<double>(0.0, 2.0*-2.5);
   A(319, 316) = -std::complex<double>(0.0, 2.0*-2.5);
   A(317, 319) = std::complex<double>(0.0, 2.0*-1.0);
   A(319, 317) = -std::complex<double>(0.0, 2.0*-1.0);
   A(318, 319) = std::complex<double>(0.0, 2.0*-1.0);
   A(319, 318) = -std::complex<double>(0.0, 2.0*-1.0);
   A(318, 353) = std::complex<double>(0.0, 2.0*-2.5);
   A(353, 318) = -std::complex<double>(0.0, 2.0*-2.5);
   A(318, 356) = std::complex<double>(0.0, 2.0*-1.0);
   A(356, 318) = -std::complex<double>(0.0, 2.0*-1.0);
   A(319, 357) = std::complex<double>(0.0, 2.0*-1.0);
   A(357, 319) = -std::complex<double>(0.0, 2.0*-1.0);
   A(320, 321) = std::complex<double>(0.0, 2.0*-1.0);
   A(321, 320) = -std::complex<double>(0.0, 2.0*-1.0);
   A(320, 322) = std::complex<double>(0.0, 2.0*-1.0);
   A(322, 320) = -std::complex<double>(0.0, 2.0*-1.0);
   A(320, 323) = std::complex<double>(0.0, 2.0*-2.5);
   A(323, 320) = -std::complex<double>(0.0, 2.0*-2.5);
   A(320, 357) = std::complex<double>(0.0, 2.0*-1.0);
   A(357, 320) = -std::complex<double>(0.0, 2.0*-1.0);
   A(321, 323) = std::complex<double>(0.0, 2.0*-1.0);
   A(323, 321) = -std::complex<double>(0.0, 2.0*-1.0);
   A(321, 324) = std::complex<double>(0.0, 2.0*-1.0);
   A(324, 321) = -std::complex<double>(0.0, 2.0*-1.0);
   A(322, 323) = std::complex<double>(0.0, 2.0*-1.0);
   A(323, 322) = -std::complex<double>(0.0, 2.0*-1.0);
   A(322, 359) = std::complex<double>(0.0, 2.0*-1.0);
   A(359, 322) = -std::complex<double>(0.0, 2.0*-1.0);
   A(322, 360) = std::complex<double>(0.0, 2.0*-1.0);
   A(360, 322) = -std::complex<double>(0.0, 2.0*-1.0);
   A(322, 397) = std::complex<double>(0.0, 2.0*-2.5);
   A(397, 322) = -std::complex<double>(0.0, 2.0*-2.5);
   A(323, 326) = std::complex<double>(0.0, 2.0*-1.0);
   A(326, 323) = -std::complex<double>(0.0, 2.0*-1.0);
   A(323, 361) = std::complex<double>(0.0, 2.0*-1.0);
   A(361, 323) = -std::complex<double>(0.0, 2.0*-1.0);
   A(324, 325) = std::complex<double>(0.0, 2.0*-1.0);
   A(325, 324) = -std::complex<double>(0.0, 2.0*-1.0);
   A(324, 326) = std::complex<double>(0.0, 2.0*-1.0);
   A(326, 324) = -std::complex<double>(0.0, 2.0*-1.0);
   A(324, 327) = std::complex<double>(0.0, 2.0*-2.5);
   A(327, 324) = -std::complex<double>(0.0, 2.0*-2.5);
   A(325, 327) = std::complex<double>(0.0, 2.0*-1.0);
   A(327, 325) = -std::complex<double>(0.0, 2.0*-1.0);
   A(325, 328) = std::complex<double>(0.0, 2.0*-1.0);
   A(328, 325) = -std::complex<double>(0.0, 2.0*-1.0);
   A(326, 327) = std::complex<double>(0.0, 2.0*-1.0);
   A(327, 326) = -std::complex<double>(0.0, 2.0*-1.0);
   A(326, 361) = std::complex<double>(0.0, 2.0*-2.5);
   A(361, 326) = -std::complex<double>(0.0, 2.0*-2.5);
   A(326, 364) = std::complex<double>(0.0, 2.0*-1.0);
   A(364, 326) = -std::complex<double>(0.0, 2.0*-1.0);
   A(327, 330) = std::complex<double>(0.0, 2.0*-1.0);
   A(330, 327) = -std::complex<double>(0.0, 2.0*-1.0);
   A(327, 365) = std::complex<double>(0.0, 2.0*-1.0);
   A(365, 327) = -std::complex<double>(0.0, 2.0*-1.0);
   A(328, 329) = std::complex<double>(0.0, 2.0*-1.0);
   A(329, 328) = -std::complex<double>(0.0, 2.0*-1.0);
   A(328, 330) = std::complex<double>(0.0, 2.0*-1.0);
   A(330, 328) = -std::complex<double>(0.0, 2.0*-1.0);
   A(328, 331) = std::complex<double>(0.0, 2.0*-2.5);
   A(331, 328) = -std::complex<double>(0.0, 2.0*-2.5);
   A(329, 331) = std::complex<double>(0.0, 2.0*-1.0);
   A(331, 329) = -std::complex<double>(0.0, 2.0*-1.0);
   A(329, 332) = std::complex<double>(0.0, 2.0*-1.0);
   A(332, 329) = -std::complex<double>(0.0, 2.0*-1.0);
   A(330, 331) = std::complex<double>(0.0, 2.0*-1.0);
   A(331, 330) = -std::complex<double>(0.0, 2.0*-1.0);
   A(330, 365) = std::complex<double>(0.0, 2.0*-2.5);
   A(365, 330) = -std::complex<double>(0.0, 2.0*-2.5);
   A(330, 368) = std::complex<double>(0.0, 2.0*-1.0);
   A(368, 330) = -std::complex<double>(0.0, 2.0*-1.0);
   A(331, 334) = std::complex<double>(0.0, 2.0*-1.0);
   A(334, 331) = -std::complex<double>(0.0, 2.0*-1.0);
   A(331, 369) = std::complex<double>(0.0, 2.0*-1.0);
   A(369, 331) = -std::complex<double>(0.0, 2.0*-1.0);
   A(332, 333) = std::complex<double>(0.0, 2.0*-1.0);
   A(333, 332) = -std::complex<double>(0.0, 2.0*-1.0);
   A(332, 334) = std::complex<double>(0.0, 2.0*-1.0);
   A(334, 332) = -std::complex<double>(0.0, 2.0*-1.0);
   A(332, 335) = std::complex<double>(0.0, 2.0*-2.5);
   A(335, 332) = -std::complex<double>(0.0, 2.0*-2.5);
   A(333, 335) = std::complex<double>(0.0, 2.0*-1.0);
   A(335, 333) = -std::complex<double>(0.0, 2.0*-1.0);
   A(333, 336) = std::complex<double>(0.0, 2.0*-1.0);
   A(336, 333) = -std::complex<double>(0.0, 2.0*-1.0);
   A(334, 335) = std::complex<double>(0.0, 2.0*-1.0);
   A(335, 334) = -std::complex<double>(0.0, 2.0*-1.0);
   A(334, 369) = std::complex<double>(0.0, 2.0*-2.5);
   A(369, 334) = -std::complex<double>(0.0, 2.0*-2.5);
   A(334, 372) = std::complex<double>(0.0, 2.0*-1.0);
   A(372, 334) = -std::complex<double>(0.0, 2.0*-1.0);
   A(335, 338) = std::complex<double>(0.0, 2.0*-1.0);
   A(338, 335) = -std::complex<double>(0.0, 2.0*-1.0);
   A(335, 373) = std::complex<double>(0.0, 2.0*-1.0);
   A(373, 335) = -std::complex<double>(0.0, 2.0*-1.0);
   A(336, 337) = std::complex<double>(0.0, 2.0*-1.0);
   A(337, 336) = -std::complex<double>(0.0, 2.0*-1.0);
   A(336, 338) = std::complex<double>(0.0, 2.0*-1.0);
   A(338, 336) = -std::complex<double>(0.0, 2.0*-1.0);
   A(336, 339) = std::complex<double>(0.0, 2.0*-2.5);
   A(339, 336) = -std::complex<double>(0.0, 2.0*-2.5);
   A(337, 339) = std::complex<double>(0.0, 2.0*-1.0);
   A(339, 337) = -std::complex<double>(0.0, 2.0*-1.0);
   A(337, 340) = std::complex<double>(0.0, 2.0*-1.0);
   A(340, 337) = -std::complex<double>(0.0, 2.0*-1.0);
   A(338, 339) = std::complex<double>(0.0, 2.0*-1.0);
   A(339, 338) = -std::complex<double>(0.0, 2.0*-1.0);
   A(338, 373) = std::complex<double>(0.0, 2.0*-2.5);
   A(373, 338) = -std::complex<double>(0.0, 2.0*-2.5);
   A(338, 376) = std::complex<double>(0.0, 2.0*-1.0);
   A(376, 338) = -std::complex<double>(0.0, 2.0*-1.0);
   A(339, 342) = std::complex<double>(0.0, 2.0*-1.0);
   A(342, 339) = -std::complex<double>(0.0, 2.0*-1.0);
   A(339, 377) = std::complex<double>(0.0, 2.0*-1.0);
   A(377, 339) = -std::complex<double>(0.0, 2.0*-1.0);
   A(340, 341) = std::complex<double>(0.0, 2.0*-1.0);
   A(341, 340) = -std::complex<double>(0.0, 2.0*-1.0);
   A(340, 342) = std::complex<double>(0.0, 2.0*-1.0);
   A(342, 340) = -std::complex<double>(0.0, 2.0*-1.0);
   A(340, 343) = std::complex<double>(0.0, 2.0*-2.5);
   A(343, 340) = -std::complex<double>(0.0, 2.0*-2.5);
   A(341, 343) = std::complex<double>(0.0, 2.0*-1.0);
   A(343, 341) = -std::complex<double>(0.0, 2.0*-1.0);
   A(341, 344) = std::complex<double>(0.0, 2.0*-1.0);
   A(344, 341) = -std::complex<double>(0.0, 2.0*-1.0);
   A(342, 343) = std::complex<double>(0.0, 2.0*-1.0);
   A(343, 342) = -std::complex<double>(0.0, 2.0*-1.0);
   A(342, 377) = std::complex<double>(0.0, 2.0*-2.5);
   A(377, 342) = -std::complex<double>(0.0, 2.0*-2.5);
   A(342, 380) = std::complex<double>(0.0, 2.0*-1.0);
   A(380, 342) = -std::complex<double>(0.0, 2.0*-1.0);
   A(343, 346) = std::complex<double>(0.0, 2.0*-1.0);
   A(346, 343) = -std::complex<double>(0.0, 2.0*-1.0);
   A(343, 381) = std::complex<double>(0.0, 2.0*-1.0);
   A(381, 343) = -std::complex<double>(0.0, 2.0*-1.0);
   A(344, 345) = std::complex<double>(0.0, 2.0*-1.0);
   A(345, 344) = -std::complex<double>(0.0, 2.0*-1.0);
   A(344, 346) = std::complex<double>(0.0, 2.0*-1.0);
   A(346, 344) = -std::complex<double>(0.0, 2.0*-1.0);
   A(344, 347) = std::complex<double>(0.0, 2.0*-2.5);
   A(347, 344) = -std::complex<double>(0.0, 2.0*-2.5);
   A(345, 347) = std::complex<double>(0.0, 2.0*-1.0);
   A(347, 345) = -std::complex<double>(0.0, 2.0*-1.0);
   A(345, 348) = std::complex<double>(0.0, 2.0*-1.0);
   A(348, 345) = -std::complex<double>(0.0, 2.0*-1.0);
   A(346, 347) = std::complex<double>(0.0, 2.0*-1.0);
   A(347, 346) = -std::complex<double>(0.0, 2.0*-1.0);
   A(346, 381) = std::complex<double>(0.0, 2.0*-2.5);
   A(381, 346) = -std::complex<double>(0.0, 2.0*-2.5);
   A(346, 384) = std::complex<double>(0.0, 2.0*-1.0);
   A(384, 346) = -std::complex<double>(0.0, 2.0*-1.0);
   A(347, 350) = std::complex<double>(0.0, 2.0*-1.0);
   A(350, 347) = -std::complex<double>(0.0, 2.0*-1.0);
   A(347, 385) = std::complex<double>(0.0, 2.0*-1.0);
   A(385, 347) = -std::complex<double>(0.0, 2.0*-1.0);
   A(348, 349) = std::complex<double>(0.0, 2.0*-1.0);
   A(349, 348) = -std::complex<double>(0.0, 2.0*-1.0);
   A(348, 350) = std::complex<double>(0.0, 2.0*-1.0);
   A(350, 348) = -std::complex<double>(0.0, 2.0*-1.0);
   A(348, 351) = std::complex<double>(0.0, 2.0*-2.5);
   A(351, 348) = -std::complex<double>(0.0, 2.0*-2.5);
   A(349, 351) = std::complex<double>(0.0, 2.0*-1.0);
   A(351, 349) = -std::complex<double>(0.0, 2.0*-1.0);
   A(349, 352) = std::complex<double>(0.0, 2.0*-1.0);
   A(352, 349) = -std::complex<double>(0.0, 2.0*-1.0);
   A(350, 351) = std::complex<double>(0.0, 2.0*-1.0);
   A(351, 350) = -std::complex<double>(0.0, 2.0*-1.0);
   A(350, 385) = std::complex<double>(0.0, 2.0*-2.5);
   A(385, 350) = -std::complex<double>(0.0, 2.0*-2.5);
   A(350, 388) = std::complex<double>(0.0, 2.0*-1.0);
   A(388, 350) = -std::complex<double>(0.0, 2.0*-1.0);
   A(351, 354) = std::complex<double>(0.0, 2.0*-1.0);
   A(354, 351) = -std::complex<double>(0.0, 2.0*-1.0);
   A(351, 389) = std::complex<double>(0.0, 2.0*-1.0);
   A(389, 351) = -std::complex<double>(0.0, 2.0*-1.0);
   A(352, 353) = std::complex<double>(0.0, 2.0*-1.0);
   A(353, 352) = -std::complex<double>(0.0, 2.0*-1.0);
   A(352, 354) = std::complex<double>(0.0, 2.0*-1.0);
   A(354, 352) = -std::complex<double>(0.0, 2.0*-1.0);
   A(352, 355) = std::complex<double>(0.0, 2.0*-2.5);
   A(355, 352) = -std::complex<double>(0.0, 2.0*-2.5);
   A(353, 355) = std::complex<double>(0.0, 2.0*-1.0);
   A(355, 353) = -std::complex<double>(0.0, 2.0*-1.0);
   A(353, 356) = std::complex<double>(0.0, 2.0*-1.0);
   A(356, 353) = -std::complex<double>(0.0, 2.0*-1.0);
   A(354, 355) = std::complex<double>(0.0, 2.0*-1.0);
   A(355, 354) = -std::complex<double>(0.0, 2.0*-1.0);
   A(354, 389) = std::complex<double>(0.0, 2.0*-2.5);
   A(389, 354) = -std::complex<double>(0.0, 2.0*-2.5);
   A(354, 392) = std::complex<double>(0.0, 2.0*-1.0);
   A(392, 354) = -std::complex<double>(0.0, 2.0*-1.0);
   A(355, 358) = std::complex<double>(0.0, 2.0*-1.0);
   A(358, 355) = -std::complex<double>(0.0, 2.0*-1.0);
   A(355, 393) = std::complex<double>(0.0, 2.0*-1.0);
   A(393, 355) = -std::complex<double>(0.0, 2.0*-1.0);
   A(356, 357) = std::complex<double>(0.0, 2.0*-1.0);
   A(357, 356) = -std::complex<double>(0.0, 2.0*-1.0);
   A(356, 358) = std::complex<double>(0.0, 2.0*-1.0);
   A(358, 356) = -std::complex<double>(0.0, 2.0*-1.0);
   A(356, 359) = std::complex<double>(0.0, 2.0*-2.5);
   A(359, 356) = -std::complex<double>(0.0, 2.0*-2.5);
   A(357, 359) = std::complex<double>(0.0, 2.0*-1.0);
   A(359, 357) = -std::complex<double>(0.0, 2.0*-1.0);
   A(358, 359) = std::complex<double>(0.0, 2.0*-1.0);
   A(359, 358) = -std::complex<double>(0.0, 2.0*-1.0);
   A(358, 393) = std::complex<double>(0.0, 2.0*-2.5);
   A(393, 358) = -std::complex<double>(0.0, 2.0*-2.5);
   A(358, 396) = std::complex<double>(0.0, 2.0*-1.0);
   A(396, 358) = -std::complex<double>(0.0, 2.0*-1.0);
   A(359, 397) = std::complex<double>(0.0, 2.0*-1.0);
   A(397, 359) = -std::complex<double>(0.0, 2.0*-1.0);
   A(360, 361) = std::complex<double>(0.0, 2.0*-1.0);
   A(361, 360) = -std::complex<double>(0.0, 2.0*-1.0);
   A(360, 362) = std::complex<double>(0.0, 2.0*-1.0);
   A(362, 360) = -std::complex<double>(0.0, 2.0*-1.0);
   A(360, 363) = std::complex<double>(0.0, 2.0*-2.5);
   A(363, 360) = -std::complex<double>(0.0, 2.0*-2.5);
   A(360, 397) = std::complex<double>(0.0, 2.0*-1.0);
   A(397, 360) = -std::complex<double>(0.0, 2.0*-1.0);
   A(361, 363) = std::complex<double>(0.0, 2.0*-1.0);
   A(363, 361) = -std::complex<double>(0.0, 2.0*-1.0);
   A(361, 364) = std::complex<double>(0.0, 2.0*-1.0);
   A(364, 361) = -std::complex<double>(0.0, 2.0*-1.0);
   A(362, 363) = std::complex<double>(0.0, 2.0*-1.0);
   A(363, 362) = -std::complex<double>(0.0, 2.0*-1.0);
   A(362, 399) = std::complex<double>(0.0, 2.0*-1.0);
   A(399, 362) = -std::complex<double>(0.0, 2.0*-1.0);
   A(363, 366) = std::complex<double>(0.0, 2.0*-1.0);
   A(366, 363) = -std::complex<double>(0.0, 2.0*-1.0);
   A(364, 365) = std::complex<double>(0.0, 2.0*-1.0);
   A(365, 364) = -std::complex<double>(0.0, 2.0*-1.0);
   A(364, 366) = std::complex<double>(0.0, 2.0*-1.0);
   A(366, 364) = -std::complex<double>(0.0, 2.0*-1.0);
   A(364, 367) = std::complex<double>(0.0, 2.0*-2.5);
   A(367, 364) = -std::complex<double>(0.0, 2.0*-2.5);
   A(365, 367) = std::complex<double>(0.0, 2.0*-1.0);
   A(367, 365) = -std::complex<double>(0.0, 2.0*-1.0);
   A(365, 368) = std::complex<double>(0.0, 2.0*-1.0);
   A(368, 365) = -std::complex<double>(0.0, 2.0*-1.0);
   A(366, 367) = std::complex<double>(0.0, 2.0*-1.0);
   A(367, 366) = -std::complex<double>(0.0, 2.0*-1.0);
   A(367, 370) = std::complex<double>(0.0, 2.0*-1.0);
   A(370, 367) = -std::complex<double>(0.0, 2.0*-1.0);
   A(368, 369) = std::complex<double>(0.0, 2.0*-1.0);
   A(369, 368) = -std::complex<double>(0.0, 2.0*-1.0);
   A(368, 370) = std::complex<double>(0.0, 2.0*-1.0);
   A(370, 368) = -std::complex<double>(0.0, 2.0*-1.0);
   A(368, 371) = std::complex<double>(0.0, 2.0*-2.5);
   A(371, 368) = -std::complex<double>(0.0, 2.0*-2.5);
   A(369, 371) = std::complex<double>(0.0, 2.0*-1.0);
   A(371, 369) = -std::complex<double>(0.0, 2.0*-1.0);
   A(369, 372) = std::complex<double>(0.0, 2.0*-1.0);
   A(372, 369) = -std::complex<double>(0.0, 2.0*-1.0);
   A(370, 371) = std::complex<double>(0.0, 2.0*-1.0);
   A(371, 370) = -std::complex<double>(0.0, 2.0*-1.0);
   A(371, 374) = std::complex<double>(0.0, 2.0*-1.0);
   A(374, 371) = -std::complex<double>(0.0, 2.0*-1.0);
   A(372, 373) = std::complex<double>(0.0, 2.0*-1.0);
   A(373, 372) = -std::complex<double>(0.0, 2.0*-1.0);
   A(372, 374) = std::complex<double>(0.0, 2.0*-1.0);
   A(374, 372) = -std::complex<double>(0.0, 2.0*-1.0);
   A(372, 375) = std::complex<double>(0.0, 2.0*-2.5);
   A(375, 372) = -std::complex<double>(0.0, 2.0*-2.5);
   A(373, 375) = std::complex<double>(0.0, 2.0*-1.0);
   A(375, 373) = -std::complex<double>(0.0, 2.0*-1.0);
   A(373, 376) = std::complex<double>(0.0, 2.0*-1.0);
   A(376, 373) = -std::complex<double>(0.0, 2.0*-1.0);
   A(374, 375) = std::complex<double>(0.0, 2.0*-1.0);
   A(375, 374) = -std::complex<double>(0.0, 2.0*-1.0);
   A(375, 378) = std::complex<double>(0.0, 2.0*-1.0);
   A(378, 375) = -std::complex<double>(0.0, 2.0*-1.0);
   A(376, 377) = std::complex<double>(0.0, 2.0*-1.0);
   A(377, 376) = -std::complex<double>(0.0, 2.0*-1.0);
   A(376, 378) = std::complex<double>(0.0, 2.0*-1.0);
   A(378, 376) = -std::complex<double>(0.0, 2.0*-1.0);
   A(376, 379) = std::complex<double>(0.0, 2.0*-2.5);
   A(379, 376) = -std::complex<double>(0.0, 2.0*-2.5);
   A(377, 379) = std::complex<double>(0.0, 2.0*-1.0);
   A(379, 377) = -std::complex<double>(0.0, 2.0*-1.0);
   A(377, 380) = std::complex<double>(0.0, 2.0*-1.0);
   A(380, 377) = -std::complex<double>(0.0, 2.0*-1.0);
   A(378, 379) = std::complex<double>(0.0, 2.0*-1.0);
   A(379, 378) = -std::complex<double>(0.0, 2.0*-1.0);
   A(379, 382) = std::complex<double>(0.0, 2.0*-1.0);
   A(382, 379) = -std::complex<double>(0.0, 2.0*-1.0);
   A(380, 381) = std::complex<double>(0.0, 2.0*-1.0);
   A(381, 380) = -std::complex<double>(0.0, 2.0*-1.0);
   A(380, 382) = std::complex<double>(0.0, 2.0*-1.0);
   A(382, 380) = -std::complex<double>(0.0, 2.0*-1.0);
   A(380, 383) = std::complex<double>(0.0, 2.0*-2.5);
   A(383, 380) = -std::complex<double>(0.0, 2.0*-2.5);
   A(381, 383) = std::complex<double>(0.0, 2.0*-1.0);
   A(383, 381) = -std::complex<double>(0.0, 2.0*-1.0);
   A(381, 384) = std::complex<double>(0.0, 2.0*-1.0);
   A(384, 381) = -std::complex<double>(0.0, 2.0*-1.0);
   A(382, 383) = std::complex<double>(0.0, 2.0*-1.0);
   A(383, 382) = -std::complex<double>(0.0, 2.0*-1.0);
   A(383, 386) = std::complex<double>(0.0, 2.0*-1.0);
   A(386, 383) = -std::complex<double>(0.0, 2.0*-1.0);
   A(384, 385) = std::complex<double>(0.0, 2.0*-1.0);
   A(385, 384) = -std::complex<double>(0.0, 2.0*-1.0);
   A(384, 386) = std::complex<double>(0.0, 2.0*-1.0);
   A(386, 384) = -std::complex<double>(0.0, 2.0*-1.0);
   A(384, 387) = std::complex<double>(0.0, 2.0*-2.5);
   A(387, 384) = -std::complex<double>(0.0, 2.0*-2.5);
   A(385, 387) = std::complex<double>(0.0, 2.0*-1.0);
   A(387, 385) = -std::complex<double>(0.0, 2.0*-1.0);
   A(385, 388) = std::complex<double>(0.0, 2.0*-1.0);
   A(388, 385) = -std::complex<double>(0.0, 2.0*-1.0);
   A(386, 387) = std::complex<double>(0.0, 2.0*-1.0);
   A(387, 386) = -std::complex<double>(0.0, 2.0*-1.0);
   A(387, 390) = std::complex<double>(0.0, 2.0*-1.0);
   A(390, 387) = -std::complex<double>(0.0, 2.0*-1.0);
   A(388, 389) = std::complex<double>(0.0, 2.0*-1.0);
   A(389, 388) = -std::complex<double>(0.0, 2.0*-1.0);
   A(388, 390) = std::complex<double>(0.0, 2.0*-1.0);
   A(390, 388) = -std::complex<double>(0.0, 2.0*-1.0);
   A(388, 391) = std::complex<double>(0.0, 2.0*-2.5);
   A(391, 388) = -std::complex<double>(0.0, 2.0*-2.5);
   A(389, 391) = std::complex<double>(0.0, 2.0*-1.0);
   A(391, 389) = -std::complex<double>(0.0, 2.0*-1.0);
   A(389, 392) = std::complex<double>(0.0, 2.0*-1.0);
   A(392, 389) = -std::complex<double>(0.0, 2.0*-1.0);
   A(390, 391) = std::complex<double>(0.0, 2.0*-1.0);
   A(391, 390) = -std::complex<double>(0.0, 2.0*-1.0);
   A(391, 394) = std::complex<double>(0.0, 2.0*-1.0);
   A(394, 391) = -std::complex<double>(0.0, 2.0*-1.0);
   A(392, 393) = std::complex<double>(0.0, 2.0*-1.0);
   A(393, 392) = -std::complex<double>(0.0, 2.0*-1.0);
   A(392, 394) = std::complex<double>(0.0, 2.0*-1.0);
   A(394, 392) = -std::complex<double>(0.0, 2.0*-1.0);
   A(392, 395) = std::complex<double>(0.0, 2.0*-2.5);
   A(395, 392) = -std::complex<double>(0.0, 2.0*-2.5);
   A(393, 395) = std::complex<double>(0.0, 2.0*-1.0);
   A(395, 393) = -std::complex<double>(0.0, 2.0*-1.0);
   A(393, 396) = std::complex<double>(0.0, 2.0*-1.0);
   A(396, 393) = -std::complex<double>(0.0, 2.0*-1.0);
   A(394, 395) = std::complex<double>(0.0, 2.0*-1.0);
   A(395, 394) = -std::complex<double>(0.0, 2.0*-1.0);
   A(395, 398) = std::complex<double>(0.0, 2.0*-1.0);
   A(398, 395) = -std::complex<double>(0.0, 2.0*-1.0);
   A(396, 397) = std::complex<double>(0.0, 2.0*-1.0);
   A(397, 396) = -std::complex<double>(0.0, 2.0*-1.0);
   A(396, 398) = std::complex<double>(0.0, 2.0*-1.0);
   A(398, 396) = -std::complex<double>(0.0, 2.0*-1.0);
   A(396, 399) = std::complex<double>(0.0, 2.0*-2.5);
   A(399, 396) = -std::complex<double>(0.0, 2.0*-2.5);
   A(397, 399) = std::complex<double>(0.0, 2.0*-1.0);
   A(399, 397) = -std::complex<double>(0.0, 2.0*-1.0);
   A(398, 399) = std::complex<double>(0.0, 2.0*-1.0);
   A(399, 398) = -std::complex<double>(0.0, 2.0*-1.0);
   return A;
}

std::vector<int> non_zeros()
{
    std::vector<int> nz;
    int coo;
    coo = 400*0 + 1;
    nz.push_back(coo);
    coo = 400*0 + 2;
    nz.push_back(coo);
    coo = 400*0 + 3;
    nz.push_back(coo);
    coo = 400*0 + 37;
    nz.push_back(coo);
    coo = 400*0 + 362;
    nz.push_back(coo);
    coo = 400*1 + 3;
    nz.push_back(coo);
    coo = 400*1 + 4;
    nz.push_back(coo);
    coo = 400*1 + 363;
    nz.push_back(coo);
    coo = 400*1 + 366;
    nz.push_back(coo);
    coo = 400*2 + 3;
    nz.push_back(coo);
    coo = 400*2 + 39;
    nz.push_back(coo);
    coo = 400*2 + 40;
    nz.push_back(coo);
    coo = 400*2 + 77;
    nz.push_back(coo);
    coo = 400*3 + 6;
    nz.push_back(coo);
    coo = 400*3 + 41;
    nz.push_back(coo);
    coo = 400*4 + 5;
    nz.push_back(coo);
    coo = 400*4 + 6;
    nz.push_back(coo);
    coo = 400*4 + 7;
    nz.push_back(coo);
    coo = 400*4 + 366;
    nz.push_back(coo);
    coo = 400*5 + 7;
    nz.push_back(coo);
    coo = 400*5 + 8;
    nz.push_back(coo);
    coo = 400*5 + 367;
    nz.push_back(coo);
    coo = 400*5 + 370;
    nz.push_back(coo);
    coo = 400*6 + 7;
    nz.push_back(coo);
    coo = 400*6 + 41;
    nz.push_back(coo);
    coo = 400*6 + 44;
    nz.push_back(coo);
    coo = 400*7 + 10;
    nz.push_back(coo);
    coo = 400*7 + 45;
    nz.push_back(coo);
    coo = 400*8 + 9;
    nz.push_back(coo);
    coo = 400*8 + 10;
    nz.push_back(coo);
    coo = 400*8 + 11;
    nz.push_back(coo);
    coo = 400*8 + 370;
    nz.push_back(coo);
    coo = 400*9 + 11;
    nz.push_back(coo);
    coo = 400*9 + 12;
    nz.push_back(coo);
    coo = 400*9 + 371;
    nz.push_back(coo);
    coo = 400*9 + 374;
    nz.push_back(coo);
    coo = 400*10 + 11;
    nz.push_back(coo);
    coo = 400*10 + 45;
    nz.push_back(coo);
    coo = 400*10 + 48;
    nz.push_back(coo);
    coo = 400*11 + 14;
    nz.push_back(coo);
    coo = 400*11 + 49;
    nz.push_back(coo);
    coo = 400*12 + 13;
    nz.push_back(coo);
    coo = 400*12 + 14;
    nz.push_back(coo);
    coo = 400*12 + 15;
    nz.push_back(coo);
    coo = 400*12 + 374;
    nz.push_back(coo);
    coo = 400*13 + 15;
    nz.push_back(coo);
    coo = 400*13 + 16;
    nz.push_back(coo);
    coo = 400*13 + 375;
    nz.push_back(coo);
    coo = 400*13 + 378;
    nz.push_back(coo);
    coo = 400*14 + 15;
    nz.push_back(coo);
    coo = 400*14 + 49;
    nz.push_back(coo);
    coo = 400*14 + 52;
    nz.push_back(coo);
    coo = 400*15 + 18;
    nz.push_back(coo);
    coo = 400*15 + 53;
    nz.push_back(coo);
    coo = 400*16 + 17;
    nz.push_back(coo);
    coo = 400*16 + 18;
    nz.push_back(coo);
    coo = 400*16 + 19;
    nz.push_back(coo);
    coo = 400*16 + 378;
    nz.push_back(coo);
    coo = 400*17 + 19;
    nz.push_back(coo);
    coo = 400*17 + 20;
    nz.push_back(coo);
    coo = 400*17 + 379;
    nz.push_back(coo);
    coo = 400*17 + 382;
    nz.push_back(coo);
    coo = 400*18 + 19;
    nz.push_back(coo);
    coo = 400*18 + 53;
    nz.push_back(coo);
    coo = 400*18 + 56;
    nz.push_back(coo);
    coo = 400*19 + 22;
    nz.push_back(coo);
    coo = 400*19 + 57;
    nz.push_back(coo);
    coo = 400*20 + 21;
    nz.push_back(coo);
    coo = 400*20 + 22;
    nz.push_back(coo);
    coo = 400*20 + 23;
    nz.push_back(coo);
    coo = 400*20 + 382;
    nz.push_back(coo);
    coo = 400*21 + 23;
    nz.push_back(coo);
    coo = 400*21 + 24;
    nz.push_back(coo);
    coo = 400*21 + 383;
    nz.push_back(coo);
    coo = 400*21 + 386;
    nz.push_back(coo);
    coo = 400*22 + 23;
    nz.push_back(coo);
    coo = 400*22 + 57;
    nz.push_back(coo);
    coo = 400*22 + 60;
    nz.push_back(coo);
    coo = 400*23 + 26;
    nz.push_back(coo);
    coo = 400*23 + 61;
    nz.push_back(coo);
    coo = 400*24 + 25;
    nz.push_back(coo);
    coo = 400*24 + 26;
    nz.push_back(coo);
    coo = 400*24 + 27;
    nz.push_back(coo);
    coo = 400*24 + 386;
    nz.push_back(coo);
    coo = 400*25 + 27;
    nz.push_back(coo);
    coo = 400*25 + 28;
    nz.push_back(coo);
    coo = 400*25 + 387;
    nz.push_back(coo);
    coo = 400*25 + 390;
    nz.push_back(coo);
    coo = 400*26 + 27;
    nz.push_back(coo);
    coo = 400*26 + 61;
    nz.push_back(coo);
    coo = 400*26 + 64;
    nz.push_back(coo);
    coo = 400*27 + 30;
    nz.push_back(coo);
    coo = 400*27 + 65;
    nz.push_back(coo);
    coo = 400*28 + 29;
    nz.push_back(coo);
    coo = 400*28 + 30;
    nz.push_back(coo);
    coo = 400*28 + 31;
    nz.push_back(coo);
    coo = 400*28 + 390;
    nz.push_back(coo);
    coo = 400*29 + 31;
    nz.push_back(coo);
    coo = 400*29 + 32;
    nz.push_back(coo);
    coo = 400*29 + 391;
    nz.push_back(coo);
    coo = 400*29 + 394;
    nz.push_back(coo);
    coo = 400*30 + 31;
    nz.push_back(coo);
    coo = 400*30 + 65;
    nz.push_back(coo);
    coo = 400*30 + 68;
    nz.push_back(coo);
    coo = 400*31 + 34;
    nz.push_back(coo);
    coo = 400*31 + 69;
    nz.push_back(coo);
    coo = 400*32 + 33;
    nz.push_back(coo);
    coo = 400*32 + 34;
    nz.push_back(coo);
    coo = 400*32 + 35;
    nz.push_back(coo);
    coo = 400*32 + 394;
    nz.push_back(coo);
    coo = 400*33 + 35;
    nz.push_back(coo);
    coo = 400*33 + 36;
    nz.push_back(coo);
    coo = 400*33 + 395;
    nz.push_back(coo);
    coo = 400*33 + 398;
    nz.push_back(coo);
    coo = 400*34 + 35;
    nz.push_back(coo);
    coo = 400*34 + 69;
    nz.push_back(coo);
    coo = 400*34 + 72;
    nz.push_back(coo);
    coo = 400*35 + 38;
    nz.push_back(coo);
    coo = 400*35 + 73;
    nz.push_back(coo);
    coo = 400*36 + 37;
    nz.push_back(coo);
    coo = 400*36 + 38;
    nz.push_back(coo);
    coo = 400*36 + 39;
    nz.push_back(coo);
    coo = 400*36 + 398;
    nz.push_back(coo);
    coo = 400*37 + 39;
    nz.push_back(coo);
    coo = 400*37 + 362;
    nz.push_back(coo);
    coo = 400*37 + 399;
    nz.push_back(coo);
    coo = 400*38 + 39;
    nz.push_back(coo);
    coo = 400*38 + 73;
    nz.push_back(coo);
    coo = 400*38 + 76;
    nz.push_back(coo);
    coo = 400*39 + 77;
    nz.push_back(coo);
    coo = 400*40 + 41;
    nz.push_back(coo);
    coo = 400*40 + 42;
    nz.push_back(coo);
    coo = 400*40 + 43;
    nz.push_back(coo);
    coo = 400*40 + 77;
    nz.push_back(coo);
    coo = 400*41 + 43;
    nz.push_back(coo);
    coo = 400*41 + 44;
    nz.push_back(coo);
    coo = 400*42 + 43;
    nz.push_back(coo);
    coo = 400*42 + 79;
    nz.push_back(coo);
    coo = 400*42 + 80;
    nz.push_back(coo);
    coo = 400*42 + 117;
    nz.push_back(coo);
    coo = 400*43 + 46;
    nz.push_back(coo);
    coo = 400*43 + 81;
    nz.push_back(coo);
    coo = 400*44 + 45;
    nz.push_back(coo);
    coo = 400*44 + 46;
    nz.push_back(coo);
    coo = 400*44 + 47;
    nz.push_back(coo);
    coo = 400*45 + 47;
    nz.push_back(coo);
    coo = 400*45 + 48;
    nz.push_back(coo);
    coo = 400*46 + 47;
    nz.push_back(coo);
    coo = 400*46 + 81;
    nz.push_back(coo);
    coo = 400*46 + 84;
    nz.push_back(coo);
    coo = 400*47 + 50;
    nz.push_back(coo);
    coo = 400*47 + 85;
    nz.push_back(coo);
    coo = 400*48 + 49;
    nz.push_back(coo);
    coo = 400*48 + 50;
    nz.push_back(coo);
    coo = 400*48 + 51;
    nz.push_back(coo);
    coo = 400*49 + 51;
    nz.push_back(coo);
    coo = 400*49 + 52;
    nz.push_back(coo);
    coo = 400*50 + 51;
    nz.push_back(coo);
    coo = 400*50 + 85;
    nz.push_back(coo);
    coo = 400*50 + 88;
    nz.push_back(coo);
    coo = 400*51 + 54;
    nz.push_back(coo);
    coo = 400*51 + 89;
    nz.push_back(coo);
    coo = 400*52 + 53;
    nz.push_back(coo);
    coo = 400*52 + 54;
    nz.push_back(coo);
    coo = 400*52 + 55;
    nz.push_back(coo);
    coo = 400*53 + 55;
    nz.push_back(coo);
    coo = 400*53 + 56;
    nz.push_back(coo);
    coo = 400*54 + 55;
    nz.push_back(coo);
    coo = 400*54 + 89;
    nz.push_back(coo);
    coo = 400*54 + 92;
    nz.push_back(coo);
    coo = 400*55 + 58;
    nz.push_back(coo);
    coo = 400*55 + 93;
    nz.push_back(coo);
    coo = 400*56 + 57;
    nz.push_back(coo);
    coo = 400*56 + 58;
    nz.push_back(coo);
    coo = 400*56 + 59;
    nz.push_back(coo);
    coo = 400*57 + 59;
    nz.push_back(coo);
    coo = 400*57 + 60;
    nz.push_back(coo);
    coo = 400*58 + 59;
    nz.push_back(coo);
    coo = 400*58 + 93;
    nz.push_back(coo);
    coo = 400*58 + 96;
    nz.push_back(coo);
    coo = 400*59 + 62;
    nz.push_back(coo);
    coo = 400*59 + 97;
    nz.push_back(coo);
    coo = 400*60 + 61;
    nz.push_back(coo);
    coo = 400*60 + 62;
    nz.push_back(coo);
    coo = 400*60 + 63;
    nz.push_back(coo);
    coo = 400*61 + 63;
    nz.push_back(coo);
    coo = 400*61 + 64;
    nz.push_back(coo);
    coo = 400*62 + 63;
    nz.push_back(coo);
    coo = 400*62 + 97;
    nz.push_back(coo);
    coo = 400*62 + 100;
    nz.push_back(coo);
    coo = 400*63 + 66;
    nz.push_back(coo);
    coo = 400*63 + 101;
    nz.push_back(coo);
    coo = 400*64 + 65;
    nz.push_back(coo);
    coo = 400*64 + 66;
    nz.push_back(coo);
    coo = 400*64 + 67;
    nz.push_back(coo);
    coo = 400*65 + 67;
    nz.push_back(coo);
    coo = 400*65 + 68;
    nz.push_back(coo);
    coo = 400*66 + 67;
    nz.push_back(coo);
    coo = 400*66 + 101;
    nz.push_back(coo);
    coo = 400*66 + 104;
    nz.push_back(coo);
    coo = 400*67 + 70;
    nz.push_back(coo);
    coo = 400*67 + 105;
    nz.push_back(coo);
    coo = 400*68 + 69;
    nz.push_back(coo);
    coo = 400*68 + 70;
    nz.push_back(coo);
    coo = 400*68 + 71;
    nz.push_back(coo);
    coo = 400*69 + 71;
    nz.push_back(coo);
    coo = 400*69 + 72;
    nz.push_back(coo);
    coo = 400*70 + 71;
    nz.push_back(coo);
    coo = 400*70 + 105;
    nz.push_back(coo);
    coo = 400*70 + 108;
    nz.push_back(coo);
    coo = 400*71 + 74;
    nz.push_back(coo);
    coo = 400*71 + 109;
    nz.push_back(coo);
    coo = 400*72 + 73;
    nz.push_back(coo);
    coo = 400*72 + 74;
    nz.push_back(coo);
    coo = 400*72 + 75;
    nz.push_back(coo);
    coo = 400*73 + 75;
    nz.push_back(coo);
    coo = 400*73 + 76;
    nz.push_back(coo);
    coo = 400*74 + 75;
    nz.push_back(coo);
    coo = 400*74 + 109;
    nz.push_back(coo);
    coo = 400*74 + 112;
    nz.push_back(coo);
    coo = 400*75 + 78;
    nz.push_back(coo);
    coo = 400*75 + 113;
    nz.push_back(coo);
    coo = 400*76 + 77;
    nz.push_back(coo);
    coo = 400*76 + 78;
    nz.push_back(coo);
    coo = 400*76 + 79;
    nz.push_back(coo);
    coo = 400*77 + 79;
    nz.push_back(coo);
    coo = 400*78 + 79;
    nz.push_back(coo);
    coo = 400*78 + 113;
    nz.push_back(coo);
    coo = 400*78 + 116;
    nz.push_back(coo);
    coo = 400*79 + 117;
    nz.push_back(coo);
    coo = 400*80 + 81;
    nz.push_back(coo);
    coo = 400*80 + 82;
    nz.push_back(coo);
    coo = 400*80 + 83;
    nz.push_back(coo);
    coo = 400*80 + 117;
    nz.push_back(coo);
    coo = 400*81 + 83;
    nz.push_back(coo);
    coo = 400*81 + 84;
    nz.push_back(coo);
    coo = 400*82 + 83;
    nz.push_back(coo);
    coo = 400*82 + 119;
    nz.push_back(coo);
    coo = 400*82 + 120;
    nz.push_back(coo);
    coo = 400*82 + 157;
    nz.push_back(coo);
    coo = 400*83 + 86;
    nz.push_back(coo);
    coo = 400*83 + 121;
    nz.push_back(coo);
    coo = 400*84 + 85;
    nz.push_back(coo);
    coo = 400*84 + 86;
    nz.push_back(coo);
    coo = 400*84 + 87;
    nz.push_back(coo);
    coo = 400*85 + 87;
    nz.push_back(coo);
    coo = 400*85 + 88;
    nz.push_back(coo);
    coo = 400*86 + 87;
    nz.push_back(coo);
    coo = 400*86 + 121;
    nz.push_back(coo);
    coo = 400*86 + 124;
    nz.push_back(coo);
    coo = 400*87 + 90;
    nz.push_back(coo);
    coo = 400*87 + 125;
    nz.push_back(coo);
    coo = 400*88 + 89;
    nz.push_back(coo);
    coo = 400*88 + 90;
    nz.push_back(coo);
    coo = 400*88 + 91;
    nz.push_back(coo);
    coo = 400*89 + 91;
    nz.push_back(coo);
    coo = 400*89 + 92;
    nz.push_back(coo);
    coo = 400*90 + 91;
    nz.push_back(coo);
    coo = 400*90 + 125;
    nz.push_back(coo);
    coo = 400*90 + 128;
    nz.push_back(coo);
    coo = 400*91 + 94;
    nz.push_back(coo);
    coo = 400*91 + 129;
    nz.push_back(coo);
    coo = 400*92 + 93;
    nz.push_back(coo);
    coo = 400*92 + 94;
    nz.push_back(coo);
    coo = 400*92 + 95;
    nz.push_back(coo);
    coo = 400*93 + 95;
    nz.push_back(coo);
    coo = 400*93 + 96;
    nz.push_back(coo);
    coo = 400*94 + 95;
    nz.push_back(coo);
    coo = 400*94 + 129;
    nz.push_back(coo);
    coo = 400*94 + 132;
    nz.push_back(coo);
    coo = 400*95 + 98;
    nz.push_back(coo);
    coo = 400*95 + 133;
    nz.push_back(coo);
    coo = 400*96 + 97;
    nz.push_back(coo);
    coo = 400*96 + 98;
    nz.push_back(coo);
    coo = 400*96 + 99;
    nz.push_back(coo);
    coo = 400*97 + 99;
    nz.push_back(coo);
    coo = 400*97 + 100;
    nz.push_back(coo);
    coo = 400*98 + 99;
    nz.push_back(coo);
    coo = 400*98 + 133;
    nz.push_back(coo);
    coo = 400*98 + 136;
    nz.push_back(coo);
    coo = 400*99 + 102;
    nz.push_back(coo);
    coo = 400*99 + 137;
    nz.push_back(coo);
    coo = 400*100 + 101;
    nz.push_back(coo);
    coo = 400*100 + 102;
    nz.push_back(coo);
    coo = 400*100 + 103;
    nz.push_back(coo);
    coo = 400*101 + 103;
    nz.push_back(coo);
    coo = 400*101 + 104;
    nz.push_back(coo);
    coo = 400*102 + 103;
    nz.push_back(coo);
    coo = 400*102 + 137;
    nz.push_back(coo);
    coo = 400*102 + 140;
    nz.push_back(coo);
    coo = 400*103 + 106;
    nz.push_back(coo);
    coo = 400*103 + 141;
    nz.push_back(coo);
    coo = 400*104 + 105;
    nz.push_back(coo);
    coo = 400*104 + 106;
    nz.push_back(coo);
    coo = 400*104 + 107;
    nz.push_back(coo);
    coo = 400*105 + 107;
    nz.push_back(coo);
    coo = 400*105 + 108;
    nz.push_back(coo);
    coo = 400*106 + 107;
    nz.push_back(coo);
    coo = 400*106 + 141;
    nz.push_back(coo);
    coo = 400*106 + 144;
    nz.push_back(coo);
    coo = 400*107 + 110;
    nz.push_back(coo);
    coo = 400*107 + 145;
    nz.push_back(coo);
    coo = 400*108 + 109;
    nz.push_back(coo);
    coo = 400*108 + 110;
    nz.push_back(coo);
    coo = 400*108 + 111;
    nz.push_back(coo);
    coo = 400*109 + 111;
    nz.push_back(coo);
    coo = 400*109 + 112;
    nz.push_back(coo);
    coo = 400*110 + 111;
    nz.push_back(coo);
    coo = 400*110 + 145;
    nz.push_back(coo);
    coo = 400*110 + 148;
    nz.push_back(coo);
    coo = 400*111 + 114;
    nz.push_back(coo);
    coo = 400*111 + 149;
    nz.push_back(coo);
    coo = 400*112 + 113;
    nz.push_back(coo);
    coo = 400*112 + 114;
    nz.push_back(coo);
    coo = 400*112 + 115;
    nz.push_back(coo);
    coo = 400*113 + 115;
    nz.push_back(coo);
    coo = 400*113 + 116;
    nz.push_back(coo);
    coo = 400*114 + 115;
    nz.push_back(coo);
    coo = 400*114 + 149;
    nz.push_back(coo);
    coo = 400*114 + 152;
    nz.push_back(coo);
    coo = 400*115 + 118;
    nz.push_back(coo);
    coo = 400*115 + 153;
    nz.push_back(coo);
    coo = 400*116 + 117;
    nz.push_back(coo);
    coo = 400*116 + 118;
    nz.push_back(coo);
    coo = 400*116 + 119;
    nz.push_back(coo);
    coo = 400*117 + 119;
    nz.push_back(coo);
    coo = 400*118 + 119;
    nz.push_back(coo);
    coo = 400*118 + 153;
    nz.push_back(coo);
    coo = 400*118 + 156;
    nz.push_back(coo);
    coo = 400*119 + 157;
    nz.push_back(coo);
    coo = 400*120 + 121;
    nz.push_back(coo);
    coo = 400*120 + 122;
    nz.push_back(coo);
    coo = 400*120 + 123;
    nz.push_back(coo);
    coo = 400*120 + 157;
    nz.push_back(coo);
    coo = 400*121 + 123;
    nz.push_back(coo);
    coo = 400*121 + 124;
    nz.push_back(coo);
    coo = 400*122 + 123;
    nz.push_back(coo);
    coo = 400*122 + 159;
    nz.push_back(coo);
    coo = 400*122 + 160;
    nz.push_back(coo);
    coo = 400*122 + 197;
    nz.push_back(coo);
    coo = 400*123 + 126;
    nz.push_back(coo);
    coo = 400*123 + 161;
    nz.push_back(coo);
    coo = 400*124 + 125;
    nz.push_back(coo);
    coo = 400*124 + 126;
    nz.push_back(coo);
    coo = 400*124 + 127;
    nz.push_back(coo);
    coo = 400*125 + 127;
    nz.push_back(coo);
    coo = 400*125 + 128;
    nz.push_back(coo);
    coo = 400*126 + 127;
    nz.push_back(coo);
    coo = 400*126 + 161;
    nz.push_back(coo);
    coo = 400*126 + 164;
    nz.push_back(coo);
    coo = 400*127 + 130;
    nz.push_back(coo);
    coo = 400*127 + 165;
    nz.push_back(coo);
    coo = 400*128 + 129;
    nz.push_back(coo);
    coo = 400*128 + 130;
    nz.push_back(coo);
    coo = 400*128 + 131;
    nz.push_back(coo);
    coo = 400*129 + 131;
    nz.push_back(coo);
    coo = 400*129 + 132;
    nz.push_back(coo);
    coo = 400*130 + 131;
    nz.push_back(coo);
    coo = 400*130 + 165;
    nz.push_back(coo);
    coo = 400*130 + 168;
    nz.push_back(coo);
    coo = 400*131 + 134;
    nz.push_back(coo);
    coo = 400*131 + 169;
    nz.push_back(coo);
    coo = 400*132 + 133;
    nz.push_back(coo);
    coo = 400*132 + 134;
    nz.push_back(coo);
    coo = 400*132 + 135;
    nz.push_back(coo);
    coo = 400*133 + 135;
    nz.push_back(coo);
    coo = 400*133 + 136;
    nz.push_back(coo);
    coo = 400*134 + 135;
    nz.push_back(coo);
    coo = 400*134 + 169;
    nz.push_back(coo);
    coo = 400*134 + 172;
    nz.push_back(coo);
    coo = 400*135 + 138;
    nz.push_back(coo);
    coo = 400*135 + 173;
    nz.push_back(coo);
    coo = 400*136 + 137;
    nz.push_back(coo);
    coo = 400*136 + 138;
    nz.push_back(coo);
    coo = 400*136 + 139;
    nz.push_back(coo);
    coo = 400*137 + 139;
    nz.push_back(coo);
    coo = 400*137 + 140;
    nz.push_back(coo);
    coo = 400*138 + 139;
    nz.push_back(coo);
    coo = 400*138 + 173;
    nz.push_back(coo);
    coo = 400*138 + 176;
    nz.push_back(coo);
    coo = 400*139 + 142;
    nz.push_back(coo);
    coo = 400*139 + 177;
    nz.push_back(coo);
    coo = 400*140 + 141;
    nz.push_back(coo);
    coo = 400*140 + 142;
    nz.push_back(coo);
    coo = 400*140 + 143;
    nz.push_back(coo);
    coo = 400*141 + 143;
    nz.push_back(coo);
    coo = 400*141 + 144;
    nz.push_back(coo);
    coo = 400*142 + 143;
    nz.push_back(coo);
    coo = 400*142 + 177;
    nz.push_back(coo);
    coo = 400*142 + 180;
    nz.push_back(coo);
    coo = 400*143 + 146;
    nz.push_back(coo);
    coo = 400*143 + 181;
    nz.push_back(coo);
    coo = 400*144 + 145;
    nz.push_back(coo);
    coo = 400*144 + 146;
    nz.push_back(coo);
    coo = 400*144 + 147;
    nz.push_back(coo);
    coo = 400*145 + 147;
    nz.push_back(coo);
    coo = 400*145 + 148;
    nz.push_back(coo);
    coo = 400*146 + 147;
    nz.push_back(coo);
    coo = 400*146 + 181;
    nz.push_back(coo);
    coo = 400*146 + 184;
    nz.push_back(coo);
    coo = 400*147 + 150;
    nz.push_back(coo);
    coo = 400*147 + 185;
    nz.push_back(coo);
    coo = 400*148 + 149;
    nz.push_back(coo);
    coo = 400*148 + 150;
    nz.push_back(coo);
    coo = 400*148 + 151;
    nz.push_back(coo);
    coo = 400*149 + 151;
    nz.push_back(coo);
    coo = 400*149 + 152;
    nz.push_back(coo);
    coo = 400*150 + 151;
    nz.push_back(coo);
    coo = 400*150 + 185;
    nz.push_back(coo);
    coo = 400*150 + 188;
    nz.push_back(coo);
    coo = 400*151 + 154;
    nz.push_back(coo);
    coo = 400*151 + 189;
    nz.push_back(coo);
    coo = 400*152 + 153;
    nz.push_back(coo);
    coo = 400*152 + 154;
    nz.push_back(coo);
    coo = 400*152 + 155;
    nz.push_back(coo);
    coo = 400*153 + 155;
    nz.push_back(coo);
    coo = 400*153 + 156;
    nz.push_back(coo);
    coo = 400*154 + 155;
    nz.push_back(coo);
    coo = 400*154 + 189;
    nz.push_back(coo);
    coo = 400*154 + 192;
    nz.push_back(coo);
    coo = 400*155 + 158;
    nz.push_back(coo);
    coo = 400*155 + 193;
    nz.push_back(coo);
    coo = 400*156 + 157;
    nz.push_back(coo);
    coo = 400*156 + 158;
    nz.push_back(coo);
    coo = 400*156 + 159;
    nz.push_back(coo);
    coo = 400*157 + 159;
    nz.push_back(coo);
    coo = 400*158 + 159;
    nz.push_back(coo);
    coo = 400*158 + 193;
    nz.push_back(coo);
    coo = 400*158 + 196;
    nz.push_back(coo);
    coo = 400*159 + 197;
    nz.push_back(coo);
    coo = 400*160 + 161;
    nz.push_back(coo);
    coo = 400*160 + 162;
    nz.push_back(coo);
    coo = 400*160 + 163;
    nz.push_back(coo);
    coo = 400*160 + 197;
    nz.push_back(coo);
    coo = 400*161 + 163;
    nz.push_back(coo);
    coo = 400*161 + 164;
    nz.push_back(coo);
    coo = 400*162 + 163;
    nz.push_back(coo);
    coo = 400*162 + 199;
    nz.push_back(coo);
    coo = 400*162 + 200;
    nz.push_back(coo);
    coo = 400*162 + 237;
    nz.push_back(coo);
    coo = 400*163 + 166;
    nz.push_back(coo);
    coo = 400*163 + 201;
    nz.push_back(coo);
    coo = 400*164 + 165;
    nz.push_back(coo);
    coo = 400*164 + 166;
    nz.push_back(coo);
    coo = 400*164 + 167;
    nz.push_back(coo);
    coo = 400*165 + 167;
    nz.push_back(coo);
    coo = 400*165 + 168;
    nz.push_back(coo);
    coo = 400*166 + 167;
    nz.push_back(coo);
    coo = 400*166 + 201;
    nz.push_back(coo);
    coo = 400*166 + 204;
    nz.push_back(coo);
    coo = 400*167 + 170;
    nz.push_back(coo);
    coo = 400*167 + 205;
    nz.push_back(coo);
    coo = 400*168 + 169;
    nz.push_back(coo);
    coo = 400*168 + 170;
    nz.push_back(coo);
    coo = 400*168 + 171;
    nz.push_back(coo);
    coo = 400*169 + 171;
    nz.push_back(coo);
    coo = 400*169 + 172;
    nz.push_back(coo);
    coo = 400*170 + 171;
    nz.push_back(coo);
    coo = 400*170 + 205;
    nz.push_back(coo);
    coo = 400*170 + 208;
    nz.push_back(coo);
    coo = 400*171 + 174;
    nz.push_back(coo);
    coo = 400*171 + 209;
    nz.push_back(coo);
    coo = 400*172 + 173;
    nz.push_back(coo);
    coo = 400*172 + 174;
    nz.push_back(coo);
    coo = 400*172 + 175;
    nz.push_back(coo);
    coo = 400*173 + 175;
    nz.push_back(coo);
    coo = 400*173 + 176;
    nz.push_back(coo);
    coo = 400*174 + 175;
    nz.push_back(coo);
    coo = 400*174 + 209;
    nz.push_back(coo);
    coo = 400*174 + 212;
    nz.push_back(coo);
    coo = 400*175 + 178;
    nz.push_back(coo);
    coo = 400*175 + 213;
    nz.push_back(coo);
    coo = 400*176 + 177;
    nz.push_back(coo);
    coo = 400*176 + 178;
    nz.push_back(coo);
    coo = 400*176 + 179;
    nz.push_back(coo);
    coo = 400*177 + 179;
    nz.push_back(coo);
    coo = 400*177 + 180;
    nz.push_back(coo);
    coo = 400*178 + 179;
    nz.push_back(coo);
    coo = 400*178 + 213;
    nz.push_back(coo);
    coo = 400*178 + 216;
    nz.push_back(coo);
    coo = 400*179 + 182;
    nz.push_back(coo);
    coo = 400*179 + 217;
    nz.push_back(coo);
    coo = 400*180 + 181;
    nz.push_back(coo);
    coo = 400*180 + 182;
    nz.push_back(coo);
    coo = 400*180 + 183;
    nz.push_back(coo);
    coo = 400*181 + 183;
    nz.push_back(coo);
    coo = 400*181 + 184;
    nz.push_back(coo);
    coo = 400*182 + 183;
    nz.push_back(coo);
    coo = 400*182 + 217;
    nz.push_back(coo);
    coo = 400*182 + 220;
    nz.push_back(coo);
    coo = 400*183 + 186;
    nz.push_back(coo);
    coo = 400*183 + 221;
    nz.push_back(coo);
    coo = 400*184 + 185;
    nz.push_back(coo);
    coo = 400*184 + 186;
    nz.push_back(coo);
    coo = 400*184 + 187;
    nz.push_back(coo);
    coo = 400*185 + 187;
    nz.push_back(coo);
    coo = 400*185 + 188;
    nz.push_back(coo);
    coo = 400*186 + 187;
    nz.push_back(coo);
    coo = 400*186 + 221;
    nz.push_back(coo);
    coo = 400*186 + 224;
    nz.push_back(coo);
    coo = 400*187 + 190;
    nz.push_back(coo);
    coo = 400*187 + 225;
    nz.push_back(coo);
    coo = 400*188 + 189;
    nz.push_back(coo);
    coo = 400*188 + 190;
    nz.push_back(coo);
    coo = 400*188 + 191;
    nz.push_back(coo);
    coo = 400*189 + 191;
    nz.push_back(coo);
    coo = 400*189 + 192;
    nz.push_back(coo);
    coo = 400*190 + 191;
    nz.push_back(coo);
    coo = 400*190 + 225;
    nz.push_back(coo);
    coo = 400*190 + 228;
    nz.push_back(coo);
    coo = 400*191 + 194;
    nz.push_back(coo);
    coo = 400*191 + 229;
    nz.push_back(coo);
    coo = 400*192 + 193;
    nz.push_back(coo);
    coo = 400*192 + 194;
    nz.push_back(coo);
    coo = 400*192 + 195;
    nz.push_back(coo);
    coo = 400*193 + 195;
    nz.push_back(coo);
    coo = 400*193 + 196;
    nz.push_back(coo);
    coo = 400*194 + 195;
    nz.push_back(coo);
    coo = 400*194 + 229;
    nz.push_back(coo);
    coo = 400*194 + 232;
    nz.push_back(coo);
    coo = 400*195 + 198;
    nz.push_back(coo);
    coo = 400*195 + 233;
    nz.push_back(coo);
    coo = 400*196 + 197;
    nz.push_back(coo);
    coo = 400*196 + 198;
    nz.push_back(coo);
    coo = 400*196 + 199;
    nz.push_back(coo);
    coo = 400*197 + 199;
    nz.push_back(coo);
    coo = 400*198 + 199;
    nz.push_back(coo);
    coo = 400*198 + 233;
    nz.push_back(coo);
    coo = 400*198 + 236;
    nz.push_back(coo);
    coo = 400*199 + 237;
    nz.push_back(coo);
    coo = 400*200 + 201;
    nz.push_back(coo);
    coo = 400*200 + 202;
    nz.push_back(coo);
    coo = 400*200 + 203;
    nz.push_back(coo);
    coo = 400*200 + 237;
    nz.push_back(coo);
    coo = 400*201 + 203;
    nz.push_back(coo);
    coo = 400*201 + 204;
    nz.push_back(coo);
    coo = 400*202 + 203;
    nz.push_back(coo);
    coo = 400*202 + 239;
    nz.push_back(coo);
    coo = 400*202 + 240;
    nz.push_back(coo);
    coo = 400*202 + 277;
    nz.push_back(coo);
    coo = 400*203 + 206;
    nz.push_back(coo);
    coo = 400*203 + 241;
    nz.push_back(coo);
    coo = 400*204 + 205;
    nz.push_back(coo);
    coo = 400*204 + 206;
    nz.push_back(coo);
    coo = 400*204 + 207;
    nz.push_back(coo);
    coo = 400*205 + 207;
    nz.push_back(coo);
    coo = 400*205 + 208;
    nz.push_back(coo);
    coo = 400*206 + 207;
    nz.push_back(coo);
    coo = 400*206 + 241;
    nz.push_back(coo);
    coo = 400*206 + 244;
    nz.push_back(coo);
    coo = 400*207 + 210;
    nz.push_back(coo);
    coo = 400*207 + 245;
    nz.push_back(coo);
    coo = 400*208 + 209;
    nz.push_back(coo);
    coo = 400*208 + 210;
    nz.push_back(coo);
    coo = 400*208 + 211;
    nz.push_back(coo);
    coo = 400*209 + 211;
    nz.push_back(coo);
    coo = 400*209 + 212;
    nz.push_back(coo);
    coo = 400*210 + 211;
    nz.push_back(coo);
    coo = 400*210 + 245;
    nz.push_back(coo);
    coo = 400*210 + 248;
    nz.push_back(coo);
    coo = 400*211 + 214;
    nz.push_back(coo);
    coo = 400*211 + 249;
    nz.push_back(coo);
    coo = 400*212 + 213;
    nz.push_back(coo);
    coo = 400*212 + 214;
    nz.push_back(coo);
    coo = 400*212 + 215;
    nz.push_back(coo);
    coo = 400*213 + 215;
    nz.push_back(coo);
    coo = 400*213 + 216;
    nz.push_back(coo);
    coo = 400*214 + 215;
    nz.push_back(coo);
    coo = 400*214 + 249;
    nz.push_back(coo);
    coo = 400*214 + 252;
    nz.push_back(coo);
    coo = 400*215 + 218;
    nz.push_back(coo);
    coo = 400*215 + 253;
    nz.push_back(coo);
    coo = 400*216 + 217;
    nz.push_back(coo);
    coo = 400*216 + 218;
    nz.push_back(coo);
    coo = 400*216 + 219;
    nz.push_back(coo);
    coo = 400*217 + 219;
    nz.push_back(coo);
    coo = 400*217 + 220;
    nz.push_back(coo);
    coo = 400*218 + 219;
    nz.push_back(coo);
    coo = 400*218 + 253;
    nz.push_back(coo);
    coo = 400*218 + 256;
    nz.push_back(coo);
    coo = 400*219 + 222;
    nz.push_back(coo);
    coo = 400*219 + 257;
    nz.push_back(coo);
    coo = 400*220 + 221;
    nz.push_back(coo);
    coo = 400*220 + 222;
    nz.push_back(coo);
    coo = 400*220 + 223;
    nz.push_back(coo);
    coo = 400*221 + 223;
    nz.push_back(coo);
    coo = 400*221 + 224;
    nz.push_back(coo);
    coo = 400*222 + 223;
    nz.push_back(coo);
    coo = 400*222 + 257;
    nz.push_back(coo);
    coo = 400*222 + 260;
    nz.push_back(coo);
    coo = 400*223 + 226;
    nz.push_back(coo);
    coo = 400*223 + 261;
    nz.push_back(coo);
    coo = 400*224 + 225;
    nz.push_back(coo);
    coo = 400*224 + 226;
    nz.push_back(coo);
    coo = 400*224 + 227;
    nz.push_back(coo);
    coo = 400*225 + 227;
    nz.push_back(coo);
    coo = 400*225 + 228;
    nz.push_back(coo);
    coo = 400*226 + 227;
    nz.push_back(coo);
    coo = 400*226 + 261;
    nz.push_back(coo);
    coo = 400*226 + 264;
    nz.push_back(coo);
    coo = 400*227 + 230;
    nz.push_back(coo);
    coo = 400*227 + 265;
    nz.push_back(coo);
    coo = 400*228 + 229;
    nz.push_back(coo);
    coo = 400*228 + 230;
    nz.push_back(coo);
    coo = 400*228 + 231;
    nz.push_back(coo);
    coo = 400*229 + 231;
    nz.push_back(coo);
    coo = 400*229 + 232;
    nz.push_back(coo);
    coo = 400*230 + 231;
    nz.push_back(coo);
    coo = 400*230 + 265;
    nz.push_back(coo);
    coo = 400*230 + 268;
    nz.push_back(coo);
    coo = 400*231 + 234;
    nz.push_back(coo);
    coo = 400*231 + 269;
    nz.push_back(coo);
    coo = 400*232 + 233;
    nz.push_back(coo);
    coo = 400*232 + 234;
    nz.push_back(coo);
    coo = 400*232 + 235;
    nz.push_back(coo);
    coo = 400*233 + 235;
    nz.push_back(coo);
    coo = 400*233 + 236;
    nz.push_back(coo);
    coo = 400*234 + 235;
    nz.push_back(coo);
    coo = 400*234 + 269;
    nz.push_back(coo);
    coo = 400*234 + 272;
    nz.push_back(coo);
    coo = 400*235 + 238;
    nz.push_back(coo);
    coo = 400*235 + 273;
    nz.push_back(coo);
    coo = 400*236 + 237;
    nz.push_back(coo);
    coo = 400*236 + 238;
    nz.push_back(coo);
    coo = 400*236 + 239;
    nz.push_back(coo);
    coo = 400*237 + 239;
    nz.push_back(coo);
    coo = 400*238 + 239;
    nz.push_back(coo);
    coo = 400*238 + 273;
    nz.push_back(coo);
    coo = 400*238 + 276;
    nz.push_back(coo);
    coo = 400*239 + 277;
    nz.push_back(coo);
    coo = 400*240 + 241;
    nz.push_back(coo);
    coo = 400*240 + 242;
    nz.push_back(coo);
    coo = 400*240 + 243;
    nz.push_back(coo);
    coo = 400*240 + 277;
    nz.push_back(coo);
    coo = 400*241 + 243;
    nz.push_back(coo);
    coo = 400*241 + 244;
    nz.push_back(coo);
    coo = 400*242 + 243;
    nz.push_back(coo);
    coo = 400*242 + 279;
    nz.push_back(coo);
    coo = 400*242 + 280;
    nz.push_back(coo);
    coo = 400*242 + 317;
    nz.push_back(coo);
    coo = 400*243 + 246;
    nz.push_back(coo);
    coo = 400*243 + 281;
    nz.push_back(coo);
    coo = 400*244 + 245;
    nz.push_back(coo);
    coo = 400*244 + 246;
    nz.push_back(coo);
    coo = 400*244 + 247;
    nz.push_back(coo);
    coo = 400*245 + 247;
    nz.push_back(coo);
    coo = 400*245 + 248;
    nz.push_back(coo);
    coo = 400*246 + 247;
    nz.push_back(coo);
    coo = 400*246 + 281;
    nz.push_back(coo);
    coo = 400*246 + 284;
    nz.push_back(coo);
    coo = 400*247 + 250;
    nz.push_back(coo);
    coo = 400*247 + 285;
    nz.push_back(coo);
    coo = 400*248 + 249;
    nz.push_back(coo);
    coo = 400*248 + 250;
    nz.push_back(coo);
    coo = 400*248 + 251;
    nz.push_back(coo);
    coo = 400*249 + 251;
    nz.push_back(coo);
    coo = 400*249 + 252;
    nz.push_back(coo);
    coo = 400*250 + 251;
    nz.push_back(coo);
    coo = 400*250 + 285;
    nz.push_back(coo);
    coo = 400*250 + 288;
    nz.push_back(coo);
    coo = 400*251 + 254;
    nz.push_back(coo);
    coo = 400*251 + 289;
    nz.push_back(coo);
    coo = 400*252 + 253;
    nz.push_back(coo);
    coo = 400*252 + 254;
    nz.push_back(coo);
    coo = 400*252 + 255;
    nz.push_back(coo);
    coo = 400*253 + 255;
    nz.push_back(coo);
    coo = 400*253 + 256;
    nz.push_back(coo);
    coo = 400*254 + 255;
    nz.push_back(coo);
    coo = 400*254 + 289;
    nz.push_back(coo);
    coo = 400*254 + 292;
    nz.push_back(coo);
    coo = 400*255 + 258;
    nz.push_back(coo);
    coo = 400*255 + 293;
    nz.push_back(coo);
    coo = 400*256 + 257;
    nz.push_back(coo);
    coo = 400*256 + 258;
    nz.push_back(coo);
    coo = 400*256 + 259;
    nz.push_back(coo);
    coo = 400*257 + 259;
    nz.push_back(coo);
    coo = 400*257 + 260;
    nz.push_back(coo);
    coo = 400*258 + 259;
    nz.push_back(coo);
    coo = 400*258 + 293;
    nz.push_back(coo);
    coo = 400*258 + 296;
    nz.push_back(coo);
    coo = 400*259 + 262;
    nz.push_back(coo);
    coo = 400*259 + 297;
    nz.push_back(coo);
    coo = 400*260 + 261;
    nz.push_back(coo);
    coo = 400*260 + 262;
    nz.push_back(coo);
    coo = 400*260 + 263;
    nz.push_back(coo);
    coo = 400*261 + 263;
    nz.push_back(coo);
    coo = 400*261 + 264;
    nz.push_back(coo);
    coo = 400*262 + 263;
    nz.push_back(coo);
    coo = 400*262 + 297;
    nz.push_back(coo);
    coo = 400*262 + 300;
    nz.push_back(coo);
    coo = 400*263 + 266;
    nz.push_back(coo);
    coo = 400*263 + 301;
    nz.push_back(coo);
    coo = 400*264 + 265;
    nz.push_back(coo);
    coo = 400*264 + 266;
    nz.push_back(coo);
    coo = 400*264 + 267;
    nz.push_back(coo);
    coo = 400*265 + 267;
    nz.push_back(coo);
    coo = 400*265 + 268;
    nz.push_back(coo);
    coo = 400*266 + 267;
    nz.push_back(coo);
    coo = 400*266 + 301;
    nz.push_back(coo);
    coo = 400*266 + 304;
    nz.push_back(coo);
    coo = 400*267 + 270;
    nz.push_back(coo);
    coo = 400*267 + 305;
    nz.push_back(coo);
    coo = 400*268 + 269;
    nz.push_back(coo);
    coo = 400*268 + 270;
    nz.push_back(coo);
    coo = 400*268 + 271;
    nz.push_back(coo);
    coo = 400*269 + 271;
    nz.push_back(coo);
    coo = 400*269 + 272;
    nz.push_back(coo);
    coo = 400*270 + 271;
    nz.push_back(coo);
    coo = 400*270 + 305;
    nz.push_back(coo);
    coo = 400*270 + 308;
    nz.push_back(coo);
    coo = 400*271 + 274;
    nz.push_back(coo);
    coo = 400*271 + 309;
    nz.push_back(coo);
    coo = 400*272 + 273;
    nz.push_back(coo);
    coo = 400*272 + 274;
    nz.push_back(coo);
    coo = 400*272 + 275;
    nz.push_back(coo);
    coo = 400*273 + 275;
    nz.push_back(coo);
    coo = 400*273 + 276;
    nz.push_back(coo);
    coo = 400*274 + 275;
    nz.push_back(coo);
    coo = 400*274 + 309;
    nz.push_back(coo);
    coo = 400*274 + 312;
    nz.push_back(coo);
    coo = 400*275 + 278;
    nz.push_back(coo);
    coo = 400*275 + 313;
    nz.push_back(coo);
    coo = 400*276 + 277;
    nz.push_back(coo);
    coo = 400*276 + 278;
    nz.push_back(coo);
    coo = 400*276 + 279;
    nz.push_back(coo);
    coo = 400*277 + 279;
    nz.push_back(coo);
    coo = 400*278 + 279;
    nz.push_back(coo);
    coo = 400*278 + 313;
    nz.push_back(coo);
    coo = 400*278 + 316;
    nz.push_back(coo);
    coo = 400*279 + 317;
    nz.push_back(coo);
    coo = 400*280 + 281;
    nz.push_back(coo);
    coo = 400*280 + 282;
    nz.push_back(coo);
    coo = 400*280 + 283;
    nz.push_back(coo);
    coo = 400*280 + 317;
    nz.push_back(coo);
    coo = 400*281 + 283;
    nz.push_back(coo);
    coo = 400*281 + 284;
    nz.push_back(coo);
    coo = 400*282 + 283;
    nz.push_back(coo);
    coo = 400*282 + 319;
    nz.push_back(coo);
    coo = 400*282 + 320;
    nz.push_back(coo);
    coo = 400*282 + 357;
    nz.push_back(coo);
    coo = 400*283 + 286;
    nz.push_back(coo);
    coo = 400*283 + 321;
    nz.push_back(coo);
    coo = 400*284 + 285;
    nz.push_back(coo);
    coo = 400*284 + 286;
    nz.push_back(coo);
    coo = 400*284 + 287;
    nz.push_back(coo);
    coo = 400*285 + 287;
    nz.push_back(coo);
    coo = 400*285 + 288;
    nz.push_back(coo);
    coo = 400*286 + 287;
    nz.push_back(coo);
    coo = 400*286 + 321;
    nz.push_back(coo);
    coo = 400*286 + 324;
    nz.push_back(coo);
    coo = 400*287 + 290;
    nz.push_back(coo);
    coo = 400*287 + 325;
    nz.push_back(coo);
    coo = 400*288 + 289;
    nz.push_back(coo);
    coo = 400*288 + 290;
    nz.push_back(coo);
    coo = 400*288 + 291;
    nz.push_back(coo);
    coo = 400*289 + 291;
    nz.push_back(coo);
    coo = 400*289 + 292;
    nz.push_back(coo);
    coo = 400*290 + 291;
    nz.push_back(coo);
    coo = 400*290 + 325;
    nz.push_back(coo);
    coo = 400*290 + 328;
    nz.push_back(coo);
    coo = 400*291 + 294;
    nz.push_back(coo);
    coo = 400*291 + 329;
    nz.push_back(coo);
    coo = 400*292 + 293;
    nz.push_back(coo);
    coo = 400*292 + 294;
    nz.push_back(coo);
    coo = 400*292 + 295;
    nz.push_back(coo);
    coo = 400*293 + 295;
    nz.push_back(coo);
    coo = 400*293 + 296;
    nz.push_back(coo);
    coo = 400*294 + 295;
    nz.push_back(coo);
    coo = 400*294 + 329;
    nz.push_back(coo);
    coo = 400*294 + 332;
    nz.push_back(coo);
    coo = 400*295 + 298;
    nz.push_back(coo);
    coo = 400*295 + 333;
    nz.push_back(coo);
    coo = 400*296 + 297;
    nz.push_back(coo);
    coo = 400*296 + 298;
    nz.push_back(coo);
    coo = 400*296 + 299;
    nz.push_back(coo);
    coo = 400*297 + 299;
    nz.push_back(coo);
    coo = 400*297 + 300;
    nz.push_back(coo);
    coo = 400*298 + 299;
    nz.push_back(coo);
    coo = 400*298 + 333;
    nz.push_back(coo);
    coo = 400*298 + 336;
    nz.push_back(coo);
    coo = 400*299 + 302;
    nz.push_back(coo);
    coo = 400*299 + 337;
    nz.push_back(coo);
    coo = 400*300 + 301;
    nz.push_back(coo);
    coo = 400*300 + 302;
    nz.push_back(coo);
    coo = 400*300 + 303;
    nz.push_back(coo);
    coo = 400*301 + 303;
    nz.push_back(coo);
    coo = 400*301 + 304;
    nz.push_back(coo);
    coo = 400*302 + 303;
    nz.push_back(coo);
    coo = 400*302 + 337;
    nz.push_back(coo);
    coo = 400*302 + 340;
    nz.push_back(coo);
    coo = 400*303 + 306;
    nz.push_back(coo);
    coo = 400*303 + 341;
    nz.push_back(coo);
    coo = 400*304 + 305;
    nz.push_back(coo);
    coo = 400*304 + 306;
    nz.push_back(coo);
    coo = 400*304 + 307;
    nz.push_back(coo);
    coo = 400*305 + 307;
    nz.push_back(coo);
    coo = 400*305 + 308;
    nz.push_back(coo);
    coo = 400*306 + 307;
    nz.push_back(coo);
    coo = 400*306 + 341;
    nz.push_back(coo);
    coo = 400*306 + 344;
    nz.push_back(coo);
    coo = 400*307 + 310;
    nz.push_back(coo);
    coo = 400*307 + 345;
    nz.push_back(coo);
    coo = 400*308 + 309;
    nz.push_back(coo);
    coo = 400*308 + 310;
    nz.push_back(coo);
    coo = 400*308 + 311;
    nz.push_back(coo);
    coo = 400*309 + 311;
    nz.push_back(coo);
    coo = 400*309 + 312;
    nz.push_back(coo);
    coo = 400*310 + 311;
    nz.push_back(coo);
    coo = 400*310 + 345;
    nz.push_back(coo);
    coo = 400*310 + 348;
    nz.push_back(coo);
    coo = 400*311 + 314;
    nz.push_back(coo);
    coo = 400*311 + 349;
    nz.push_back(coo);
    coo = 400*312 + 313;
    nz.push_back(coo);
    coo = 400*312 + 314;
    nz.push_back(coo);
    coo = 400*312 + 315;
    nz.push_back(coo);
    coo = 400*313 + 315;
    nz.push_back(coo);
    coo = 400*313 + 316;
    nz.push_back(coo);
    coo = 400*314 + 315;
    nz.push_back(coo);
    coo = 400*314 + 349;
    nz.push_back(coo);
    coo = 400*314 + 352;
    nz.push_back(coo);
    coo = 400*315 + 318;
    nz.push_back(coo);
    coo = 400*315 + 353;
    nz.push_back(coo);
    coo = 400*316 + 317;
    nz.push_back(coo);
    coo = 400*316 + 318;
    nz.push_back(coo);
    coo = 400*316 + 319;
    nz.push_back(coo);
    coo = 400*317 + 319;
    nz.push_back(coo);
    coo = 400*318 + 319;
    nz.push_back(coo);
    coo = 400*318 + 353;
    nz.push_back(coo);
    coo = 400*318 + 356;
    nz.push_back(coo);
    coo = 400*319 + 357;
    nz.push_back(coo);
    coo = 400*320 + 321;
    nz.push_back(coo);
    coo = 400*320 + 322;
    nz.push_back(coo);
    coo = 400*320 + 323;
    nz.push_back(coo);
    coo = 400*320 + 357;
    nz.push_back(coo);
    coo = 400*321 + 323;
    nz.push_back(coo);
    coo = 400*321 + 324;
    nz.push_back(coo);
    coo = 400*322 + 323;
    nz.push_back(coo);
    coo = 400*322 + 359;
    nz.push_back(coo);
    coo = 400*322 + 360;
    nz.push_back(coo);
    coo = 400*322 + 397;
    nz.push_back(coo);
    coo = 400*323 + 326;
    nz.push_back(coo);
    coo = 400*323 + 361;
    nz.push_back(coo);
    coo = 400*324 + 325;
    nz.push_back(coo);
    coo = 400*324 + 326;
    nz.push_back(coo);
    coo = 400*324 + 327;
    nz.push_back(coo);
    coo = 400*325 + 327;
    nz.push_back(coo);
    coo = 400*325 + 328;
    nz.push_back(coo);
    coo = 400*326 + 327;
    nz.push_back(coo);
    coo = 400*326 + 361;
    nz.push_back(coo);
    coo = 400*326 + 364;
    nz.push_back(coo);
    coo = 400*327 + 330;
    nz.push_back(coo);
    coo = 400*327 + 365;
    nz.push_back(coo);
    coo = 400*328 + 329;
    nz.push_back(coo);
    coo = 400*328 + 330;
    nz.push_back(coo);
    coo = 400*328 + 331;
    nz.push_back(coo);
    coo = 400*329 + 331;
    nz.push_back(coo);
    coo = 400*329 + 332;
    nz.push_back(coo);
    coo = 400*330 + 331;
    nz.push_back(coo);
    coo = 400*330 + 365;
    nz.push_back(coo);
    coo = 400*330 + 368;
    nz.push_back(coo);
    coo = 400*331 + 334;
    nz.push_back(coo);
    coo = 400*331 + 369;
    nz.push_back(coo);
    coo = 400*332 + 333;
    nz.push_back(coo);
    coo = 400*332 + 334;
    nz.push_back(coo);
    coo = 400*332 + 335;
    nz.push_back(coo);
    coo = 400*333 + 335;
    nz.push_back(coo);
    coo = 400*333 + 336;
    nz.push_back(coo);
    coo = 400*334 + 335;
    nz.push_back(coo);
    coo = 400*334 + 369;
    nz.push_back(coo);
    coo = 400*334 + 372;
    nz.push_back(coo);
    coo = 400*335 + 338;
    nz.push_back(coo);
    coo = 400*335 + 373;
    nz.push_back(coo);
    coo = 400*336 + 337;
    nz.push_back(coo);
    coo = 400*336 + 338;
    nz.push_back(coo);
    coo = 400*336 + 339;
    nz.push_back(coo);
    coo = 400*337 + 339;
    nz.push_back(coo);
    coo = 400*337 + 340;
    nz.push_back(coo);
    coo = 400*338 + 339;
    nz.push_back(coo);
    coo = 400*338 + 373;
    nz.push_back(coo);
    coo = 400*338 + 376;
    nz.push_back(coo);
    coo = 400*339 + 342;
    nz.push_back(coo);
    coo = 400*339 + 377;
    nz.push_back(coo);
    coo = 400*340 + 341;
    nz.push_back(coo);
    coo = 400*340 + 342;
    nz.push_back(coo);
    coo = 400*340 + 343;
    nz.push_back(coo);
    coo = 400*341 + 343;
    nz.push_back(coo);
    coo = 400*341 + 344;
    nz.push_back(coo);
    coo = 400*342 + 343;
    nz.push_back(coo);
    coo = 400*342 + 377;
    nz.push_back(coo);
    coo = 400*342 + 380;
    nz.push_back(coo);
    coo = 400*343 + 346;
    nz.push_back(coo);
    coo = 400*343 + 381;
    nz.push_back(coo);
    coo = 400*344 + 345;
    nz.push_back(coo);
    coo = 400*344 + 346;
    nz.push_back(coo);
    coo = 400*344 + 347;
    nz.push_back(coo);
    coo = 400*345 + 347;
    nz.push_back(coo);
    coo = 400*345 + 348;
    nz.push_back(coo);
    coo = 400*346 + 347;
    nz.push_back(coo);
    coo = 400*346 + 381;
    nz.push_back(coo);
    coo = 400*346 + 384;
    nz.push_back(coo);
    coo = 400*347 + 350;
    nz.push_back(coo);
    coo = 400*347 + 385;
    nz.push_back(coo);
    coo = 400*348 + 349;
    nz.push_back(coo);
    coo = 400*348 + 350;
    nz.push_back(coo);
    coo = 400*348 + 351;
    nz.push_back(coo);
    coo = 400*349 + 351;
    nz.push_back(coo);
    coo = 400*349 + 352;
    nz.push_back(coo);
    coo = 400*350 + 351;
    nz.push_back(coo);
    coo = 400*350 + 385;
    nz.push_back(coo);
    coo = 400*350 + 388;
    nz.push_back(coo);
    coo = 400*351 + 354;
    nz.push_back(coo);
    coo = 400*351 + 389;
    nz.push_back(coo);
    coo = 400*352 + 353;
    nz.push_back(coo);
    coo = 400*352 + 354;
    nz.push_back(coo);
    coo = 400*352 + 355;
    nz.push_back(coo);
    coo = 400*353 + 355;
    nz.push_back(coo);
    coo = 400*353 + 356;
    nz.push_back(coo);
    coo = 400*354 + 355;
    nz.push_back(coo);
    coo = 400*354 + 389;
    nz.push_back(coo);
    coo = 400*354 + 392;
    nz.push_back(coo);
    coo = 400*355 + 358;
    nz.push_back(coo);
    coo = 400*355 + 393;
    nz.push_back(coo);
    coo = 400*356 + 357;
    nz.push_back(coo);
    coo = 400*356 + 358;
    nz.push_back(coo);
    coo = 400*356 + 359;
    nz.push_back(coo);
    coo = 400*357 + 359;
    nz.push_back(coo);
    coo = 400*358 + 359;
    nz.push_back(coo);
    coo = 400*358 + 393;
    nz.push_back(coo);
    coo = 400*358 + 396;
    nz.push_back(coo);
    coo = 400*359 + 397;
    nz.push_back(coo);
    coo = 400*360 + 361;
    nz.push_back(coo);
    coo = 400*360 + 362;
    nz.push_back(coo);
    coo = 400*360 + 363;
    nz.push_back(coo);
    coo = 400*360 + 397;
    nz.push_back(coo);
    coo = 400*361 + 363;
    nz.push_back(coo);
    coo = 400*361 + 364;
    nz.push_back(coo);
    coo = 400*362 + 363;
    nz.push_back(coo);
    coo = 400*362 + 399;
    nz.push_back(coo);
    coo = 400*363 + 366;
    nz.push_back(coo);
    coo = 400*364 + 365;
    nz.push_back(coo);
    coo = 400*364 + 366;
    nz.push_back(coo);
    coo = 400*364 + 367;
    nz.push_back(coo);
    coo = 400*365 + 367;
    nz.push_back(coo);
    coo = 400*365 + 368;
    nz.push_back(coo);
    coo = 400*366 + 367;
    nz.push_back(coo);
    coo = 400*367 + 370;
    nz.push_back(coo);
    coo = 400*368 + 369;
    nz.push_back(coo);
    coo = 400*368 + 370;
    nz.push_back(coo);
    coo = 400*368 + 371;
    nz.push_back(coo);
    coo = 400*369 + 371;
    nz.push_back(coo);
    coo = 400*369 + 372;
    nz.push_back(coo);
    coo = 400*370 + 371;
    nz.push_back(coo);
    coo = 400*371 + 374;
    nz.push_back(coo);
    coo = 400*372 + 373;
    nz.push_back(coo);
    coo = 400*372 + 374;
    nz.push_back(coo);
    coo = 400*372 + 375;
    nz.push_back(coo);
    coo = 400*373 + 375;
    nz.push_back(coo);
    coo = 400*373 + 376;
    nz.push_back(coo);
    coo = 400*374 + 375;
    nz.push_back(coo);
    coo = 400*375 + 378;
    nz.push_back(coo);
    coo = 400*376 + 377;
    nz.push_back(coo);
    coo = 400*376 + 378;
    nz.push_back(coo);
    coo = 400*376 + 379;
    nz.push_back(coo);
    coo = 400*377 + 379;
    nz.push_back(coo);
    coo = 400*377 + 380;
    nz.push_back(coo);
    coo = 400*378 + 379;
    nz.push_back(coo);
    coo = 400*379 + 382;
    nz.push_back(coo);
    coo = 400*380 + 381;
    nz.push_back(coo);
    coo = 400*380 + 382;
    nz.push_back(coo);
    coo = 400*380 + 383;
    nz.push_back(coo);
    coo = 400*381 + 383;
    nz.push_back(coo);
    coo = 400*381 + 384;
    nz.push_back(coo);
    coo = 400*382 + 383;
    nz.push_back(coo);
    coo = 400*383 + 386;
    nz.push_back(coo);
    coo = 400*384 + 385;
    nz.push_back(coo);
    coo = 400*384 + 386;
    nz.push_back(coo);
    coo = 400*384 + 387;
    nz.push_back(coo);
    coo = 400*385 + 387;
    nz.push_back(coo);
    coo = 400*385 + 388;
    nz.push_back(coo);
    coo = 400*386 + 387;
    nz.push_back(coo);
    coo = 400*387 + 390;
    nz.push_back(coo);
    coo = 400*388 + 389;
    nz.push_back(coo);
    coo = 400*388 + 390;
    nz.push_back(coo);
    coo = 400*388 + 391;
    nz.push_back(coo);
    coo = 400*389 + 391;
    nz.push_back(coo);
    coo = 400*389 + 392;
    nz.push_back(coo);
    coo = 400*390 + 391;
    nz.push_back(coo);
    coo = 400*391 + 394;
    nz.push_back(coo);
    coo = 400*392 + 393;
    nz.push_back(coo);
    coo = 400*392 + 394;
    nz.push_back(coo);
    coo = 400*392 + 395;
    nz.push_back(coo);
    coo = 400*393 + 395;
    nz.push_back(coo);
    coo = 400*393 + 396;
    nz.push_back(coo);
    coo = 400*394 + 395;
    nz.push_back(coo);
    coo = 400*395 + 398;
    nz.push_back(coo);
    coo = 400*396 + 397;
    nz.push_back(coo);
    coo = 400*396 + 398;
    nz.push_back(coo);
    coo = 400*396 + 399;
    nz.push_back(coo);
    coo = 400*397 + 399;
    nz.push_back(coo);
    coo = 400*398 + 399;
    nz.push_back(coo);
    return nz;
}

Mat<int> create_plaquettes()
{
   Mat<int> P(400,4);
   P(0, 0) = 400*0+1;
   P(0, 1) = 400*1+3;
   P(0, 2) = 400*3+2;
   P(0, 3) = 400*2+0;
   P(1, 0) = 400*0+1;
   P(1, 1) = 400*1+363;
   P(1, 2) = 400*363+362;
   P(1, 3) = 400*362+0;
   P(2, 0) = 400*0+2;
   P(2, 1) = 400*2+39;
   P(2, 2) = 400*39+37;
   P(2, 3) = 400*37+0;
   P(3, 0) = 400*0+37;
   P(3, 1) = 400*37+399;
   P(3, 2) = 400*399+362;
   P(3, 3) = 400*362+0;
   P(4, 0) = 400*1+3;
   P(4, 1) = 400*3+6;
   P(4, 2) = 400*6+4;
   P(4, 3) = 400*4+1;
   P(5, 0) = 400*1+4;
   P(5, 1) = 400*4+366;
   P(5, 2) = 400*366+363;
   P(5, 3) = 400*363+1;
   P(6, 0) = 400*2+3;
   P(6, 1) = 400*3+41;
   P(6, 2) = 400*41+40;
   P(6, 3) = 400*40+2;
   P(7, 0) = 400*2+39;
   P(7, 1) = 400*39+77;
   P(7, 2) = 400*77+40;
   P(7, 3) = 400*40+2;
   P(8, 0) = 400*3+6;
   P(8, 1) = 400*6+44;
   P(8, 2) = 400*44+41;
   P(8, 3) = 400*41+3;
   P(9, 0) = 400*4+5;
   P(9, 1) = 400*5+7;
   P(9, 2) = 400*7+6;
   P(9, 3) = 400*6+4;
   P(10, 0) = 400*4+5;
   P(10, 1) = 400*5+367;
   P(10, 2) = 400*367+366;
   P(10, 3) = 400*366+4;
   P(11, 0) = 400*5+7;
   P(11, 1) = 400*7+10;
   P(11, 2) = 400*10+8;
   P(11, 3) = 400*8+5;
   P(12, 0) = 400*5+8;
   P(12, 1) = 400*8+370;
   P(12, 2) = 400*370+367;
   P(12, 3) = 400*367+5;
   P(13, 0) = 400*6+7;
   P(13, 1) = 400*7+45;
   P(13, 2) = 400*45+44;
   P(13, 3) = 400*44+6;
   P(14, 0) = 400*7+10;
   P(14, 1) = 400*10+48;
   P(14, 2) = 400*48+45;
   P(14, 3) = 400*45+7;
   P(15, 0) = 400*8+9;
   P(15, 1) = 400*9+11;
   P(15, 2) = 400*11+10;
   P(15, 3) = 400*10+8;
   P(16, 0) = 400*8+9;
   P(16, 1) = 400*9+371;
   P(16, 2) = 400*371+370;
   P(16, 3) = 400*370+8;
   P(17, 0) = 400*9+11;
   P(17, 1) = 400*11+14;
   P(17, 2) = 400*14+12;
   P(17, 3) = 400*12+9;
   P(18, 0) = 400*9+12;
   P(18, 1) = 400*12+374;
   P(18, 2) = 400*374+371;
   P(18, 3) = 400*371+9;
   P(19, 0) = 400*10+11;
   P(19, 1) = 400*11+49;
   P(19, 2) = 400*49+48;
   P(19, 3) = 400*48+10;
   P(20, 0) = 400*11+14;
   P(20, 1) = 400*14+52;
   P(20, 2) = 400*52+49;
   P(20, 3) = 400*49+11;
   P(21, 0) = 400*12+13;
   P(21, 1) = 400*13+15;
   P(21, 2) = 400*15+14;
   P(21, 3) = 400*14+12;
   P(22, 0) = 400*12+13;
   P(22, 1) = 400*13+375;
   P(22, 2) = 400*375+374;
   P(22, 3) = 400*374+12;
   P(23, 0) = 400*13+15;
   P(23, 1) = 400*15+18;
   P(23, 2) = 400*18+16;
   P(23, 3) = 400*16+13;
   P(24, 0) = 400*13+16;
   P(24, 1) = 400*16+378;
   P(24, 2) = 400*378+375;
   P(24, 3) = 400*375+13;
   P(25, 0) = 400*14+15;
   P(25, 1) = 400*15+53;
   P(25, 2) = 400*53+52;
   P(25, 3) = 400*52+14;
   P(26, 0) = 400*15+18;
   P(26, 1) = 400*18+56;
   P(26, 2) = 400*56+53;
   P(26, 3) = 400*53+15;
   P(27, 0) = 400*16+17;
   P(27, 1) = 400*17+19;
   P(27, 2) = 400*19+18;
   P(27, 3) = 400*18+16;
   P(28, 0) = 400*16+17;
   P(28, 1) = 400*17+379;
   P(28, 2) = 400*379+378;
   P(28, 3) = 400*378+16;
   P(29, 0) = 400*17+19;
   P(29, 1) = 400*19+22;
   P(29, 2) = 400*22+20;
   P(29, 3) = 400*20+17;
   P(30, 0) = 400*17+20;
   P(30, 1) = 400*20+382;
   P(30, 2) = 400*382+379;
   P(30, 3) = 400*379+17;
   P(31, 0) = 400*18+19;
   P(31, 1) = 400*19+57;
   P(31, 2) = 400*57+56;
   P(31, 3) = 400*56+18;
   P(32, 0) = 400*19+22;
   P(32, 1) = 400*22+60;
   P(32, 2) = 400*60+57;
   P(32, 3) = 400*57+19;
   P(33, 0) = 400*20+21;
   P(33, 1) = 400*21+23;
   P(33, 2) = 400*23+22;
   P(33, 3) = 400*22+20;
   P(34, 0) = 400*20+21;
   P(34, 1) = 400*21+383;
   P(34, 2) = 400*383+382;
   P(34, 3) = 400*382+20;
   P(35, 0) = 400*21+23;
   P(35, 1) = 400*23+26;
   P(35, 2) = 400*26+24;
   P(35, 3) = 400*24+21;
   P(36, 0) = 400*21+24;
   P(36, 1) = 400*24+386;
   P(36, 2) = 400*386+383;
   P(36, 3) = 400*383+21;
   P(37, 0) = 400*22+23;
   P(37, 1) = 400*23+61;
   P(37, 2) = 400*61+60;
   P(37, 3) = 400*60+22;
   P(38, 0) = 400*23+26;
   P(38, 1) = 400*26+64;
   P(38, 2) = 400*64+61;
   P(38, 3) = 400*61+23;
   P(39, 0) = 400*24+25;
   P(39, 1) = 400*25+27;
   P(39, 2) = 400*27+26;
   P(39, 3) = 400*26+24;
   P(40, 0) = 400*24+25;
   P(40, 1) = 400*25+387;
   P(40, 2) = 400*387+386;
   P(40, 3) = 400*386+24;
   P(41, 0) = 400*25+27;
   P(41, 1) = 400*27+30;
   P(41, 2) = 400*30+28;
   P(41, 3) = 400*28+25;
   P(42, 0) = 400*25+28;
   P(42, 1) = 400*28+390;
   P(42, 2) = 400*390+387;
   P(42, 3) = 400*387+25;
   P(43, 0) = 400*26+27;
   P(43, 1) = 400*27+65;
   P(43, 2) = 400*65+64;
   P(43, 3) = 400*64+26;
   P(44, 0) = 400*27+30;
   P(44, 1) = 400*30+68;
   P(44, 2) = 400*68+65;
   P(44, 3) = 400*65+27;
   P(45, 0) = 400*28+29;
   P(45, 1) = 400*29+31;
   P(45, 2) = 400*31+30;
   P(45, 3) = 400*30+28;
   P(46, 0) = 400*28+29;
   P(46, 1) = 400*29+391;
   P(46, 2) = 400*391+390;
   P(46, 3) = 400*390+28;
   P(47, 0) = 400*29+31;
   P(47, 1) = 400*31+34;
   P(47, 2) = 400*34+32;
   P(47, 3) = 400*32+29;
   P(48, 0) = 400*29+32;
   P(48, 1) = 400*32+394;
   P(48, 2) = 400*394+391;
   P(48, 3) = 400*391+29;
   P(49, 0) = 400*30+31;
   P(49, 1) = 400*31+69;
   P(49, 2) = 400*69+68;
   P(49, 3) = 400*68+30;
   P(50, 0) = 400*31+34;
   P(50, 1) = 400*34+72;
   P(50, 2) = 400*72+69;
   P(50, 3) = 400*69+31;
   P(51, 0) = 400*32+33;
   P(51, 1) = 400*33+35;
   P(51, 2) = 400*35+34;
   P(51, 3) = 400*34+32;
   P(52, 0) = 400*32+33;
   P(52, 1) = 400*33+395;
   P(52, 2) = 400*395+394;
   P(52, 3) = 400*394+32;
   P(53, 0) = 400*33+35;
   P(53, 1) = 400*35+38;
   P(53, 2) = 400*38+36;
   P(53, 3) = 400*36+33;
   P(54, 0) = 400*33+36;
   P(54, 1) = 400*36+398;
   P(54, 2) = 400*398+395;
   P(54, 3) = 400*395+33;
   P(55, 0) = 400*34+35;
   P(55, 1) = 400*35+73;
   P(55, 2) = 400*73+72;
   P(55, 3) = 400*72+34;
   P(56, 0) = 400*35+38;
   P(56, 1) = 400*38+76;
   P(56, 2) = 400*76+73;
   P(56, 3) = 400*73+35;
   P(57, 0) = 400*36+37;
   P(57, 1) = 400*37+39;
   P(57, 2) = 400*39+38;
   P(57, 3) = 400*38+36;
   P(58, 0) = 400*36+37;
   P(58, 1) = 400*37+399;
   P(58, 2) = 400*399+398;
   P(58, 3) = 400*398+36;
   P(59, 0) = 400*38+39;
   P(59, 1) = 400*39+77;
   P(59, 2) = 400*77+76;
   P(59, 3) = 400*76+38;
   P(60, 0) = 400*40+41;
   P(60, 1) = 400*41+43;
   P(60, 2) = 400*43+42;
   P(60, 3) = 400*42+40;
   P(61, 0) = 400*40+42;
   P(61, 1) = 400*42+79;
   P(61, 2) = 400*79+77;
   P(61, 3) = 400*77+40;
   P(62, 0) = 400*41+43;
   P(62, 1) = 400*43+46;
   P(62, 2) = 400*46+44;
   P(62, 3) = 400*44+41;
   P(63, 0) = 400*42+43;
   P(63, 1) = 400*43+81;
   P(63, 2) = 400*81+80;
   P(63, 3) = 400*80+42;
   P(64, 0) = 400*42+79;
   P(64, 1) = 400*79+117;
   P(64, 2) = 400*117+80;
   P(64, 3) = 400*80+42;
   P(65, 0) = 400*43+46;
   P(65, 1) = 400*46+84;
   P(65, 2) = 400*84+81;
   P(65, 3) = 400*81+43;
   P(66, 0) = 400*44+45;
   P(66, 1) = 400*45+47;
   P(66, 2) = 400*47+46;
   P(66, 3) = 400*46+44;
   P(67, 0) = 400*45+47;
   P(67, 1) = 400*47+50;
   P(67, 2) = 400*50+48;
   P(67, 3) = 400*48+45;
   P(68, 0) = 400*46+47;
   P(68, 1) = 400*47+85;
   P(68, 2) = 400*85+84;
   P(68, 3) = 400*84+46;
   P(69, 0) = 400*47+50;
   P(69, 1) = 400*50+88;
   P(69, 2) = 400*88+85;
   P(69, 3) = 400*85+47;
   P(70, 0) = 400*48+49;
   P(70, 1) = 400*49+51;
   P(70, 2) = 400*51+50;
   P(70, 3) = 400*50+48;
   P(71, 0) = 400*49+51;
   P(71, 1) = 400*51+54;
   P(71, 2) = 400*54+52;
   P(71, 3) = 400*52+49;
   P(72, 0) = 400*50+51;
   P(72, 1) = 400*51+89;
   P(72, 2) = 400*89+88;
   P(72, 3) = 400*88+50;
   P(73, 0) = 400*51+54;
   P(73, 1) = 400*54+92;
   P(73, 2) = 400*92+89;
   P(73, 3) = 400*89+51;
   P(74, 0) = 400*52+53;
   P(74, 1) = 400*53+55;
   P(74, 2) = 400*55+54;
   P(74, 3) = 400*54+52;
   P(75, 0) = 400*53+55;
   P(75, 1) = 400*55+58;
   P(75, 2) = 400*58+56;
   P(75, 3) = 400*56+53;
   P(76, 0) = 400*54+55;
   P(76, 1) = 400*55+93;
   P(76, 2) = 400*93+92;
   P(76, 3) = 400*92+54;
   P(77, 0) = 400*55+58;
   P(77, 1) = 400*58+96;
   P(77, 2) = 400*96+93;
   P(77, 3) = 400*93+55;
   P(78, 0) = 400*56+57;
   P(78, 1) = 400*57+59;
   P(78, 2) = 400*59+58;
   P(78, 3) = 400*58+56;
   P(79, 0) = 400*57+59;
   P(79, 1) = 400*59+62;
   P(79, 2) = 400*62+60;
   P(79, 3) = 400*60+57;
   P(80, 0) = 400*58+59;
   P(80, 1) = 400*59+97;
   P(80, 2) = 400*97+96;
   P(80, 3) = 400*96+58;
   P(81, 0) = 400*59+62;
   P(81, 1) = 400*62+100;
   P(81, 2) = 400*100+97;
   P(81, 3) = 400*97+59;
   P(82, 0) = 400*60+61;
   P(82, 1) = 400*61+63;
   P(82, 2) = 400*63+62;
   P(82, 3) = 400*62+60;
   P(83, 0) = 400*61+63;
   P(83, 1) = 400*63+66;
   P(83, 2) = 400*66+64;
   P(83, 3) = 400*64+61;
   P(84, 0) = 400*62+63;
   P(84, 1) = 400*63+101;
   P(84, 2) = 400*101+100;
   P(84, 3) = 400*100+62;
   P(85, 0) = 400*63+66;
   P(85, 1) = 400*66+104;
   P(85, 2) = 400*104+101;
   P(85, 3) = 400*101+63;
   P(86, 0) = 400*64+65;
   P(86, 1) = 400*65+67;
   P(86, 2) = 400*67+66;
   P(86, 3) = 400*66+64;
   P(87, 0) = 400*65+67;
   P(87, 1) = 400*67+70;
   P(87, 2) = 400*70+68;
   P(87, 3) = 400*68+65;
   P(88, 0) = 400*66+67;
   P(88, 1) = 400*67+105;
   P(88, 2) = 400*105+104;
   P(88, 3) = 400*104+66;
   P(89, 0) = 400*67+70;
   P(89, 1) = 400*70+108;
   P(89, 2) = 400*108+105;
   P(89, 3) = 400*105+67;
   P(90, 0) = 400*68+69;
   P(90, 1) = 400*69+71;
   P(90, 2) = 400*71+70;
   P(90, 3) = 400*70+68;
   P(91, 0) = 400*69+71;
   P(91, 1) = 400*71+74;
   P(91, 2) = 400*74+72;
   P(91, 3) = 400*72+69;
   P(92, 0) = 400*70+71;
   P(92, 1) = 400*71+109;
   P(92, 2) = 400*109+108;
   P(92, 3) = 400*108+70;
   P(93, 0) = 400*71+74;
   P(93, 1) = 400*74+112;
   P(93, 2) = 400*112+109;
   P(93, 3) = 400*109+71;
   P(94, 0) = 400*72+73;
   P(94, 1) = 400*73+75;
   P(94, 2) = 400*75+74;
   P(94, 3) = 400*74+72;
   P(95, 0) = 400*73+75;
   P(95, 1) = 400*75+78;
   P(95, 2) = 400*78+76;
   P(95, 3) = 400*76+73;
   P(96, 0) = 400*74+75;
   P(96, 1) = 400*75+113;
   P(96, 2) = 400*113+112;
   P(96, 3) = 400*112+74;
   P(97, 0) = 400*75+78;
   P(97, 1) = 400*78+116;
   P(97, 2) = 400*116+113;
   P(97, 3) = 400*113+75;
   P(98, 0) = 400*76+77;
   P(98, 1) = 400*77+79;
   P(98, 2) = 400*79+78;
   P(98, 3) = 400*78+76;
   P(99, 0) = 400*78+79;
   P(99, 1) = 400*79+117;
   P(99, 2) = 400*117+116;
   P(99, 3) = 400*116+78;
   P(100, 0) = 400*80+81;
   P(100, 1) = 400*81+83;
   P(100, 2) = 400*83+82;
   P(100, 3) = 400*82+80;
   P(101, 0) = 400*80+82;
   P(101, 1) = 400*82+119;
   P(101, 2) = 400*119+117;
   P(101, 3) = 400*117+80;
   P(102, 0) = 400*81+83;
   P(102, 1) = 400*83+86;
   P(102, 2) = 400*86+84;
   P(102, 3) = 400*84+81;
   P(103, 0) = 400*82+83;
   P(103, 1) = 400*83+121;
   P(103, 2) = 400*121+120;
   P(103, 3) = 400*120+82;
   P(104, 0) = 400*82+119;
   P(104, 1) = 400*119+157;
   P(104, 2) = 400*157+120;
   P(104, 3) = 400*120+82;
   P(105, 0) = 400*83+86;
   P(105, 1) = 400*86+124;
   P(105, 2) = 400*124+121;
   P(105, 3) = 400*121+83;
   P(106, 0) = 400*84+85;
   P(106, 1) = 400*85+87;
   P(106, 2) = 400*87+86;
   P(106, 3) = 400*86+84;
   P(107, 0) = 400*85+87;
   P(107, 1) = 400*87+90;
   P(107, 2) = 400*90+88;
   P(107, 3) = 400*88+85;
   P(108, 0) = 400*86+87;
   P(108, 1) = 400*87+125;
   P(108, 2) = 400*125+124;
   P(108, 3) = 400*124+86;
   P(109, 0) = 400*87+90;
   P(109, 1) = 400*90+128;
   P(109, 2) = 400*128+125;
   P(109, 3) = 400*125+87;
   P(110, 0) = 400*88+89;
   P(110, 1) = 400*89+91;
   P(110, 2) = 400*91+90;
   P(110, 3) = 400*90+88;
   P(111, 0) = 400*89+91;
   P(111, 1) = 400*91+94;
   P(111, 2) = 400*94+92;
   P(111, 3) = 400*92+89;
   P(112, 0) = 400*90+91;
   P(112, 1) = 400*91+129;
   P(112, 2) = 400*129+128;
   P(112, 3) = 400*128+90;
   P(113, 0) = 400*91+94;
   P(113, 1) = 400*94+132;
   P(113, 2) = 400*132+129;
   P(113, 3) = 400*129+91;
   P(114, 0) = 400*92+93;
   P(114, 1) = 400*93+95;
   P(114, 2) = 400*95+94;
   P(114, 3) = 400*94+92;
   P(115, 0) = 400*93+95;
   P(115, 1) = 400*95+98;
   P(115, 2) = 400*98+96;
   P(115, 3) = 400*96+93;
   P(116, 0) = 400*94+95;
   P(116, 1) = 400*95+133;
   P(116, 2) = 400*133+132;
   P(116, 3) = 400*132+94;
   P(117, 0) = 400*95+98;
   P(117, 1) = 400*98+136;
   P(117, 2) = 400*136+133;
   P(117, 3) = 400*133+95;
   P(118, 0) = 400*96+97;
   P(118, 1) = 400*97+99;
   P(118, 2) = 400*99+98;
   P(118, 3) = 400*98+96;
   P(119, 0) = 400*97+99;
   P(119, 1) = 400*99+102;
   P(119, 2) = 400*102+100;
   P(119, 3) = 400*100+97;
   P(120, 0) = 400*98+99;
   P(120, 1) = 400*99+137;
   P(120, 2) = 400*137+136;
   P(120, 3) = 400*136+98;
   P(121, 0) = 400*99+102;
   P(121, 1) = 400*102+140;
   P(121, 2) = 400*140+137;
   P(121, 3) = 400*137+99;
   P(122, 0) = 400*100+101;
   P(122, 1) = 400*101+103;
   P(122, 2) = 400*103+102;
   P(122, 3) = 400*102+100;
   P(123, 0) = 400*101+103;
   P(123, 1) = 400*103+106;
   P(123, 2) = 400*106+104;
   P(123, 3) = 400*104+101;
   P(124, 0) = 400*102+103;
   P(124, 1) = 400*103+141;
   P(124, 2) = 400*141+140;
   P(124, 3) = 400*140+102;
   P(125, 0) = 400*103+106;
   P(125, 1) = 400*106+144;
   P(125, 2) = 400*144+141;
   P(125, 3) = 400*141+103;
   P(126, 0) = 400*104+105;
   P(126, 1) = 400*105+107;
   P(126, 2) = 400*107+106;
   P(126, 3) = 400*106+104;
   P(127, 0) = 400*105+107;
   P(127, 1) = 400*107+110;
   P(127, 2) = 400*110+108;
   P(127, 3) = 400*108+105;
   P(128, 0) = 400*106+107;
   P(128, 1) = 400*107+145;
   P(128, 2) = 400*145+144;
   P(128, 3) = 400*144+106;
   P(129, 0) = 400*107+110;
   P(129, 1) = 400*110+148;
   P(129, 2) = 400*148+145;
   P(129, 3) = 400*145+107;
   P(130, 0) = 400*108+109;
   P(130, 1) = 400*109+111;
   P(130, 2) = 400*111+110;
   P(130, 3) = 400*110+108;
   P(131, 0) = 400*109+111;
   P(131, 1) = 400*111+114;
   P(131, 2) = 400*114+112;
   P(131, 3) = 400*112+109;
   P(132, 0) = 400*110+111;
   P(132, 1) = 400*111+149;
   P(132, 2) = 400*149+148;
   P(132, 3) = 400*148+110;
   P(133, 0) = 400*111+114;
   P(133, 1) = 400*114+152;
   P(133, 2) = 400*152+149;
   P(133, 3) = 400*149+111;
   P(134, 0) = 400*112+113;
   P(134, 1) = 400*113+115;
   P(134, 2) = 400*115+114;
   P(134, 3) = 400*114+112;
   P(135, 0) = 400*113+115;
   P(135, 1) = 400*115+118;
   P(135, 2) = 400*118+116;
   P(135, 3) = 400*116+113;
   P(136, 0) = 400*114+115;
   P(136, 1) = 400*115+153;
   P(136, 2) = 400*153+152;
   P(136, 3) = 400*152+114;
   P(137, 0) = 400*115+118;
   P(137, 1) = 400*118+156;
   P(137, 2) = 400*156+153;
   P(137, 3) = 400*153+115;
   P(138, 0) = 400*116+117;
   P(138, 1) = 400*117+119;
   P(138, 2) = 400*119+118;
   P(138, 3) = 400*118+116;
   P(139, 0) = 400*118+119;
   P(139, 1) = 400*119+157;
   P(139, 2) = 400*157+156;
   P(139, 3) = 400*156+118;
   P(140, 0) = 400*120+121;
   P(140, 1) = 400*121+123;
   P(140, 2) = 400*123+122;
   P(140, 3) = 400*122+120;
   P(141, 0) = 400*120+122;
   P(141, 1) = 400*122+159;
   P(141, 2) = 400*159+157;
   P(141, 3) = 400*157+120;
   P(142, 0) = 400*121+123;
   P(142, 1) = 400*123+126;
   P(142, 2) = 400*126+124;
   P(142, 3) = 400*124+121;
   P(143, 0) = 400*122+123;
   P(143, 1) = 400*123+161;
   P(143, 2) = 400*161+160;
   P(143, 3) = 400*160+122;
   P(144, 0) = 400*122+159;
   P(144, 1) = 400*159+197;
   P(144, 2) = 400*197+160;
   P(144, 3) = 400*160+122;
   P(145, 0) = 400*123+126;
   P(145, 1) = 400*126+164;
   P(145, 2) = 400*164+161;
   P(145, 3) = 400*161+123;
   P(146, 0) = 400*124+125;
   P(146, 1) = 400*125+127;
   P(146, 2) = 400*127+126;
   P(146, 3) = 400*126+124;
   P(147, 0) = 400*125+127;
   P(147, 1) = 400*127+130;
   P(147, 2) = 400*130+128;
   P(147, 3) = 400*128+125;
   P(148, 0) = 400*126+127;
   P(148, 1) = 400*127+165;
   P(148, 2) = 400*165+164;
   P(148, 3) = 400*164+126;
   P(149, 0) = 400*127+130;
   P(149, 1) = 400*130+168;
   P(149, 2) = 400*168+165;
   P(149, 3) = 400*165+127;
   P(150, 0) = 400*128+129;
   P(150, 1) = 400*129+131;
   P(150, 2) = 400*131+130;
   P(150, 3) = 400*130+128;
   P(151, 0) = 400*129+131;
   P(151, 1) = 400*131+134;
   P(151, 2) = 400*134+132;
   P(151, 3) = 400*132+129;
   P(152, 0) = 400*130+131;
   P(152, 1) = 400*131+169;
   P(152, 2) = 400*169+168;
   P(152, 3) = 400*168+130;
   P(153, 0) = 400*131+134;
   P(153, 1) = 400*134+172;
   P(153, 2) = 400*172+169;
   P(153, 3) = 400*169+131;
   P(154, 0) = 400*132+133;
   P(154, 1) = 400*133+135;
   P(154, 2) = 400*135+134;
   P(154, 3) = 400*134+132;
   P(155, 0) = 400*133+135;
   P(155, 1) = 400*135+138;
   P(155, 2) = 400*138+136;
   P(155, 3) = 400*136+133;
   P(156, 0) = 400*134+135;
   P(156, 1) = 400*135+173;
   P(156, 2) = 400*173+172;
   P(156, 3) = 400*172+134;
   P(157, 0) = 400*135+138;
   P(157, 1) = 400*138+176;
   P(157, 2) = 400*176+173;
   P(157, 3) = 400*173+135;
   P(158, 0) = 400*136+137;
   P(158, 1) = 400*137+139;
   P(158, 2) = 400*139+138;
   P(158, 3) = 400*138+136;
   P(159, 0) = 400*137+139;
   P(159, 1) = 400*139+142;
   P(159, 2) = 400*142+140;
   P(159, 3) = 400*140+137;
   P(160, 0) = 400*138+139;
   P(160, 1) = 400*139+177;
   P(160, 2) = 400*177+176;
   P(160, 3) = 400*176+138;
   P(161, 0) = 400*139+142;
   P(161, 1) = 400*142+180;
   P(161, 2) = 400*180+177;
   P(161, 3) = 400*177+139;
   P(162, 0) = 400*140+141;
   P(162, 1) = 400*141+143;
   P(162, 2) = 400*143+142;
   P(162, 3) = 400*142+140;
   P(163, 0) = 400*141+143;
   P(163, 1) = 400*143+146;
   P(163, 2) = 400*146+144;
   P(163, 3) = 400*144+141;
   P(164, 0) = 400*142+143;
   P(164, 1) = 400*143+181;
   P(164, 2) = 400*181+180;
   P(164, 3) = 400*180+142;
   P(165, 0) = 400*143+146;
   P(165, 1) = 400*146+184;
   P(165, 2) = 400*184+181;
   P(165, 3) = 400*181+143;
   P(166, 0) = 400*144+145;
   P(166, 1) = 400*145+147;
   P(166, 2) = 400*147+146;
   P(166, 3) = 400*146+144;
   P(167, 0) = 400*145+147;
   P(167, 1) = 400*147+150;
   P(167, 2) = 400*150+148;
   P(167, 3) = 400*148+145;
   P(168, 0) = 400*146+147;
   P(168, 1) = 400*147+185;
   P(168, 2) = 400*185+184;
   P(168, 3) = 400*184+146;
   P(169, 0) = 400*147+150;
   P(169, 1) = 400*150+188;
   P(169, 2) = 400*188+185;
   P(169, 3) = 400*185+147;
   P(170, 0) = 400*148+149;
   P(170, 1) = 400*149+151;
   P(170, 2) = 400*151+150;
   P(170, 3) = 400*150+148;
   P(171, 0) = 400*149+151;
   P(171, 1) = 400*151+154;
   P(171, 2) = 400*154+152;
   P(171, 3) = 400*152+149;
   P(172, 0) = 400*150+151;
   P(172, 1) = 400*151+189;
   P(172, 2) = 400*189+188;
   P(172, 3) = 400*188+150;
   P(173, 0) = 400*151+154;
   P(173, 1) = 400*154+192;
   P(173, 2) = 400*192+189;
   P(173, 3) = 400*189+151;
   P(174, 0) = 400*152+153;
   P(174, 1) = 400*153+155;
   P(174, 2) = 400*155+154;
   P(174, 3) = 400*154+152;
   P(175, 0) = 400*153+155;
   P(175, 1) = 400*155+158;
   P(175, 2) = 400*158+156;
   P(175, 3) = 400*156+153;
   P(176, 0) = 400*154+155;
   P(176, 1) = 400*155+193;
   P(176, 2) = 400*193+192;
   P(176, 3) = 400*192+154;
   P(177, 0) = 400*155+158;
   P(177, 1) = 400*158+196;
   P(177, 2) = 400*196+193;
   P(177, 3) = 400*193+155;
   P(178, 0) = 400*156+157;
   P(178, 1) = 400*157+159;
   P(178, 2) = 400*159+158;
   P(178, 3) = 400*158+156;
   P(179, 0) = 400*158+159;
   P(179, 1) = 400*159+197;
   P(179, 2) = 400*197+196;
   P(179, 3) = 400*196+158;
   P(180, 0) = 400*160+161;
   P(180, 1) = 400*161+163;
   P(180, 2) = 400*163+162;
   P(180, 3) = 400*162+160;
   P(181, 0) = 400*160+162;
   P(181, 1) = 400*162+199;
   P(181, 2) = 400*199+197;
   P(181, 3) = 400*197+160;
   P(182, 0) = 400*161+163;
   P(182, 1) = 400*163+166;
   P(182, 2) = 400*166+164;
   P(182, 3) = 400*164+161;
   P(183, 0) = 400*162+163;
   P(183, 1) = 400*163+201;
   P(183, 2) = 400*201+200;
   P(183, 3) = 400*200+162;
   P(184, 0) = 400*162+199;
   P(184, 1) = 400*199+237;
   P(184, 2) = 400*237+200;
   P(184, 3) = 400*200+162;
   P(185, 0) = 400*163+166;
   P(185, 1) = 400*166+204;
   P(185, 2) = 400*204+201;
   P(185, 3) = 400*201+163;
   P(186, 0) = 400*164+165;
   P(186, 1) = 400*165+167;
   P(186, 2) = 400*167+166;
   P(186, 3) = 400*166+164;
   P(187, 0) = 400*165+167;
   P(187, 1) = 400*167+170;
   P(187, 2) = 400*170+168;
   P(187, 3) = 400*168+165;
   P(188, 0) = 400*166+167;
   P(188, 1) = 400*167+205;
   P(188, 2) = 400*205+204;
   P(188, 3) = 400*204+166;
   P(189, 0) = 400*167+170;
   P(189, 1) = 400*170+208;
   P(189, 2) = 400*208+205;
   P(189, 3) = 400*205+167;
   P(190, 0) = 400*168+169;
   P(190, 1) = 400*169+171;
   P(190, 2) = 400*171+170;
   P(190, 3) = 400*170+168;
   P(191, 0) = 400*169+171;
   P(191, 1) = 400*171+174;
   P(191, 2) = 400*174+172;
   P(191, 3) = 400*172+169;
   P(192, 0) = 400*170+171;
   P(192, 1) = 400*171+209;
   P(192, 2) = 400*209+208;
   P(192, 3) = 400*208+170;
   P(193, 0) = 400*171+174;
   P(193, 1) = 400*174+212;
   P(193, 2) = 400*212+209;
   P(193, 3) = 400*209+171;
   P(194, 0) = 400*172+173;
   P(194, 1) = 400*173+175;
   P(194, 2) = 400*175+174;
   P(194, 3) = 400*174+172;
   P(195, 0) = 400*173+175;
   P(195, 1) = 400*175+178;
   P(195, 2) = 400*178+176;
   P(195, 3) = 400*176+173;
   P(196, 0) = 400*174+175;
   P(196, 1) = 400*175+213;
   P(196, 2) = 400*213+212;
   P(196, 3) = 400*212+174;
   P(197, 0) = 400*175+178;
   P(197, 1) = 400*178+216;
   P(197, 2) = 400*216+213;
   P(197, 3) = 400*213+175;
   P(198, 0) = 400*176+177;
   P(198, 1) = 400*177+179;
   P(198, 2) = 400*179+178;
   P(198, 3) = 400*178+176;
   P(199, 0) = 400*177+179;
   P(199, 1) = 400*179+182;
   P(199, 2) = 400*182+180;
   P(199, 3) = 400*180+177;
   P(200, 0) = 400*178+179;
   P(200, 1) = 400*179+217;
   P(200, 2) = 400*217+216;
   P(200, 3) = 400*216+178;
   P(201, 0) = 400*179+182;
   P(201, 1) = 400*182+220;
   P(201, 2) = 400*220+217;
   P(201, 3) = 400*217+179;
   P(202, 0) = 400*180+181;
   P(202, 1) = 400*181+183;
   P(202, 2) = 400*183+182;
   P(202, 3) = 400*182+180;
   P(203, 0) = 400*181+183;
   P(203, 1) = 400*183+186;
   P(203, 2) = 400*186+184;
   P(203, 3) = 400*184+181;
   P(204, 0) = 400*182+183;
   P(204, 1) = 400*183+221;
   P(204, 2) = 400*221+220;
   P(204, 3) = 400*220+182;
   P(205, 0) = 400*183+186;
   P(205, 1) = 400*186+224;
   P(205, 2) = 400*224+221;
   P(205, 3) = 400*221+183;
   P(206, 0) = 400*184+185;
   P(206, 1) = 400*185+187;
   P(206, 2) = 400*187+186;
   P(206, 3) = 400*186+184;
   P(207, 0) = 400*185+187;
   P(207, 1) = 400*187+190;
   P(207, 2) = 400*190+188;
   P(207, 3) = 400*188+185;
   P(208, 0) = 400*186+187;
   P(208, 1) = 400*187+225;
   P(208, 2) = 400*225+224;
   P(208, 3) = 400*224+186;
   P(209, 0) = 400*187+190;
   P(209, 1) = 400*190+228;
   P(209, 2) = 400*228+225;
   P(209, 3) = 400*225+187;
   P(210, 0) = 400*188+189;
   P(210, 1) = 400*189+191;
   P(210, 2) = 400*191+190;
   P(210, 3) = 400*190+188;
   P(211, 0) = 400*189+191;
   P(211, 1) = 400*191+194;
   P(211, 2) = 400*194+192;
   P(211, 3) = 400*192+189;
   P(212, 0) = 400*190+191;
   P(212, 1) = 400*191+229;
   P(212, 2) = 400*229+228;
   P(212, 3) = 400*228+190;
   P(213, 0) = 400*191+194;
   P(213, 1) = 400*194+232;
   P(213, 2) = 400*232+229;
   P(213, 3) = 400*229+191;
   P(214, 0) = 400*192+193;
   P(214, 1) = 400*193+195;
   P(214, 2) = 400*195+194;
   P(214, 3) = 400*194+192;
   P(215, 0) = 400*193+195;
   P(215, 1) = 400*195+198;
   P(215, 2) = 400*198+196;
   P(215, 3) = 400*196+193;
   P(216, 0) = 400*194+195;
   P(216, 1) = 400*195+233;
   P(216, 2) = 400*233+232;
   P(216, 3) = 400*232+194;
   P(217, 0) = 400*195+198;
   P(217, 1) = 400*198+236;
   P(217, 2) = 400*236+233;
   P(217, 3) = 400*233+195;
   P(218, 0) = 400*196+197;
   P(218, 1) = 400*197+199;
   P(218, 2) = 400*199+198;
   P(218, 3) = 400*198+196;
   P(219, 0) = 400*198+199;
   P(219, 1) = 400*199+237;
   P(219, 2) = 400*237+236;
   P(219, 3) = 400*236+198;
   P(220, 0) = 400*200+201;
   P(220, 1) = 400*201+203;
   P(220, 2) = 400*203+202;
   P(220, 3) = 400*202+200;
   P(221, 0) = 400*200+202;
   P(221, 1) = 400*202+239;
   P(221, 2) = 400*239+237;
   P(221, 3) = 400*237+200;
   P(222, 0) = 400*201+203;
   P(222, 1) = 400*203+206;
   P(222, 2) = 400*206+204;
   P(222, 3) = 400*204+201;
   P(223, 0) = 400*202+203;
   P(223, 1) = 400*203+241;
   P(223, 2) = 400*241+240;
   P(223, 3) = 400*240+202;
   P(224, 0) = 400*202+239;
   P(224, 1) = 400*239+277;
   P(224, 2) = 400*277+240;
   P(224, 3) = 400*240+202;
   P(225, 0) = 400*203+206;
   P(225, 1) = 400*206+244;
   P(225, 2) = 400*244+241;
   P(225, 3) = 400*241+203;
   P(226, 0) = 400*204+205;
   P(226, 1) = 400*205+207;
   P(226, 2) = 400*207+206;
   P(226, 3) = 400*206+204;
   P(227, 0) = 400*205+207;
   P(227, 1) = 400*207+210;
   P(227, 2) = 400*210+208;
   P(227, 3) = 400*208+205;
   P(228, 0) = 400*206+207;
   P(228, 1) = 400*207+245;
   P(228, 2) = 400*245+244;
   P(228, 3) = 400*244+206;
   P(229, 0) = 400*207+210;
   P(229, 1) = 400*210+248;
   P(229, 2) = 400*248+245;
   P(229, 3) = 400*245+207;
   P(230, 0) = 400*208+209;
   P(230, 1) = 400*209+211;
   P(230, 2) = 400*211+210;
   P(230, 3) = 400*210+208;
   P(231, 0) = 400*209+211;
   P(231, 1) = 400*211+214;
   P(231, 2) = 400*214+212;
   P(231, 3) = 400*212+209;
   P(232, 0) = 400*210+211;
   P(232, 1) = 400*211+249;
   P(232, 2) = 400*249+248;
   P(232, 3) = 400*248+210;
   P(233, 0) = 400*211+214;
   P(233, 1) = 400*214+252;
   P(233, 2) = 400*252+249;
   P(233, 3) = 400*249+211;
   P(234, 0) = 400*212+213;
   P(234, 1) = 400*213+215;
   P(234, 2) = 400*215+214;
   P(234, 3) = 400*214+212;
   P(235, 0) = 400*213+215;
   P(235, 1) = 400*215+218;
   P(235, 2) = 400*218+216;
   P(235, 3) = 400*216+213;
   P(236, 0) = 400*214+215;
   P(236, 1) = 400*215+253;
   P(236, 2) = 400*253+252;
   P(236, 3) = 400*252+214;
   P(237, 0) = 400*215+218;
   P(237, 1) = 400*218+256;
   P(237, 2) = 400*256+253;
   P(237, 3) = 400*253+215;
   P(238, 0) = 400*216+217;
   P(238, 1) = 400*217+219;
   P(238, 2) = 400*219+218;
   P(238, 3) = 400*218+216;
   P(239, 0) = 400*217+219;
   P(239, 1) = 400*219+222;
   P(239, 2) = 400*222+220;
   P(239, 3) = 400*220+217;
   P(240, 0) = 400*218+219;
   P(240, 1) = 400*219+257;
   P(240, 2) = 400*257+256;
   P(240, 3) = 400*256+218;
   P(241, 0) = 400*219+222;
   P(241, 1) = 400*222+260;
   P(241, 2) = 400*260+257;
   P(241, 3) = 400*257+219;
   P(242, 0) = 400*220+221;
   P(242, 1) = 400*221+223;
   P(242, 2) = 400*223+222;
   P(242, 3) = 400*222+220;
   P(243, 0) = 400*221+223;
   P(243, 1) = 400*223+226;
   P(243, 2) = 400*226+224;
   P(243, 3) = 400*224+221;
   P(244, 0) = 400*222+223;
   P(244, 1) = 400*223+261;
   P(244, 2) = 400*261+260;
   P(244, 3) = 400*260+222;
   P(245, 0) = 400*223+226;
   P(245, 1) = 400*226+264;
   P(245, 2) = 400*264+261;
   P(245, 3) = 400*261+223;
   P(246, 0) = 400*224+225;
   P(246, 1) = 400*225+227;
   P(246, 2) = 400*227+226;
   P(246, 3) = 400*226+224;
   P(247, 0) = 400*225+227;
   P(247, 1) = 400*227+230;
   P(247, 2) = 400*230+228;
   P(247, 3) = 400*228+225;
   P(248, 0) = 400*226+227;
   P(248, 1) = 400*227+265;
   P(248, 2) = 400*265+264;
   P(248, 3) = 400*264+226;
   P(249, 0) = 400*227+230;
   P(249, 1) = 400*230+268;
   P(249, 2) = 400*268+265;
   P(249, 3) = 400*265+227;
   P(250, 0) = 400*228+229;
   P(250, 1) = 400*229+231;
   P(250, 2) = 400*231+230;
   P(250, 3) = 400*230+228;
   P(251, 0) = 400*229+231;
   P(251, 1) = 400*231+234;
   P(251, 2) = 400*234+232;
   P(251, 3) = 400*232+229;
   P(252, 0) = 400*230+231;
   P(252, 1) = 400*231+269;
   P(252, 2) = 400*269+268;
   P(252, 3) = 400*268+230;
   P(253, 0) = 400*231+234;
   P(253, 1) = 400*234+272;
   P(253, 2) = 400*272+269;
   P(253, 3) = 400*269+231;
   P(254, 0) = 400*232+233;
   P(254, 1) = 400*233+235;
   P(254, 2) = 400*235+234;
   P(254, 3) = 400*234+232;
   P(255, 0) = 400*233+235;
   P(255, 1) = 400*235+238;
   P(255, 2) = 400*238+236;
   P(255, 3) = 400*236+233;
   P(256, 0) = 400*234+235;
   P(256, 1) = 400*235+273;
   P(256, 2) = 400*273+272;
   P(256, 3) = 400*272+234;
   P(257, 0) = 400*235+238;
   P(257, 1) = 400*238+276;
   P(257, 2) = 400*276+273;
   P(257, 3) = 400*273+235;
   P(258, 0) = 400*236+237;
   P(258, 1) = 400*237+239;
   P(258, 2) = 400*239+238;
   P(258, 3) = 400*238+236;
   P(259, 0) = 400*238+239;
   P(259, 1) = 400*239+277;
   P(259, 2) = 400*277+276;
   P(259, 3) = 400*276+238;
   P(260, 0) = 400*240+241;
   P(260, 1) = 400*241+243;
   P(260, 2) = 400*243+242;
   P(260, 3) = 400*242+240;
   P(261, 0) = 400*240+242;
   P(261, 1) = 400*242+279;
   P(261, 2) = 400*279+277;
   P(261, 3) = 400*277+240;
   P(262, 0) = 400*241+243;
   P(262, 1) = 400*243+246;
   P(262, 2) = 400*246+244;
   P(262, 3) = 400*244+241;
   P(263, 0) = 400*242+243;
   P(263, 1) = 400*243+281;
   P(263, 2) = 400*281+280;
   P(263, 3) = 400*280+242;
   P(264, 0) = 400*242+279;
   P(264, 1) = 400*279+317;
   P(264, 2) = 400*317+280;
   P(264, 3) = 400*280+242;
   P(265, 0) = 400*243+246;
   P(265, 1) = 400*246+284;
   P(265, 2) = 400*284+281;
   P(265, 3) = 400*281+243;
   P(266, 0) = 400*244+245;
   P(266, 1) = 400*245+247;
   P(266, 2) = 400*247+246;
   P(266, 3) = 400*246+244;
   P(267, 0) = 400*245+247;
   P(267, 1) = 400*247+250;
   P(267, 2) = 400*250+248;
   P(267, 3) = 400*248+245;
   P(268, 0) = 400*246+247;
   P(268, 1) = 400*247+285;
   P(268, 2) = 400*285+284;
   P(268, 3) = 400*284+246;
   P(269, 0) = 400*247+250;
   P(269, 1) = 400*250+288;
   P(269, 2) = 400*288+285;
   P(269, 3) = 400*285+247;
   P(270, 0) = 400*248+249;
   P(270, 1) = 400*249+251;
   P(270, 2) = 400*251+250;
   P(270, 3) = 400*250+248;
   P(271, 0) = 400*249+251;
   P(271, 1) = 400*251+254;
   P(271, 2) = 400*254+252;
   P(271, 3) = 400*252+249;
   P(272, 0) = 400*250+251;
   P(272, 1) = 400*251+289;
   P(272, 2) = 400*289+288;
   P(272, 3) = 400*288+250;
   P(273, 0) = 400*251+254;
   P(273, 1) = 400*254+292;
   P(273, 2) = 400*292+289;
   P(273, 3) = 400*289+251;
   P(274, 0) = 400*252+253;
   P(274, 1) = 400*253+255;
   P(274, 2) = 400*255+254;
   P(274, 3) = 400*254+252;
   P(275, 0) = 400*253+255;
   P(275, 1) = 400*255+258;
   P(275, 2) = 400*258+256;
   P(275, 3) = 400*256+253;
   P(276, 0) = 400*254+255;
   P(276, 1) = 400*255+293;
   P(276, 2) = 400*293+292;
   P(276, 3) = 400*292+254;
   P(277, 0) = 400*255+258;
   P(277, 1) = 400*258+296;
   P(277, 2) = 400*296+293;
   P(277, 3) = 400*293+255;
   P(278, 0) = 400*256+257;
   P(278, 1) = 400*257+259;
   P(278, 2) = 400*259+258;
   P(278, 3) = 400*258+256;
   P(279, 0) = 400*257+259;
   P(279, 1) = 400*259+262;
   P(279, 2) = 400*262+260;
   P(279, 3) = 400*260+257;
   P(280, 0) = 400*258+259;
   P(280, 1) = 400*259+297;
   P(280, 2) = 400*297+296;
   P(280, 3) = 400*296+258;
   P(281, 0) = 400*259+262;
   P(281, 1) = 400*262+300;
   P(281, 2) = 400*300+297;
   P(281, 3) = 400*297+259;
   P(282, 0) = 400*260+261;
   P(282, 1) = 400*261+263;
   P(282, 2) = 400*263+262;
   P(282, 3) = 400*262+260;
   P(283, 0) = 400*261+263;
   P(283, 1) = 400*263+266;
   P(283, 2) = 400*266+264;
   P(283, 3) = 400*264+261;
   P(284, 0) = 400*262+263;
   P(284, 1) = 400*263+301;
   P(284, 2) = 400*301+300;
   P(284, 3) = 400*300+262;
   P(285, 0) = 400*263+266;
   P(285, 1) = 400*266+304;
   P(285, 2) = 400*304+301;
   P(285, 3) = 400*301+263;
   P(286, 0) = 400*264+265;
   P(286, 1) = 400*265+267;
   P(286, 2) = 400*267+266;
   P(286, 3) = 400*266+264;
   P(287, 0) = 400*265+267;
   P(287, 1) = 400*267+270;
   P(287, 2) = 400*270+268;
   P(287, 3) = 400*268+265;
   P(288, 0) = 400*266+267;
   P(288, 1) = 400*267+305;
   P(288, 2) = 400*305+304;
   P(288, 3) = 400*304+266;
   P(289, 0) = 400*267+270;
   P(289, 1) = 400*270+308;
   P(289, 2) = 400*308+305;
   P(289, 3) = 400*305+267;
   P(290, 0) = 400*268+269;
   P(290, 1) = 400*269+271;
   P(290, 2) = 400*271+270;
   P(290, 3) = 400*270+268;
   P(291, 0) = 400*269+271;
   P(291, 1) = 400*271+274;
   P(291, 2) = 400*274+272;
   P(291, 3) = 400*272+269;
   P(292, 0) = 400*270+271;
   P(292, 1) = 400*271+309;
   P(292, 2) = 400*309+308;
   P(292, 3) = 400*308+270;
   P(293, 0) = 400*271+274;
   P(293, 1) = 400*274+312;
   P(293, 2) = 400*312+309;
   P(293, 3) = 400*309+271;
   P(294, 0) = 400*272+273;
   P(294, 1) = 400*273+275;
   P(294, 2) = 400*275+274;
   P(294, 3) = 400*274+272;
   P(295, 0) = 400*273+275;
   P(295, 1) = 400*275+278;
   P(295, 2) = 400*278+276;
   P(295, 3) = 400*276+273;
   P(296, 0) = 400*274+275;
   P(296, 1) = 400*275+313;
   P(296, 2) = 400*313+312;
   P(296, 3) = 400*312+274;
   P(297, 0) = 400*275+278;
   P(297, 1) = 400*278+316;
   P(297, 2) = 400*316+313;
   P(297, 3) = 400*313+275;
   P(298, 0) = 400*276+277;
   P(298, 1) = 400*277+279;
   P(298, 2) = 400*279+278;
   P(298, 3) = 400*278+276;
   P(299, 0) = 400*278+279;
   P(299, 1) = 400*279+317;
   P(299, 2) = 400*317+316;
   P(299, 3) = 400*316+278;
   P(300, 0) = 400*280+281;
   P(300, 1) = 400*281+283;
   P(300, 2) = 400*283+282;
   P(300, 3) = 400*282+280;
   P(301, 0) = 400*280+282;
   P(301, 1) = 400*282+319;
   P(301, 2) = 400*319+317;
   P(301, 3) = 400*317+280;
   P(302, 0) = 400*281+283;
   P(302, 1) = 400*283+286;
   P(302, 2) = 400*286+284;
   P(302, 3) = 400*284+281;
   P(303, 0) = 400*282+283;
   P(303, 1) = 400*283+321;
   P(303, 2) = 400*321+320;
   P(303, 3) = 400*320+282;
   P(304, 0) = 400*282+319;
   P(304, 1) = 400*319+357;
   P(304, 2) = 400*357+320;
   P(304, 3) = 400*320+282;
   P(305, 0) = 400*283+286;
   P(305, 1) = 400*286+324;
   P(305, 2) = 400*324+321;
   P(305, 3) = 400*321+283;
   P(306, 0) = 400*284+285;
   P(306, 1) = 400*285+287;
   P(306, 2) = 400*287+286;
   P(306, 3) = 400*286+284;
   P(307, 0) = 400*285+287;
   P(307, 1) = 400*287+290;
   P(307, 2) = 400*290+288;
   P(307, 3) = 400*288+285;
   P(308, 0) = 400*286+287;
   P(308, 1) = 400*287+325;
   P(308, 2) = 400*325+324;
   P(308, 3) = 400*324+286;
   P(309, 0) = 400*287+290;
   P(309, 1) = 400*290+328;
   P(309, 2) = 400*328+325;
   P(309, 3) = 400*325+287;
   P(310, 0) = 400*288+289;
   P(310, 1) = 400*289+291;
   P(310, 2) = 400*291+290;
   P(310, 3) = 400*290+288;
   P(311, 0) = 400*289+291;
   P(311, 1) = 400*291+294;
   P(311, 2) = 400*294+292;
   P(311, 3) = 400*292+289;
   P(312, 0) = 400*290+291;
   P(312, 1) = 400*291+329;
   P(312, 2) = 400*329+328;
   P(312, 3) = 400*328+290;
   P(313, 0) = 400*291+294;
   P(313, 1) = 400*294+332;
   P(313, 2) = 400*332+329;
   P(313, 3) = 400*329+291;
   P(314, 0) = 400*292+293;
   P(314, 1) = 400*293+295;
   P(314, 2) = 400*295+294;
   P(314, 3) = 400*294+292;
   P(315, 0) = 400*293+295;
   P(315, 1) = 400*295+298;
   P(315, 2) = 400*298+296;
   P(315, 3) = 400*296+293;
   P(316, 0) = 400*294+295;
   P(316, 1) = 400*295+333;
   P(316, 2) = 400*333+332;
   P(316, 3) = 400*332+294;
   P(317, 0) = 400*295+298;
   P(317, 1) = 400*298+336;
   P(317, 2) = 400*336+333;
   P(317, 3) = 400*333+295;
   P(318, 0) = 400*296+297;
   P(318, 1) = 400*297+299;
   P(318, 2) = 400*299+298;
   P(318, 3) = 400*298+296;
   P(319, 0) = 400*297+299;
   P(319, 1) = 400*299+302;
   P(319, 2) = 400*302+300;
   P(319, 3) = 400*300+297;
   P(320, 0) = 400*298+299;
   P(320, 1) = 400*299+337;
   P(320, 2) = 400*337+336;
   P(320, 3) = 400*336+298;
   P(321, 0) = 400*299+302;
   P(321, 1) = 400*302+340;
   P(321, 2) = 400*340+337;
   P(321, 3) = 400*337+299;
   P(322, 0) = 400*300+301;
   P(322, 1) = 400*301+303;
   P(322, 2) = 400*303+302;
   P(322, 3) = 400*302+300;
   P(323, 0) = 400*301+303;
   P(323, 1) = 400*303+306;
   P(323, 2) = 400*306+304;
   P(323, 3) = 400*304+301;
   P(324, 0) = 400*302+303;
   P(324, 1) = 400*303+341;
   P(324, 2) = 400*341+340;
   P(324, 3) = 400*340+302;
   P(325, 0) = 400*303+306;
   P(325, 1) = 400*306+344;
   P(325, 2) = 400*344+341;
   P(325, 3) = 400*341+303;
   P(326, 0) = 400*304+305;
   P(326, 1) = 400*305+307;
   P(326, 2) = 400*307+306;
   P(326, 3) = 400*306+304;
   P(327, 0) = 400*305+307;
   P(327, 1) = 400*307+310;
   P(327, 2) = 400*310+308;
   P(327, 3) = 400*308+305;
   P(328, 0) = 400*306+307;
   P(328, 1) = 400*307+345;
   P(328, 2) = 400*345+344;
   P(328, 3) = 400*344+306;
   P(329, 0) = 400*307+310;
   P(329, 1) = 400*310+348;
   P(329, 2) = 400*348+345;
   P(329, 3) = 400*345+307;
   P(330, 0) = 400*308+309;
   P(330, 1) = 400*309+311;
   P(330, 2) = 400*311+310;
   P(330, 3) = 400*310+308;
   P(331, 0) = 400*309+311;
   P(331, 1) = 400*311+314;
   P(331, 2) = 400*314+312;
   P(331, 3) = 400*312+309;
   P(332, 0) = 400*310+311;
   P(332, 1) = 400*311+349;
   P(332, 2) = 400*349+348;
   P(332, 3) = 400*348+310;
   P(333, 0) = 400*311+314;
   P(333, 1) = 400*314+352;
   P(333, 2) = 400*352+349;
   P(333, 3) = 400*349+311;
   P(334, 0) = 400*312+313;
   P(334, 1) = 400*313+315;
   P(334, 2) = 400*315+314;
   P(334, 3) = 400*314+312;
   P(335, 0) = 400*313+315;
   P(335, 1) = 400*315+318;
   P(335, 2) = 400*318+316;
   P(335, 3) = 400*316+313;
   P(336, 0) = 400*314+315;
   P(336, 1) = 400*315+353;
   P(336, 2) = 400*353+352;
   P(336, 3) = 400*352+314;
   P(337, 0) = 400*315+318;
   P(337, 1) = 400*318+356;
   P(337, 2) = 400*356+353;
   P(337, 3) = 400*353+315;
   P(338, 0) = 400*316+317;
   P(338, 1) = 400*317+319;
   P(338, 2) = 400*319+318;
   P(338, 3) = 400*318+316;
   P(339, 0) = 400*318+319;
   P(339, 1) = 400*319+357;
   P(339, 2) = 400*357+356;
   P(339, 3) = 400*356+318;
   P(340, 0) = 400*320+321;
   P(340, 1) = 400*321+323;
   P(340, 2) = 400*323+322;
   P(340, 3) = 400*322+320;
   P(341, 0) = 400*320+322;
   P(341, 1) = 400*322+359;
   P(341, 2) = 400*359+357;
   P(341, 3) = 400*357+320;
   P(342, 0) = 400*321+323;
   P(342, 1) = 400*323+326;
   P(342, 2) = 400*326+324;
   P(342, 3) = 400*324+321;
   P(343, 0) = 400*322+323;
   P(343, 1) = 400*323+361;
   P(343, 2) = 400*361+360;
   P(343, 3) = 400*360+322;
   P(344, 0) = 400*322+359;
   P(344, 1) = 400*359+397;
   P(344, 2) = 400*397+360;
   P(344, 3) = 400*360+322;
   P(345, 0) = 400*323+326;
   P(345, 1) = 400*326+364;
   P(345, 2) = 400*364+361;
   P(345, 3) = 400*361+323;
   P(346, 0) = 400*324+325;
   P(346, 1) = 400*325+327;
   P(346, 2) = 400*327+326;
   P(346, 3) = 400*326+324;
   P(347, 0) = 400*325+327;
   P(347, 1) = 400*327+330;
   P(347, 2) = 400*330+328;
   P(347, 3) = 400*328+325;
   P(348, 0) = 400*326+327;
   P(348, 1) = 400*327+365;
   P(348, 2) = 400*365+364;
   P(348, 3) = 400*364+326;
   P(349, 0) = 400*327+330;
   P(349, 1) = 400*330+368;
   P(349, 2) = 400*368+365;
   P(349, 3) = 400*365+327;
   P(350, 0) = 400*328+329;
   P(350, 1) = 400*329+331;
   P(350, 2) = 400*331+330;
   P(350, 3) = 400*330+328;
   P(351, 0) = 400*329+331;
   P(351, 1) = 400*331+334;
   P(351, 2) = 400*334+332;
   P(351, 3) = 400*332+329;
   P(352, 0) = 400*330+331;
   P(352, 1) = 400*331+369;
   P(352, 2) = 400*369+368;
   P(352, 3) = 400*368+330;
   P(353, 0) = 400*331+334;
   P(353, 1) = 400*334+372;
   P(353, 2) = 400*372+369;
   P(353, 3) = 400*369+331;
   P(354, 0) = 400*332+333;
   P(354, 1) = 400*333+335;
   P(354, 2) = 400*335+334;
   P(354, 3) = 400*334+332;
   P(355, 0) = 400*333+335;
   P(355, 1) = 400*335+338;
   P(355, 2) = 400*338+336;
   P(355, 3) = 400*336+333;
   P(356, 0) = 400*334+335;
   P(356, 1) = 400*335+373;
   P(356, 2) = 400*373+372;
   P(356, 3) = 400*372+334;
   P(357, 0) = 400*335+338;
   P(357, 1) = 400*338+376;
   P(357, 2) = 400*376+373;
   P(357, 3) = 400*373+335;
   P(358, 0) = 400*336+337;
   P(358, 1) = 400*337+339;
   P(358, 2) = 400*339+338;
   P(358, 3) = 400*338+336;
   P(359, 0) = 400*337+339;
   P(359, 1) = 400*339+342;
   P(359, 2) = 400*342+340;
   P(359, 3) = 400*340+337;
   P(360, 0) = 400*338+339;
   P(360, 1) = 400*339+377;
   P(360, 2) = 400*377+376;
   P(360, 3) = 400*376+338;
   P(361, 0) = 400*339+342;
   P(361, 1) = 400*342+380;
   P(361, 2) = 400*380+377;
   P(361, 3) = 400*377+339;
   P(362, 0) = 400*340+341;
   P(362, 1) = 400*341+343;
   P(362, 2) = 400*343+342;
   P(362, 3) = 400*342+340;
   P(363, 0) = 400*341+343;
   P(363, 1) = 400*343+346;
   P(363, 2) = 400*346+344;
   P(363, 3) = 400*344+341;
   P(364, 0) = 400*342+343;
   P(364, 1) = 400*343+381;
   P(364, 2) = 400*381+380;
   P(364, 3) = 400*380+342;
   P(365, 0) = 400*343+346;
   P(365, 1) = 400*346+384;
   P(365, 2) = 400*384+381;
   P(365, 3) = 400*381+343;
   P(366, 0) = 400*344+345;
   P(366, 1) = 400*345+347;
   P(366, 2) = 400*347+346;
   P(366, 3) = 400*346+344;
   P(367, 0) = 400*345+347;
   P(367, 1) = 400*347+350;
   P(367, 2) = 400*350+348;
   P(367, 3) = 400*348+345;
   P(368, 0) = 400*346+347;
   P(368, 1) = 400*347+385;
   P(368, 2) = 400*385+384;
   P(368, 3) = 400*384+346;
   P(369, 0) = 400*347+350;
   P(369, 1) = 400*350+388;
   P(369, 2) = 400*388+385;
   P(369, 3) = 400*385+347;
   P(370, 0) = 400*348+349;
   P(370, 1) = 400*349+351;
   P(370, 2) = 400*351+350;
   P(370, 3) = 400*350+348;
   P(371, 0) = 400*349+351;
   P(371, 1) = 400*351+354;
   P(371, 2) = 400*354+352;
   P(371, 3) = 400*352+349;
   P(372, 0) = 400*350+351;
   P(372, 1) = 400*351+389;
   P(372, 2) = 400*389+388;
   P(372, 3) = 400*388+350;
   P(373, 0) = 400*351+354;
   P(373, 1) = 400*354+392;
   P(373, 2) = 400*392+389;
   P(373, 3) = 400*389+351;
   P(374, 0) = 400*352+353;
   P(374, 1) = 400*353+355;
   P(374, 2) = 400*355+354;
   P(374, 3) = 400*354+352;
   P(375, 0) = 400*353+355;
   P(375, 1) = 400*355+358;
   P(375, 2) = 400*358+356;
   P(375, 3) = 400*356+353;
   P(376, 0) = 400*354+355;
   P(376, 1) = 400*355+393;
   P(376, 2) = 400*393+392;
   P(376, 3) = 400*392+354;
   P(377, 0) = 400*355+358;
   P(377, 1) = 400*358+396;
   P(377, 2) = 400*396+393;
   P(377, 3) = 400*393+355;
   P(378, 0) = 400*356+357;
   P(378, 1) = 400*357+359;
   P(378, 2) = 400*359+358;
   P(378, 3) = 400*358+356;
   P(379, 0) = 400*358+359;
   P(379, 1) = 400*359+397;
   P(379, 2) = 400*397+396;
   P(379, 3) = 400*396+358;
   P(380, 0) = 400*360+361;
   P(380, 1) = 400*361+363;
   P(380, 2) = 400*363+362;
   P(380, 3) = 400*362+360;
   P(381, 0) = 400*360+362;
   P(381, 1) = 400*362+399;
   P(381, 2) = 400*399+397;
   P(381, 3) = 400*397+360;
   P(382, 0) = 400*361+363;
   P(382, 1) = 400*363+366;
   P(382, 2) = 400*366+364;
   P(382, 3) = 400*364+361;
   P(383, 0) = 400*364+365;
   P(383, 1) = 400*365+367;
   P(383, 2) = 400*367+366;
   P(383, 3) = 400*366+364;
   P(384, 0) = 400*365+367;
   P(384, 1) = 400*367+370;
   P(384, 2) = 400*370+368;
   P(384, 3) = 400*368+365;
   P(385, 0) = 400*368+369;
   P(385, 1) = 400*369+371;
   P(385, 2) = 400*371+370;
   P(385, 3) = 400*370+368;
   P(386, 0) = 400*369+371;
   P(386, 1) = 400*371+374;
   P(386, 2) = 400*374+372;
   P(386, 3) = 400*372+369;
   P(387, 0) = 400*372+373;
   P(387, 1) = 400*373+375;
   P(387, 2) = 400*375+374;
   P(387, 3) = 400*374+372;
   P(388, 0) = 400*373+375;
   P(388, 1) = 400*375+378;
   P(388, 2) = 400*378+376;
   P(388, 3) = 400*376+373;
   P(389, 0) = 400*376+377;
   P(389, 1) = 400*377+379;
   P(389, 2) = 400*379+378;
   P(389, 3) = 400*378+376;
   P(390, 0) = 400*377+379;
   P(390, 1) = 400*379+382;
   P(390, 2) = 400*382+380;
   P(390, 3) = 400*380+377;
   P(391, 0) = 400*380+381;
   P(391, 1) = 400*381+383;
   P(391, 2) = 400*383+382;
   P(391, 3) = 400*382+380;
   P(392, 0) = 400*381+383;
   P(392, 1) = 400*383+386;
   P(392, 2) = 400*386+384;
   P(392, 3) = 400*384+381;
   P(393, 0) = 400*384+385;
   P(393, 1) = 400*385+387;
   P(393, 2) = 400*387+386;
   P(393, 3) = 400*386+384;
   P(394, 0) = 400*385+387;
   P(394, 1) = 400*387+390;
   P(394, 2) = 400*390+388;
   P(394, 3) = 400*388+385;
   P(395, 0) = 400*388+389;
   P(395, 1) = 400*389+391;
   P(395, 2) = 400*391+390;
   P(395, 3) = 400*390+388;
   P(396, 0) = 400*389+391;
   P(396, 1) = 400*391+394;
   P(396, 2) = 400*394+392;
   P(396, 3) = 400*392+389;
   P(397, 0) = 400*392+393;
   P(397, 1) = 400*393+395;
   P(397, 2) = 400*395+394;
   P(397, 3) = 400*394+392;
   P(398, 0) = 400*393+395;
   P(398, 1) = 400*395+398;
   P(398, 2) = 400*398+396;
   P(398, 3) = 400*396+393;
   P(399, 0) = 400*396+397;
   P(399, 1) = 400*397+399;
   P(399, 2) = 400*399+398;
   P(399, 3) = 400*398+396;
	 return P;
  }
  